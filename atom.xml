<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitOPEN&#39;s Home</title>
  <icon>https://www.gravatar.com/avatar/df3a6939fdf2d8844d8b24a3726a7ed9</icon>
  <subtitle>Cease to struggle and you cease to live.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.sunjiajia.com/"/>
  <updated>2019-04-22T02:01:15.536Z</updated>
  <id>https://blog.sunjiajia.com/</id>
  
  <author>
    <name>GitOPEN</name>
    <email>gitopen@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>“我的碎碎念&quot;</title>
    <link href="https://blog.sunjiajia.com/2019/04/22/my-tweets/"/>
    <id>https://blog.sunjiajia.com/2019/04/22/my-tweets/</id>
    <published>2019-04-22T01:25:37.000Z</published>
    <updated>2019-04-22T02:01:15.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的碎碎念"><a href="#我的碎碎念" class="headerlink" title="我的碎碎念"></a>我的碎碎念</h2><p>最近发现，我越来越少的会在不经意间去逛社交网络（微博、朋友圈），最多偶尔逛一下v2ex。今天想了想，应该是因为<code>厌烦了各种无聊、杂乱的信息流</code>：一是我这个人喜欢静谧，二是如果真的对<code>娱乐</code>有需求，那么不如去逛逛糗事百科式的短笑话平台，也可以在烦累之余获得较大开心。这篇博文取名为<code>“我的碎碎念”</code>，用来记录我自己的一点感想或思路。“开放性社交平台好似有千万人在等着围观赤裸的身体”般的感受，让我逐渐从内心敬而远之。每次写一点纯粹的东西，却总是不自觉地在咬文嚼字时，潜意识中关注别人的看法。在这个节奏贼快的社会上，片刻的独处和静思，可以给心灵带来最纯粹的享受。    </p><p>我想，做个结尾：在这里，写下最真心的话。    </p><h2 id="2019-04-22-09-41"><a href="#2019-04-22-09-41" class="headerlink" title="2019-04-22 09:41"></a>2019-04-22 09:41</h2><p>昨天是周末，就把电脑上的重要资料备份一下。说到备份这个东西，其实是一件非常重要的事情。重要到什么程度呢？重要到<code>偶尔为之觉得多余，资料丢了喊娘没用</code>的地步。既然决定备份了，那么用什么方式好呢？</p><p>U盘？No，容量小，容易丢；<br>移动硬盘？No，容量大，插着、带着太麻烦；<br>So，云☁️？No，隐私泄露还不够吗，每天骚扰电话接到手软；<br>亦或，NAS？No，成本较高，大材小用，杀鸡焉用牛刀；<br>想了一大圈，终于想到了一个，对于我个人来说，最方便的备份方案：    </p><p>硬件：老旧Thinkpad、移动硬盘<br>软件：Win7➕VirtualBox➕Ubuntu Linux Server➕nextcloud    </p><p>老旧Thinkpad用上Win7系统，偶尔用来看看电视剧和视频；Win7上跑VirtualBox，用来运行Server；Ubuntu Server上部署nextcloud，用来同步备份。</p><p>这样一个组合，很好的满足了我的需求：</p><p>首先，旧电脑可以用来娱乐，主要是用来在家庭健身时看电视连续剧；<br>其次，虚拟机跑Linux Server部署nextcloud，用来备份，可以满足家庭多用户的备份需求。</p><p>也就是说，使用了该备份方案，我可以：<br>1️⃣在回家的时候，打开睡眠中的Thinkpad，将外出时主力机上写的文档和代码，自动同步备份到nextcloud上，并且，可以在家庭健身时用Win7播放视频；<br>2️⃣在外出时，将旧Thinkpad睡眠即可，不用关机，安全省电，方便随时回家打开使用。</p><p>写到这里，我想，如果可以用语音将上述思路用淇县话直接说出来记录下来就更过瘾了。</p><hr><h3 id="未完待续～～"><a href="#未完待续～～" class="headerlink" title="未完待续～～"></a>未完待续～～</h3><ul><li>记录生活中的点滴感悟和思路，不定期更新。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我的碎碎念&quot;&gt;&lt;a href=&quot;#我的碎碎念&quot; class=&quot;headerlink&quot; title=&quot;我的碎碎念&quot;&gt;&lt;/a&gt;我的碎碎念&lt;/h2&gt;&lt;p&gt;最近发现，我越来越少的会在不经意间去逛社交网络（微博、朋友圈），最多偶尔逛一下v2ex。今天想了想，应该是因为&lt;co
      
    
    </summary>
    
      <category term="生活" scheme="https://blog.sunjiajia.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="https://blog.sunjiajia.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Little Tips 记录</title>
    <link href="https://blog.sunjiajia.com/2019/01/09/little-tips/"/>
    <id>https://blog.sunjiajia.com/2019/01/09/little-tips/</id>
    <published>2019-01-09T05:11:11.000Z</published>
    <updated>2019-01-09T08:56:13.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>我的博客好久没有更新过了！太过时的东西，我都想把它们干掉。</p></blockquote><p>这里就用来记录在编程过程中遇到的小问题或者小技巧。</p><h1 id="碎片"><a href="#碎片" class="headerlink" title="碎片"></a>碎片</h1><h2 id="过滤字符串中的emoji表情和符号-Python"><a href="#过滤字符串中的emoji表情和符号-Python" class="headerlink" title="过滤字符串中的emoji表情和符号[Python]"></a>过滤字符串中的emoji表情和符号[Python]</h2><p>最近在抓取了几十万条微博数据，目的是对其进行情感分析，这就需要过滤掉内容中表情等特殊符号。在Google了一圈以后，发现很多方法过滤的效果不好，因此自己记录一下，如何更加全面的过滤掉表情符号。这个方法综合使用了正则表达式和emoji库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emoji</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter_emoji</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        过滤表情。</span></span><br><span class="line"><span class="string">        Author: GitOPEN</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        regex = re.compile(<span class="string">u'[\U00010000-\U0010ffff]'</span>)</span><br><span class="line">    <span class="keyword">except</span> re.error:</span><br><span class="line">        regex = re.compile(<span class="string">u'[\uD800-\uDBFF][\uDC00-\uDFFF]'</span>)</span><br><span class="line"></span><br><span class="line">    text = regex.sub(<span class="string">u''</span>, text)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(word <span class="keyword">for</span> word <span class="keyword">in</span> text <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> emoji.UNICODE_EMOJI)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试：随机输入3个人物emoji，3个自然，3个食物，3个符号，3个物体，3个旗帜</span></span><br><span class="line">emoji_text = <span class="string">'🤡👨‍👮世界，我是周董🙉🦎🦀，🍑🍔🍤你好吗？❤️㊗️🆘我很好，日子过得还算不错！📡🕯🔨你呢？🇧🇷🇻🇬🇺🇸'</span></span><br><span class="line">print(filter_emoji(emoji_text))</span><br></pre></td></tr></table></figure><h2 id="git-设置代理"><a href="#git-设置代理" class="headerlink" title="git 设置代理"></a>git 设置代理</h2><p>由于众所周知的原因，git速度实在是蜗速，只有几KB/s。挂上小飞机✈️，按照下面设置，速度瞬间飞起！当然你得有一架好飞机~😀<br>如果你的✈️非得不够高，那么请参考之前我的推荐<a href="https://sunjiajia.com/2018/04/01/vps-install-nexus-maven/#%E5%86%8D%E6%AC%A1%E9%82%80%E8%AF%B7%E6%82%A8" target="_blank" rel="noopener">《快的飞起小飞滴~》</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">'socks5://127.0.0.1:1080'</span></span><br><span class="line">git config --global https.proxy <span class="string">'socks5://127.0.0.1:1080'</span></span><br></pre></td></tr></table></figure><p>取消git代理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h2 id="Python-Django生成CSV文件内容乱码"><a href="#Python-Django生成CSV文件内容乱码" class="headerlink" title="Python/Django生成CSV文件内容乱码"></a>Python/Django生成CSV文件内容乱码</h2><p>在Django视图函数中生成CSV文件，用微软妹子家的Excel打开会乱码，解决方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">book_price</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> csv, codecs</span><br><span class="line"></span><br><span class="line">    titles = [<span class="string">'明朝那些事儿'</span>, <span class="string">'围城'</span>, <span class="string">'北京法源寺'</span>, <span class="string">'平凡的世界'</span>, <span class="string">'丰乳肥臀'</span>]</span><br><span class="line">    response = HttpResponse(content_type=<span class="string">'text/csv'</span>)</span><br><span class="line">    <span class="comment"># 解决乱码</span></span><br><span class="line">    response.write(codecs.BOM_UTF8)</span><br><span class="line">    response[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=book_price.csv'</span></span><br><span class="line">    writer = csv.writer(response)</span><br><span class="line">    writer.writerow([<span class="string">'title'</span>, <span class="string">'price'</span>])</span><br><span class="line">    <span class="keyword">for</span> (title, price) <span class="keyword">in</span> zip(titles, range(<span class="number">69</span>, <span class="number">99</span>)):</span><br><span class="line">        print(title, price)</span><br><span class="line">        writer.writerow([title, price])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>使用Python写CSV文件时，也会出现相同的问题，解决方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv, codecs</span><br><span class="line">f=open(<span class="string">'temp.csv'</span>,<span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 解决乱码</span></span><br><span class="line">f.write(codecs.BOM_UTF8)</span><br><span class="line">writer = csv.writer(f)</span><br><span class="line">writer.writerow([<span class="string">'图书'</span>,<span class="string">'出版社'</span>,<span class="string">'价格'</span>])</span><br><span class="line">writer.writerow([<span class="string">'明朝那些事儿'</span>,<span class="string">'机械工业出版社'</span>,<span class="string">'146.99'</span>])</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>使用Python读取CSV文件时，也会出现乱码的问题，解决方法，指定目标文件的编码方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data.csv'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.reader(f)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> f_csv:</span><br><span class="line">        print(row)</span><br></pre></td></tr></table></figure><h2 id="macOS-移除Google的GoogleSoftwareUpdateAgent更新程序"><a href="#macOS-移除Google的GoogleSoftwareUpdateAgent更新程序" class="headerlink" title="macOS 移除Google的GoogleSoftwareUpdateAgent更新程序"></a>macOS 移除Google的GoogleSoftwareUpdateAgent更新程序</h2><p>查看该程序有没有在运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults <span class="built_in">read</span> com.google.Keystone.Agent</span><br></pre></td></tr></table></figure><p>如果看到的是<code>Domain com.google.Keystone.Agent does not exist</code>，则没有运行，无需移除；</p><p>如果是一长串吧哩巴拉，那么需要移除。移除方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/GoogleSoftwareUpdateAgent.app/Contents/Resources/ksinstall --uninstall</span><br></pre></td></tr></table></figure><p>移除完毕后可再次检测一遍。</p><h2 id="Firefox开启Youtube的4k视频"><a href="#Firefox开启Youtube的4k视频" class="headerlink" title="Firefox开启Youtube的4k视频"></a>Firefox开启Youtube的4k视频</h2><p>macOS上Firefox默认不能看Youtube的4k及以上分辨率视频，调整ff的设置即可打开。</p><ul><li>在Firefox中打开<code>about:config</code></li><li>搜索<code>media.mediasource.webm.enabled</code></li><li>将其值设置为<code>true</code>即可</li></ul><h2 id="macOS-fish-shell-终端设置代理"><a href="#macOS-fish-shell-终端设置代理" class="headerlink" title="macOS fish shell 终端设置代理"></a>macOS fish shell 终端设置代理</h2><p>安装 fish shell 后，iterm2 或 Terminal 用起来不能更爽。但是如果能够让终端中的网络走代理，那么更是爽之又爽。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/fish/config.fish</span><br></pre></td></tr></table></figure><p>输入以下设置，端口号按照自己代理的配置进行更改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set -x https_proxy http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7890</span></span><br><span class="line">set -x http_proxy http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7890</span></span><br><span class="line">set -x all_proxy socks5://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7891</span></span><br></pre></td></tr></table></figure><hr><hr><hr><blockquote><p>声明：我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=2s8lcq9l2fqck" target="_blank" rel="noopener">https://cloud.tencent.com/developer/support-plan?invite_code=2s8lcq9l2fqck</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我的博客好久没有更新过了！太过时的东西，我都想把它们干掉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里就用来记
      
    
    </summary>
    
      <category term="技术相关" scheme="https://blog.sunjiajia.com/categories/%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="技巧" scheme="https://blog.sunjiajia.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>《手把手带你学爬虫──初级篇》第6课  强大的爬虫框架Scrapy</title>
    <link href="https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson06-scrapy/"/>
    <id>https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson06-scrapy/</id>
    <published>2018-09-14T04:12:06.000Z</published>
    <updated>2018-09-19T00:51:47.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程所有源码下载链接：<a href="https://share.weiyun.com/5xmFeUO" target="_blank" rel="noopener">https://share.weiyun.com/5xmFeUO</a> 密码：fzwh6g</p></blockquote><h1 id="强大的爬虫框架Scrapy"><a href="#强大的爬虫框架Scrapy" class="headerlink" title="强大的爬虫框架Scrapy"></a>强大的爬虫框架Scrapy</h1><h1 id="简介与安装"><a href="#简介与安装" class="headerlink" title="简介与安装"></a>简介与安装</h1><p>Scrapy是一个Python爬虫应用框架，爬取和处理结构性数据非常方便。使用它，只需要定制开发几个模块，就可以轻松实现一个爬虫，让爬取数据信息的工作更加简单高效。</p><p>Scrapy使用了Twisted异步网络框架来处理网络通信，可以加快下载速度。结合Scrapy-redis，我们可以实现分布式爬虫，极大地提高了爬虫的效率。试想一下，10台、20台、100台服务器同时爬取数据。。。</p><p>Scrapy的安装也非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br></pre></td></tr></table></figure><h1 id="Scrapy架构初体验"><a href="#Scrapy架构初体验" class="headerlink" title="Scrapy架构初体验"></a>Scrapy架构初体验</h1><h2 id="Scrapy架构及组件"><a href="#Scrapy架构及组件" class="headerlink" title="Scrapy架构及组件"></a>Scrapy架构及组件</h2><p>我们先看一下Scrapy的架构图，来试图理解一下Scrapy的执行流程，然后，带着这些问题，进入Scrapy框架的编写爬虫学习。</p><p><img src="/img/crawler/lessons/lesson06_scrapy_01.png" alt=""></p><p>这张官方的图解非常形象，但看起来不那么直观，我们来看另一张网友做的图，简单好看，<strong>点个赞！</strong></p><p><img src="/img/crawler/lessons/lesson06_scrapy_02.png" alt=""></p><p>首先，解释一下图中各个组件的作用：</p><p>5个组件：</p><p><code>Scrapy Engine</code>：核心引擎，负责控制和调度各个组件，保证数据流转；</p><p><code>Scheduler</code>：负责管理任务、过滤任务、输出任务的调度器，存储、去重任务都在此控制；</p><p><code>Downloader</code>：下载器，负责在网上下载网页数据，输入待下载URL，输出下载结果；</p><p><code>Spiders</code>：用户自己编写的爬虫脚本，自定义抓取的意图，就是说你需要哪些数据，怎么爬，在这里定义；</p><p><code>Item Pipline</code>：负责将获取到的数据格式化，格式化、存储、存储位置等在这里质量定义；</p><p>2个中间件组件：</p><p><code>Downloader middlewares</code>：介于引擎和下载器之间，对Scrapy的request/response处理的钩子框架，是用于全局修改Scrapy request和response的一个组件，可以在网页下载前后进行逻辑处理；</p><p><code>Spider middlewares</code>：介于引擎和爬虫之间，处理引擎发送给Spiders的response，处理spider产生的item和request返回给引擎。</p><h2 id="Scrapy执行流程"><a href="#Scrapy执行流程" class="headerlink" title="Scrapy执行流程"></a>Scrapy执行流程</h2><p>用根据图中的序号，我们用文字来描述一下，Scrapy的运转流程：</p><ol><li>Engine从Spiders中获取到初始化requests，在自定义spider中叫做<code>start_urls</code>；</li><li>Engine把起始请求放入Scheduler，同时，向Scheduler获取一个待下载的request；</li><li>Scheduler返回给Engine一个待下载的request；</li><li>Engine发送request给Downloader，会经过Downloader middlewares；</li><li>这个request通过Downloader下载完成后，生成了一个response，经过Downloader middlewares后到达Engine；</li><li>Engine收到response后，经过Spider middlewares发送给Spiders中的自定义spider，执行自定义的爬虫逻辑；</li><li>spider执行相应的回调方法，例如parse()处理response，返回item或者新的request，返回的时候经过Spider middlewares；</li><li>Engine把item交给Item pipline处理，把新的request通过Engine交给Scheduler；</li><li>如此往复，直到Scheduler中没有新的request。</li></ol><h1 id="Scrapy项目初体验"><a href="#Scrapy项目初体验" class="headerlink" title="Scrapy项目初体验"></a>Scrapy项目初体验</h1><h2 id="Scrapy项目创建和执行"><a href="#Scrapy项目创建和执行" class="headerlink" title="Scrapy项目创建和执行"></a>Scrapy项目创建和执行</h2><p>构建和运行一个基于Scrapy框架的爬虫的通用步骤如下：</p><ol><li>使用<code>scrapy startproject demoSpider</code>创建基于Scrapy框架的爬虫项目；</li><li>使用<code>scrapy genspider demo demo.com</code>生成一个基于basic模板的自定义爬虫，爬虫名字为demo；</li><li>重写<code>pasrse</code>方法，编写处理和爬取规则；</li><li>使用<code>scrapy crawl demo</code>执行爬虫。</li></ol><p>在命令行中创建基于Scrapy框架的爬虫的步骤：</p><p><img src="/img/crawler/lessons/lesson06_scrapy_03.png" alt=""></p><h2 id="Scrapy项目结构解析"><a href="#Scrapy项目结构解析" class="headerlink" title="Scrapy项目结构解析"></a>Scrapy项目结构解析</h2><p>我们在PyCharm中打开创建的项目，项目结构如图：</p><p><img src="/img/crawler/lessons/lesson06_scrapy_04.png" alt=""></p><ul><li><code>scrapy.cfg</code>：项目的主配置文件；</li><li><code>demoSpider</code>：最外层的是项目根目录；第二个是该项目的Python模块；</li><li><code>demoSpider/items.py</code>：项目中item文件，设置数据存储模板，保存爬取到的数据的容器，用于结构化数据，使用方法和字典类似；</li><li><code>demoSpider/piplines.py</code>：项目中的pipelines文件（管道文件），用于数据的持久化处理；</li><li><code>demoSpider/middlewares.py</code>：项目的中间件；</li><li><code>demoSpider/settings.py</code>：项目的设置文件，如，下载延迟、并发数等；</li><li><code>demoSpider/spiders/</code>：编写spider代码的目录。</li></ul><h3 id="settings-py文件内容解析"><a href="#settings-py文件内容解析" class="headerlink" title="settings.py文件内容解析"></a><code>settings.py</code>文件内容解析</h3><p>刚创建好的demoSpider的settings文件内容是这样的，每个配置项有什么作用，在注释中已经标明了，这里做到心中有数即可，后面实战的时候，会再次使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬虫项目的名字</span></span><br><span class="line">BOT_NAME = <span class="string">'demoSpider'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬虫的路径</span></span><br><span class="line">SPIDER_MODULES = [<span class="string">'demoSpider.spiders'</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">'demoSpider.spiders'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否遵守爬虫协议</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置并发请求书，最大是32，默认是16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 为同一个网站的请求配置延迟，默认为0；通常用来控制访问爬取频率，防止被识别被禁止。</span></span><br><span class="line"><span class="comment"># 例如设置为0.25，则表示250ms的延迟。</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># 每个域名最大并发请求数</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment"># 每个ip最大并发请求数，如果设置了，将忽略设置的域名最大并发请求数</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否禁用cookies，默认不禁用</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过Telnet可以监听当前爬虫的状态、信息，操作爬虫等。使用方法是：打开cmd，使用telnet 127.0.0.1 6023 以及est()，即可进入操作页面。不常用。</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认的请求头，每个请求都可以携带。</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span></span><br><span class="line"><span class="comment">#   'Accept-Language': 'en',</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始或者禁用中间件，后面的顺序表示优先级，数字越小优先级越高</span></span><br><span class="line"><span class="comment"># 第一个中间件是靠近引擎的中间件，最后一个是靠近蜘蛛的中间件</span></span><br><span class="line"><span class="comment"># 文档 https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'demoSpider.middlewares.DemospiderSpiderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载中间件，后面的顺序表示优先级，数字越小优先级越高</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'demoSpider.middlewares.DemospiderDownloaderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义扩展</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义PIPELINES处理请求，主要为了存储数据使用，后面的顺序表示优先级，数字越小优先级越高</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="comment">#ITEM_PIPELINES = &#123;</span></span><br><span class="line"><span class="comment">#    'demoSpider.pipelines.DemospiderPipeline': 300,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 做智能的限速请求。从AUTOTHROTTLE_ENABLED = True开始，到AUTOTHROTTLE_DEBUG = False结束。中间的设置AUTOTHROTTLE_START_DELAY = 5表示第一个请求延迟多少秒。</span></span><br><span class="line"><span class="comment"># 默认禁用。</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># 起始请求的延迟</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># 最大的请求延迟</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># 启用后，显示每个响应的控制信息</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认禁用，设置HTTP缓存</span></span><br><span class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = 'httpcache'</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></span><br></pre></td></tr></table></figure><h3 id="demoSpider-spiders-demo-py文件内容解析"><a href="#demoSpider-spiders-demo-py文件内容解析" class="headerlink" title="demoSpider/spiders/demo.py文件内容解析"></a><code>demoSpider/spiders/demo.py</code>文件内容解析</h3><p>这是一个依据默认模板Scrapy帮我们生成的爬虫，内容简单，由于没有任何自定义的编写，因此，现在还不具备爬虫的功能，我们看一下它的默认内容的使用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    <span class="comment"># 爬虫的名字，对应于刚才生成爬虫时指定的名字</span></span><br><span class="line">    name = <span class="string">'demo'</span></span><br><span class="line">    <span class="comment"># 支持的域名，对应于刚才生成爬虫时指定的域名</span></span><br><span class="line">    allowed_domains = [<span class="string">'demo.com'</span>]</span><br><span class="line">    <span class="comment"># 起始链接，爬虫启动后，默认会从这里的url开始发送请求</span></span><br><span class="line">    start_urls = [<span class="string">'http://demo.com/'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理方法，处理引擎转发回来的响应response</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>parse方法是我们今后处理内容的方法，也就是从response中提取网页的元素或内容。</p><p>parse方法的response中，有很多我们可以用的东西：</p><p><code>response.url</code>：访问的连接；</p><p><code>response.text</code>：响应的字符串内容；</p><p><code>response.body</code>：响应的二进制格式内容；</p><p><code>response.meta</code>：它包含四个信息，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'depth'</span>: 1, <span class="string">'download_timeout'</span>: 180.0, <span class="string">'download_slot'</span>: <span class="string">'dig.chouti.com'</span>, <span class="string">'download_latency'</span>: 0.23752975463867188&#125;</span><br></pre></td></tr></table></figure><h3 id="demoSpider-items-py文件内容解析"><a href="#demoSpider-items-py文件内容解析" class="headerlink" title="demoSpider/items.py文件内容解析"></a><code>demoSpider/items.py</code>文件内容解析</h3><p><code>items.py</code>文件中定义数据存储模板，用面向对象的思维来思考，items中的每个类的实例化对象都是一个包含特定字段和值的结构化数据对象，我们可以将在<code>parse</code>方法中提取到的数据，保存到这个对象中，然后通过管道文件<code>pipeline</code>进行后续处理，如保存到文件，或者保存到数据库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 定义数据模板</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemospiderItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># 定义字段</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>例如，假设我们提取了学生信息，有<code>name</code>、<code>age</code>、<code>score</code>等数据，那么我们可以在<code>items.py</code>中编写一个<code>StudentsItem</code>类，来存储结构化数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentsItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># 姓名</span></span><br><span class="line">    name = scrapy.Field()</span><br><span class="line">    <span class="comment"># 年龄</span></span><br><span class="line">    age = scrapy.Field()</span><br><span class="line">    <span class="comment"># 分数</span></span><br><span class="line">    score = scrapy.Field()</span><br></pre></td></tr></table></figure><p>那么，在<code>parse</code>方法中，提取出来的数据就可以这样存储：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">item[<span class="string">'name'</span>] = <span class="string">'zhangsan'</span></span><br><span class="line">item[<span class="string">'age'</span>] = <span class="number">18</span></span><br><span class="line">item[<span class="string">'score'</span>] = <span class="number">99</span></span><br></pre></td></tr></table></figure><h3 id="demoSpider-middlewares-py文件内容解析"><a href="#demoSpider-middlewares-py文件内容解析" class="headerlink" title="demoSpider/middlewares.py文件内容解析"></a><code>demoSpider/middlewares.py</code>文件内容解析</h3><p>该文件中包含两个类，分别是<code>DemospiderSpiderMiddleware</code>爬虫中间件和<code>DemospiderDownloaderMiddleware</code>下载中间件，如果自定义了它们，那么需要在<code>settings.py</code>文件中配置它们。在这里，我们不去细致讨论它们，仅需要知道它们在scrapy中的作用即可。关于它们的详解，将在用到的时候进行详细讲解。</p><h3 id="demoSpider-pipelines-py文件内容解析"><a href="#demoSpider-pipelines-py文件内容解析" class="headerlink" title="demoSpider/pipelines.py文件内容解析"></a><code>demoSpider/pipelines.py</code>文件内容解析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义item的管道文件</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 不要忘记在settings文件的ITEM_PIPELINES中启用它</span></span><br><span class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemospiderPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 处理item的方法，该方法必须要返回一个字典数据，Item（或其子类）或者 抛出一个 DropItem 异常。被 drop 的 Item 将不会被接下来的 pipeline 组件处理。</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="comment"># raise DropItem()</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>定义item的管道文件，用来对结构化数据item进行处理，存储到文件或者存储到数据库中。<code>process_item</code>方法中有两个参数：</p><p><code>item</code>：爬取的 Item对象；</p><p><code>spider</code>：爬起item对象的爬虫。</p><p>编写好<code>pipelines.py</code>文件以后，需要在<code>settings.py</code>文件中启用它：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'demoSpider.pipelines.DemospiderPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="XPath语法"><a href="#XPath语法" class="headerlink" title="XPath语法"></a>XPath语法</h1><p>XPath 使用路径表达式来选取 XML 文档中的节点或节点集。节点是通过沿着路径 (path) 或者步 (steps) 来选取的。</p><p>XPath基于XML的树状结构，有不同类型的节点，包括元素节点，属性节点和文本节点，提供在数据结构树中找寻节点的能力。起初 XPath 的提出的初衷是将其作为一个通用的、介于XPointer与XSLT间的语法模型。但是 XPath 很快的被开发者采用来当作小型查询语言。</p><p>简单来说，我们通过Xpath可以获取XML中的指定元素和指定节点的值。在网络爬虫中通常会把爬虫获取的HTML数据转换成XML结构，然后通过XPath解析，获取我们想要的结果。</p><p>下面，看一下最常用的路径表达式，也是最基础的：</p><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点。</td></tr><tr><td>/</td><td>从根节点选取。</td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td>.</td><td>选取当前节点。</td></tr><tr><td>..</td><td>选取当前节点的父节点。</td></tr><tr><td>@</td><td>选取属性。</td></tr></tbody></table><h2 id="XPath-Helper插件"><a href="#XPath-Helper插件" class="headerlink" title="XPath Helper插件"></a>XPath Helper插件</h2><h3 id="XPath-Helper插件安装"><a href="#XPath-Helper插件安装" class="headerlink" title="XPath Helper插件安装"></a>XPath Helper插件安装</h3><p>为了使用方便，我们在Chrome浏览器中安装<code>XPath Helper</code>插件，帮助我们在页面上测试<code>XPath</code>表达式。</p><p>你可以在Chrome扩展商店中直接搜索下载，由于众所周知的原因，很可能（100%）不能访问，那么可以使用备份下载地址：</p><p><a href="https://github.com/opengit/CrawlerLessons/raw/master/codes/lesson06/xpath_helper_hgimnogjllphhhkhlmebbmlgjoejdpjl.crx" target="_blank" rel="noopener">XPath Helper备份下载地址</a></p><p>安装方法如图所示：</p><p><img src="/img/crawler/lessons/lesson06_scrapy_05.png" alt=""></p><p><img src="/img/crawler/lessons/lesson06_scrapy_06.png" alt=""></p><h3 id="XPath-Helper插件使用"><a href="#XPath-Helper插件使用" class="headerlink" title="XPath Helper插件使用"></a>XPath Helper插件使用</h3><p>安装完成以后，在Chrome浏览器右上角的扩展插件区域，点击<code>XPath Helper</code>图标即可激活使用。</p><p>这里，我们使用<a href="https://movie.douban.com/top250?start=0" target="_blank" rel="noopener">豆瓣电影Top250</a>作为测试页面，同时实战一下<code>XPath Helper</code>的用法。如图所示：</p><p><img src="/img/crawler/lessons/lesson06_scrapy_07.png" alt=""></p><h2 id="常用XPath表达式用法"><a href="#常用XPath表达式用法" class="headerlink" title="常用XPath表达式用法"></a>常用XPath表达式用法</h2><table><thead><tr><th>表达式</th><th>含义</th></tr></thead><tbody><tr><td><code>//div</code></td><td>选取页面上全部div元素</td></tr><tr><td><code>//div[@class=&#39;article&#39;]</code></td><td>选取页面上属性class的值为article的div元素</td></tr><tr><td><code>//div[@class=&#39;article&#39;]//div[@class=&#39;item&#39;]//div[@class=&#39;hd&#39;]//span[@class=&#39;title&#39;][1]//text()</code></td><td>在上面选取的基础上，选取class属性为title的span元素，由于这个span元素有多个，是同一层级下的并列关系，我们只提取第一个，因此需要用[1]获取。text()用来获取文本内容</td></tr><tr><td><code>//div[@class=&#39;article&#39;]//div[@class=&#39;item&#39;]//div[@class=&#39;hd&#39;]//a//@href</code></td><td>获取a标签的属性href的值，也就是电影详细信息页面的URL连接</td></tr><tr><td><code>//a[contains(@href,&#39;douban&#39;)]//@href</code></td><td>找到a标签属性href的值中包含douban字符串的a元素，然后取出来href的值</td></tr><tr><td><code>//a[starts-with(@href,&#39;https://movie.douban.com&#39;)]//@href</code></td><td>找到a标签属性href的值中以<code>https://movie.douban.com</code>字符串开头的a元素，然后取出来href的值</td></tr></tbody></table><h1 id="CSS选择器基础"><a href="#CSS选择器基础" class="headerlink" title="CSS选择器基础"></a>CSS选择器基础</h1><p>CSS选择器是用来对HTML页面中的元素进行控制的，然后设置属性与值，达到对网页样式就行修饰的目的。</p><p>要使用css对HTML页面中的元素实现一对一，一对多或者多对一的控制，这就需要用到CSS选择器。</p><p>我们在编写爬虫的过程中，可以使用CSS选择器来对网页上的元素、内容进行定位或者获取。</p><h2 id="常用CSS选择器语法"><a href="#常用CSS选择器语法" class="headerlink" title="常用CSS选择器语法"></a>常用CSS选择器语法</h2><table><thead><tr><th>表达式</th><th>含义</th></tr></thead><tbody><tr><td><code>*</code></td><td>选择所有节点</td></tr><tr><td><code>#container</code></td><td>选择id为container的节点</td></tr><tr><td><code>.container</code></td><td>选择所有class包含container的节点</td></tr><tr><td><code>li a</code></td><td>选取所有li 下所有a节点</td></tr><tr><td><code>ul + p</code></td><td>选取ul后面的第一个p元素</td></tr><tr><td><code>div#container &gt; ul</code></td><td>选取id为container的div的第一个ul子元素</td></tr><tr><td><code>ul ~p</code></td><td>选取与ul相邻的所有p元素</td></tr><tr><td><code>a[title]</code></td><td>选取所有有title属性的a元素</td></tr><tr><td><code>a[href=&quot;http://sunjiajia.com&quot;]</code></td><td>选取所有href属性为<code>http://sunjiajia.com</code>的a元素</td></tr><tr><td><code>a[href*=&quot;sunjiajia&quot;]</code></td><td>选取所有href属性值中包含sunjiajia的a元素</td></tr><tr><td><code>a[href^=&quot;http&quot;]</code></td><td>选取所有href属性值中以http开头的a元素</td></tr><tr><td><code>a[href$=&quot;.jpg&quot;]</code></td><td>选取所有href属性值中以.jpg结尾的a元素</td></tr><tr><td><code>input[type=radio]:checked</code></td><td>选择选中的radio的元素</td></tr><tr><td><code>div:not(#container)</code></td><td>选取所有id为非container 的div属性</td></tr><tr><td><code>li:nth-child(3)</code></td><td>选取第三个li元素</td></tr><tr><td><code>li:nth-child(2n)</code></td><td>选取第偶数个li元素</td></tr></tbody></table><p>有关CSS选择器的用法，我们将在实战中进行编写体验。</p><h1 id="实战──用Scrapy爬取豆瓣电影Top250"><a href="#实战──用Scrapy爬取豆瓣电影Top250" class="headerlink" title="实战──用Scrapy爬取豆瓣电影Top250"></a>实战──用Scrapy爬取豆瓣电影Top250</h1><p>这章的第1个实战，就是用Scrapy框架重新来爬取豆瓣电影Top250，在这个过程中，熟悉Scrapy框架编写爬虫的基本步骤。</p><ol><li><p>新建<code>doubanSpider</code>Scrapy项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject doubanSpider</span><br></pre></td></tr></table></figure></li><li><p>基于默认模板，生成爬虫<code>douban</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider douban douban.com</span><br></pre></td></tr></table></figure></li><li><p>用Pycharm编辑器打开项目；</p></li><li><p>在<code>settings.py</code>中，将<code>ROBOTSTXT_OBEY = True</code>改为<code>ROBOTSTXT_OBEY = False</code>；</p></li><li><p>在<code>settings.py</code>中，配置User-Agent：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER_AGENT = <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span></span><br></pre></td></tr></table></figure></li><li><p>编写<code>items.py</code>文件，定义我们需要的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanspiderItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># 标题</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    <span class="comment"># 信息</span></span><br><span class="line">    bd = scrapy.Field()</span><br><span class="line">    <span class="comment"># 评分</span></span><br><span class="line">    star = scrapy.Field()</span><br><span class="line">    <span class="comment"># 简介</span></span><br><span class="line">    quote = scrapy.Field()</span><br></pre></td></tr></table></figure></li><li><p>编写<code>spiders/douban.py</code>爬虫文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> doubanSpider.items <span class="keyword">import</span> DoubanspiderItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'douban'</span></span><br><span class="line">    allowed_domains = [<span class="string">'douban.com'</span>]</span><br><span class="line">    <span class="comment"># 基础url地址</span></span><br><span class="line">    url = <span class="string">"https://movie.douban.com/top250?start="</span></span><br><span class="line">    <span class="comment"># url参数</span></span><br><span class="line">    offset = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 起始url列表</span></span><br><span class="line">    start_urls = [</span><br><span class="line">        url + str(offset)</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        item = DoubanspiderItem()</span><br><span class="line"><span class="comment"># 拿到</span></span><br><span class="line">        movies = response.xpath(<span class="string">'//div[@class="info"]'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> movies:</span><br><span class="line">            <span class="comment"># 标题</span></span><br><span class="line">            item[<span class="string">'title'</span>] = each.xpath(</span><br><span class="line">                <span class="string">'.//div[@class="hd"]//span[@class="title"][1]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 信息</span></span><br><span class="line">            item[<span class="string">'bd'</span>] = each.xpath(</span><br><span class="line">                <span class="string">'.//div[@class="bd"]/p/text()'</span>).extract()[<span class="number">0</span>].strip()</span><br><span class="line">            <span class="comment"># 评分</span></span><br><span class="line">            item[<span class="string">'star'</span>] = each.xpath(</span><br><span class="line">                <span class="string">'.//div[@class="star"]/span[@class = "rating_num"]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 简介</span></span><br><span class="line">            quote = each.xpath(<span class="string">'.//div[@class="bd"]//p[@class="quote"]/span/text()'</span>).extract()</span><br><span class="line">            <span class="keyword">if</span> len(quote) != <span class="number">0</span>:</span><br><span class="line">                item[<span class="string">'quote'</span>] = quote[<span class="number">0</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 交给管道文件处理</span></span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 循环发送请求，读取每一页的内容</span></span><br><span class="line">        <span class="keyword">if</span> self.offset &lt; <span class="number">225</span>:</span><br><span class="line">            self.offset += <span class="number">25</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(self.url + str(self.offset), callback=self.parse)</span><br></pre></td></tr></table></figure></li><li><p>编写<code>pipelines.py</code>管道文件，用来数据持久化处理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanspiderPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        构造方法，在这里打开文件</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.item_list = []</span><br><span class="line">        self.filename = open(<span class="string">"douban.json"</span>, <span class="string">"w+"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        处理item数据</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        item_json = json.dumps(dict(item), ensure_ascii=<span class="keyword">False</span>)</span><br><span class="line">        self.item_list.append(item_json)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        爬虫关闭时执行，对数据进行最后的修正工作，并且关闭文件输入输出流</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        content = <span class="string">"["</span> + <span class="string">","</span>.join(self.item_list) + <span class="string">"]"</span></span><br><span class="line">        self.filename.write(content)</span><br><span class="line">        self.filename.close()</span><br></pre></td></tr></table></figure></li><li><p>在<code>settings.py</code>文件中，配置管道文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'doubanSpider.pipelines.DoubanspiderPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在命令行中执行爬虫：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl douban</span><br></pre></td></tr></table></figure></li><li><p>结果示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"title"</span>: <span class="string">"肖申克的救赎"</span>,</span><br><span class="line">        <span class="attr">"bd"</span>: <span class="string">"导演: 弗兰克·德拉邦特 Frank Darabont   主演: 蒂姆·罗宾斯 Tim Robbins /..."</span>,</span><br><span class="line">        <span class="attr">"star"</span>: <span class="string">"9.6"</span>,</span><br><span class="line">        <span class="attr">"quote"</span>: <span class="string">"希望让人自由。"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"title"</span>: <span class="string">"霸王别姬"</span>,</span><br><span class="line">        <span class="attr">"bd"</span>: <span class="string">"导演: 陈凯歌 Kaige Chen   主演: 张国荣 Leslie Cheung / 张丰毅 Fengyi Zha..."</span>,</span><br><span class="line">        <span class="attr">"star"</span>: <span class="string">"9.5"</span>,</span><br><span class="line">        <span class="attr">"quote"</span>: <span class="string">"风华绝代。"</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">"title"</span>: <span class="string">"这个杀手不太冷"</span>,</span><br><span class="line">        <span class="attr">"bd"</span>: <span class="string">"导演: 吕克·贝松 Luc Besson   主演: 让·雷诺 Jean Reno / 娜塔莉·波特曼 ..."</span>,</span><br><span class="line">        <span class="attr">"star"</span>: <span class="string">"9.4"</span>,</span><br><span class="line">        <span class="attr">"quote"</span>: <span class="string">"怪蜀黍和小萝莉不得不说的故事。"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol><h1 id="作业──使用CSS选择器改写实战项目"><a href="#作业──使用CSS选择器改写实战项目" class="headerlink" title="作业──使用CSS选择器改写实战项目"></a>作业──使用CSS选择器改写实战项目</h1><p>要求：</p><ol><li>将<code>parse()</code>方法中用<code>XPath</code>表达式提取数据的方式，修改为<code>CSS选择器</code>方式提取；</li><li>增加对电影详细信息页面url的爬取。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程所有源码下载链接：&lt;a href=&quot;https://share.weiyun.com/5xmFeUO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://share.weiyun.com/5xmFeUO&lt;/a&gt; 密
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://blog.sunjiajia.com/tags/Crawler/"/>
    
      <category term="Spider" scheme="https://blog.sunjiajia.com/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>《手把手带你学爬虫──初级篇》第5课  Selenium WebDriver的用法</title>
    <link href="https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson05-selenium/"/>
    <id>https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson05-selenium/</id>
    <published>2018-09-14T04:12:05.000Z</published>
    <updated>2018-09-19T00:51:15.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程所有源码下载链接：<a href="https://share.weiyun.com/5xmFeUO" target="_blank" rel="noopener">https://share.weiyun.com/5xmFeUO</a> 密码：fzwh6g</p></blockquote><h1 id="Selenium-WebDriver的用法"><a href="#Selenium-WebDriver的用法" class="headerlink" title="Selenium WebDriver的用法"></a>Selenium WebDriver的用法</h1><h1 id="简介与安装"><a href="#简介与安装" class="headerlink" title="简介与安装"></a>简介与安装</h1><h2 id="Selenium-WebDriver的简介与安装"><a href="#Selenium-WebDriver的简介与安装" class="headerlink" title="Selenium WebDriver的简介与安装"></a>Selenium WebDriver的简介与安装</h2><p>Selenium 是一个自动化测试工具，WebDriver是它提供的一套操作浏览器的API，由于WebDriver针对多种编程语言都实现了这些API，因此它可以支持多种编程语言。</p><p>从Python语言角度来讲，WebDriver是Python的一个用于实现自动化操作的第三方库。</p><p>安装方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><h2 id="PhantomJS简介与安装"><a href="#PhantomJS简介与安装" class="headerlink" title="PhantomJS简介与安装"></a>PhantomJS简介与安装</h2><p>原文简介：</p><blockquote><p> PhantomJS is a headless web browser scriptable with JavaScript. It runs on Windows, macOS, Linux, and FreeBSD.</p></blockquote><p>白话文简介：</p><p>PhantomJS是一个无头的web浏览器，可以用JavaScript编写脚本。它运行在Windows、macOS、Linux和FreeBSD上。</p><p>Windows系统安装方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 下载 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-windows.zip</span><br><span class="line">2. 将`phantomjs.exe`所在目录增加到环境变量中</span><br></pre></td></tr></table></figure><p>Mac OS X系统安装方法：</p><p>建议使用HomeBrew工具进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install phantomjs</span><br></pre></td></tr></table></figure><h1 id="Selenium用法"><a href="#Selenium用法" class="headerlink" title="Selenium用法"></a>Selenium用法</h1><h2 id="体验入门"><a href="#体验入门" class="headerlink" title="体验入门"></a>体验入门</h2><p>首先，我们在<code>ipython</code>中，测试一下Selenium调用WebDriver的API，驱动Chrome浏览器打开我的博客首页的用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入WebDriver的模块</span></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="comment"># 驱动Chrome浏览器，执行后会弹出一个Chrome浏览器</span></span><br><span class="line">In [<span class="number">3</span>]: browser = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 让浏览器访问https://sunjiajia.com</span></span><br><span class="line"><span class="comment"># 执行后弹出的浏览器将访问这个网站</span></span><br><span class="line">In [<span class="number">4</span>]: browser.get(<span class="string">'https://sunjiajia.com'</span>)</span><br></pre></td></tr></table></figure><p>是不是很简单？</p><h2 id="安装geckodriver和chromedriver"><a href="#安装geckodriver和chromedriver" class="headerlink" title="安装geckodriver和chromedriver"></a>安装<code>geckodriver</code>和<code>chromedriver</code></h2><p><strong>注意：</strong></p><p>如果在运行<code>browser = webdriver.Firefox()</code>或者<code>browser = webdriver.Chrome()</code>的时候，出现如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebDriverException: Message: <span class="string">'geckodriver'</span> executable needs to be <span class="keyword">in</span> PATH.</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebDriverException: Message: <span class="string">'chromedriver'</span> executable needs to be <span class="keyword">in</span> PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home</span><br></pre></td></tr></table></figure><p>那么需要配置<code>geckodriver</code>和<code>chromedriver</code>。具体配置方法如下：</p><p>Windows配置geckodriver：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 如果Firefox是32位的，请下载</span><br><span class="line">https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-win32.zip</span><br><span class="line">2. 如果firefox是64位的，请下载</span><br><span class="line">https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-win64.zip</span><br><span class="line">3. 将解压后的geckodriver.exe配置到环境变量中</span><br></pre></td></tr></table></figure><p>Windows配置chromedriver：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 访问http://chromedriver.chromium.org/downloads，查看与自己Chrome版本对应的chromedriver</span><br><span class="line">2. 下载https://chromedriver.storage.googleapis.com/2.40/chromedriver_win32.zip</span><br><span class="line">3. 将解压后的chromedriver.exe配置到环境变量中</span><br></pre></td></tr></table></figure><p>Mac OS X配置两种驱动的方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install geckodriver</span><br><span class="line">brew cask install chromedriver</span><br></pre></td></tr></table></figure><p>Linux配置两种驱动的方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下载linux队形的driver，将其放入/usr/bin目录下就可以了。如果没有执行权限，加上执行权限。</span><br><span class="line">sudo chmod +x /usr/bin geckodriver</span><br><span class="line">sudo chmod +x /usr/bin chromedriver</span><br></pre></td></tr></table></figure><h1 id="Selenium-WebDriver的基本用法"><a href="#Selenium-WebDriver的基本用法" class="headerlink" title="Selenium WebDriver的基本用法"></a>Selenium WebDriver的基本用法</h1><h2 id="页面搜索框提交数据"><a href="#页面搜索框提交数据" class="headerlink" title="页面搜索框提交数据"></a>页面搜索框提交数据</h2><p>用这样一个案例，来体验获取网页源码和元素的流程：</p><p>在浏览器中浏览<code>https://www.jd.com</code>，并打开开发者工具，确定页面搜索框的id为<code>id=&#39;key&#39;</code>，如图所示：</p><p><img src="/img/crawler/lessons/lesson05_selenium_01.png" alt=""></p><p>在<code>ipython</code>中编写代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入webdriver</span></span><br><span class="line">In [<span class="number">7</span>]: <span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="comment"># 导入键盘模拟类 Keys</span></span><br><span class="line">In [<span class="number">8</span>]: <span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="comment"># 驱动Chrome浏览器</span></span><br><span class="line">In [<span class="number">9</span>]: browser = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 访问京东</span></span><br><span class="line">In [<span class="number">10</span>]: browser.get(<span class="string">'https://www.jd.com'</span>)</span><br><span class="line"><span class="comment"># 找到id='key'的搜索框页面元素</span></span><br><span class="line">In [<span class="number">11</span>]: ele_search = browser.find_element_by_id(<span class="string">'key'</span>)</span><br><span class="line"><span class="comment"># 发送关键词 '书包'</span></span><br><span class="line">In [<span class="number">12</span>]: ele_search.send_keys(<span class="string">'书包'</span>)</span><br><span class="line"><span class="comment"># 发送回车键命令</span></span><br><span class="line">In [<span class="number">13</span>]: ele_search.send_keys(Keys.ENTER)</span><br><span class="line"><span class="comment"># 导入BeautifulSoup库</span></span><br><span class="line">In [<span class="number">16</span>]: <span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 拿到标签树对象，浏览器对象的page_source是网页的源码</span></span><br><span class="line">In [<span class="number">17</span>]: soup = BeautifulSoup(browser.page_source,<span class="string">'lxml'</span>)</span><br><span class="line"><span class="comment"># 找到title标签</span></span><br><span class="line">In [<span class="number">18</span>]: tag_title = soup.find(<span class="string">'title'</span>)</span><br><span class="line"><span class="comment"># 打印标签title，证明我们拿到了页面的源码</span></span><br><span class="line">In [<span class="number">19</span>]: tag_title</span><br><span class="line">Out[19]: &lt;title&gt;书包 - 商品搜索 - 京东&lt;/title&gt;</span><br></pre></td></tr></table></figure><h2 id="获取页面元素的方法"><a href="#获取页面元素的方法" class="headerlink" title="获取页面元素的方法"></a>获取页面元素的方法</h2><p>假如我们有这样一个标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">'username'</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'user'</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>那么获取这个元素的方法可以用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element = driver.find_element_by_id(<span class="string">"user"</span>)</span><br><span class="line">element = driver.find_element_by_name(<span class="string">"username"</span>)</span><br><span class="line">element = driver.find_elements_by_tag_name(<span class="string">"input"</span>)</span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">"//input[@id='user']"</span>)</span><br></pre></td></tr></table></figure><p>我们在<code>ipython</code>中测试一下这些用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">3</span>]: browser=webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: browser.get(<span class="string">'http://localhost:63342/codes/lesson05/selenium_demo01.html?_ijt=ai9c4f63mslt0q8a4vb93t7c9l'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: browser.find_element_by_id(<span class="string">'user'</span>)</span><br><span class="line">Out[<span class="number">5</span>]: &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"bb336a8045d9536ef7b79e16d5a78637"</span>, element=<span class="string">"0.6577164491799441-1"</span>)&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: browser.find_element_by_name(<span class="string">'username'</span>)</span><br><span class="line">Out[<span class="number">6</span>]: &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"bb336a8045d9536ef7b79e16d5a78637"</span>, element=<span class="string">"0.6577164491799441-1"</span>)&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: browser.find_element_by_tag_name(<span class="string">'input'</span>)</span><br><span class="line">Out[<span class="number">7</span>]: &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"bb336a8045d9536ef7b79e16d5a78637"</span>, element=<span class="string">"0.6577164491799441-1"</span>)&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: browser.find_element_by_xpath(<span class="string">'//input[@id="user"]'</span>)</span><br><span class="line">Out[<span class="number">8</span>]: &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"bb336a8045d9536ef7b79e16d5a78637"</span>, element=<span class="string">"0.6577164491799441-1"</span>)&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>使用xpath来进行寻找页面元素，如果页面上有多个元素和xpath匹配，那么只会返回第一个匹配的元素。如果没有找到，则会出现<code>NoSuchElementException</code>的异常。</p><h2 id="向页面发送数据并操作"><a href="#向页面发送数据并操作" class="headerlink" title="向页面发送数据并操作"></a>向页面发送数据并操作</h2><h3 id="向input框输入数据"><a href="#向input框输入数据" class="headerlink" title="向input框输入数据"></a>向input框输入数据</h3><p>当获取到了元素以后，就可以向<code>input</code>框输入内容了，并且使用<code>Keys</code>这个类模拟点击某个按键。</p><p>在<code>ipython</code>中测试一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">23</span>]: browser = webdriver.Chrome()</span><br><span class="line">In [<span class="number">24</span>]: browser.get(<span class="string">'http://localhost:63342/codes/lesson05/selenium_demo01.html?_ijt=mdvqb7hj3nub56tb9mqm4suktr'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 input元素</span></span><br><span class="line">In [<span class="number">25</span>]: ele_input = browser.find_element_by_xpath(<span class="string">'//input[@id="user"]'</span>)</span><br><span class="line"><span class="comment"># 获取类型为submit的input元素</span></span><br><span class="line">In [<span class="number">26</span>]: ele_submit = browser.find_element_by_xpath(<span class="string">'//input[@type="submit"]'</span>)</span><br><span class="line"><span class="comment"># 向input输入框中输入数据</span></span><br><span class="line">In [<span class="number">27</span>]: ele_input.send_keys(<span class="string">"书包"</span>)</span><br><span class="line"><span class="comment"># 向input框中再次输入数据，此时，数据直接连接在上面的数据后面</span></span><br><span class="line">In [<span class="number">28</span>]: ele_input.send_keys(<span class="string">"鼠标"</span>)</span><br><span class="line"><span class="comment"># 清除input中的护具</span></span><br><span class="line">In [<span class="number">29</span>]: ele_input.clear()</span><br><span class="line"><span class="comment"># 输入数据</span></span><br><span class="line">In [<span class="number">30</span>]: ele_input.send_keys(<span class="string">"鼠标"</span>)</span><br><span class="line"><span class="comment"># 让submit提交按钮进行点击操作</span></span><br><span class="line">In [<span class="number">31</span>]: ele_submit.click()</span><br><span class="line"><span class="comment"># 让浏览器返回到上一页面</span></span><br><span class="line">In [<span class="number">32</span>]: browser.back()</span><br></pre></td></tr></table></figure><h3 id="向下拉框输入数据"><a href="#向下拉框输入数据" class="headerlink" title="向下拉框输入数据"></a>向下拉框输入数据</h3><p>我们在<code>ipython</code>中进行测试和学习：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: <span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: browser = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: browser.get(<span class="string">"http://localhost:63342/codes/lesson05/selenium_demo01.html?_ijt=7c1snu6luuco68a1hc3p3aki85"</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: ele_select = browser.find_element_by_id(<span class="string">'province'</span>)</span><br><span class="line">    </span><br><span class="line">In [<span class="number">9</span>]: eles_option = browser.find_elements_by_tag_name(<span class="string">'option'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: <span class="keyword">for</span> option <span class="keyword">in</span> eles_option:</span><br><span class="line">    ...:     print(option.get_attribute(<span class="string">'value'</span>))</span><br><span class="line">    ...:     option.click()</span><br><span class="line">    ...:</span><br><span class="line">bj</span><br><span class="line">sh</span><br><span class="line">gz</span><br><span class="line">zz</span><br></pre></td></tr></table></figure><p>其实，Selenium WebDriver提供了一个<code>Select</code>方法，可以方便的对下拉框进行操作，回到<code>ipython</code>环境下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">11</span>]: <span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"></span><br><span class="line">In [<span class="number">12</span>]: ele_select = Select(browser.find_element_by_name(<span class="string">'province'</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">13</span>]: ele_select.select_by_index(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">17</span>]: ele_select.select_by_index(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">18</span>]: ele_select.select_by_value(<span class="string">'zz'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">19</span>]: ele_select.select_by_visible_text(<span class="string">'北京'</span>)</span><br></pre></td></tr></table></figure><h3 id="多选框输入数据"><a href="#多选框输入数据" class="headerlink" title="多选框输入数据"></a>多选框输入数据</h3><p>熟悉了单选框的操作，下面来看一下多选框的输入数据，回到<code>ipython</code>环境中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">45</span>]: browser = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">In [<span class="number">46</span>]: browser.get(<span class="string">'http://localhost:63342/codes/lesson05/selenium_demo01.html?_ijt=8838lsi704td3g3va8uoqc6bhb'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用Select方法得到select对象</span></span><br><span class="line">In [<span class="number">47</span>]: ele_select = Select(browser.find_element_by_id(<span class="string">'fruits'</span>))</span><br><span class="line"><span class="comment"># 是否是多选select</span></span><br><span class="line">In [<span class="number">48</span>]: ele_select.is_multiple</span><br><span class="line">Out[<span class="number">48</span>]: <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 按照索引值进行选中</span></span><br><span class="line">In [<span class="number">49</span>]: ele_select.select_by_index(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">50</span>]: ele_select.select_by_index(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">51</span>]: ele_select.select_by_index(<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 按照value值选中</span></span><br><span class="line">In [<span class="number">53</span>]: ele_select.select_by_value(<span class="string">'pg'</span>)</span><br><span class="line"><span class="comment"># 被选中的option元素</span></span><br><span class="line">In [<span class="number">55</span>]: ele_select.all_selected_options</span><br><span class="line">Out[<span class="number">55</span>]:</span><br><span class="line">[&lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"8b62401cbaeed777430915d8d2b4d834"</span>, element=<span class="string">"0.9216159265436044-2"</span>)&gt;,</span><br><span class="line"> &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"8b62401cbaeed777430915d8d2b4d834"</span>, element=<span class="string">"0.9216159265436044-3"</span>)&gt;,</span><br><span class="line"> &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"8b62401cbaeed777430915d8d2b4d834"</span>, element=<span class="string">"0.9216159265436044-4"</span>)&gt;,</span><br><span class="line"> &lt;selenium.webdriver.remote.webelement.WebElement (session=<span class="string">"8b62401cbaeed777430915d8d2b4d834"</span>, element=<span class="string">"0.9216159265436044-5"</span>)&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历被选中的元素对象，打印其value属性的值</span></span><br><span class="line">In [<span class="number">56</span>]: <span class="keyword">for</span> option <span class="keyword">in</span> ele_select.all_selected_options:</span><br><span class="line">    ...:    print(option.get_attribute(<span class="string">'value'</span>))</span><br><span class="line">    ...:</span><br><span class="line">xj</span><br><span class="line">xg</span><br><span class="line">xhs</span><br><span class="line">pg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据索引值反选</span></span><br><span class="line">In [<span class="number">57</span>]: ele_select.deselect_by_index(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 反选全部</span></span><br><span class="line">In [<span class="number">58</span>]: ele_select.deselect_all()</span><br></pre></td></tr></table></figure><h3 id="浏览器的前进后退功能"><a href="#浏览器的前进后退功能" class="headerlink" title="浏览器的前进后退功能"></a>浏览器的前进后退功能</h3><p>使用Selenium WebDriver的API控制浏览器的前进后退功能，回到<code>ipython</code>环境中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">60</span>]: browser = webdriver.Chrome()</span><br><span class="line">In [<span class="number">62</span>]: browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取百度的搜索框</span></span><br><span class="line">In [<span class="number">63</span>]: ele_input = browser.find_element_by_name(<span class="string">'wd'</span>)</span><br><span class="line"><span class="comment"># 输入内容</span></span><br><span class="line">In [<span class="number">64</span>]: ele_input.send_keys(<span class="string">'sunjiajia.com'</span>)</span><br><span class="line"><span class="comment"># 获取按钮</span></span><br><span class="line">In [<span class="number">65</span>]: ele_submit = browser.find_element_by_id(<span class="string">'su'</span>)</span><br><span class="line"><span class="comment"># 点击按钮</span></span><br><span class="line">In [<span class="number">66</span>]: ele_submit.click()</span><br><span class="line"><span class="comment"># 获取下一页元素</span></span><br><span class="line">In [<span class="number">67</span>]: ele_next = browser.find_element_by_class_name(<span class="string">'n'</span>)</span><br><span class="line"><span class="comment"># 点击下一页元素</span></span><br><span class="line">In [<span class="number">68</span>]: ele_next.click()</span><br><span class="line"><span class="comment"># 再次点击下一页元素，发现报错，因为当前页面的内容已经改变，需要重新获取下一页元素</span></span><br><span class="line">In [<span class="number">69</span>]: ele_next.click()</span><br><span class="line"><span class="comment"># 重新获取下一页元素</span></span><br><span class="line">In [<span class="number">70</span>]: ele_next = browser.find_element_by_class_name(<span class="string">'n'</span>)</span><br><span class="line"><span class="comment"># 点击元素，我们发现竟然回到了第一页，那是因为，当前页非第1页时，页面上出现了上一页元素，class属性值也为n，因此，这时得到的元素为上一页元素</span></span><br><span class="line">In [<span class="number">71</span>]: ele_next.click()</span><br><span class="line"><span class="comment"># 获取class值为n的所有元素，取最后一个，就是下一页元素</span></span><br><span class="line">In [<span class="number">74</span>]: ele_next = browser.find_elements_by_class_name(<span class="string">'n'</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># 点击下一页元素</span></span><br><span class="line">In [<span class="number">75</span>]: ele_next.click()</span><br><span class="line"><span class="comment"># 再次获取下一页元素</span></span><br><span class="line">In [<span class="number">77</span>]: ele_next = browser.find_elements_by_class_name(<span class="string">'n'</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># 再次点击下一页元素</span></span><br><span class="line">In [<span class="number">78</span>]: ele_next.click()</span><br><span class="line"><span class="comment"># 操作浏览器后退</span></span><br><span class="line">In [<span class="number">79</span>]: browser.back()</span><br><span class="line"><span class="comment"># 操作浏览器前进</span></span><br><span class="line">In [<span class="number">80</span>]: browser.forward()</span><br></pre></td></tr></table></figure><h3 id="Cookies操作"><a href="#Cookies操作" class="headerlink" title="Cookies操作"></a>Cookies操作</h3><p>我们在爬虫的过程中，不可避免的就是遇到登录问题，因此，需要了解Cookies操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">100</span>]: browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有Cookie</span></span><br><span class="line">In [<span class="number">101</span>]: browser.get_cookies()</span><br><span class="line">Out[<span class="number">101</span>]:</span><br><span class="line">[&#123;<span class="string">'domain'</span>: <span class="string">'.baidu.com'</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'H_PS_PSSID'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'1426_21117_26350_26433_22075'</span>&#125;,</span><br><span class="line"> &#123;<span class="string">'domain'</span>: <span class="string">'.baidu.com'</span>,</span><br><span class="line">  <span class="string">'expiry'</span>: <span class="number">3677830659.441811</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'BIDUPSID'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'C914BFBE505CBD0F56D8C9E95B71AF50'</span>&#125;,</span><br><span class="line"> &#123;<span class="string">'domain'</span>: <span class="string">'.baidu.com'</span>,</span><br><span class="line">  <span class="string">'expiry'</span>: <span class="number">3677830659.441852</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'PSTM'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'1530347012'</span>&#125;,</span><br><span class="line"> &#123;<span class="string">'domain'</span>: <span class="string">'.baidu.com'</span>,</span><br><span class="line">  <span class="string">'expiry'</span>: <span class="number">1530433417.192771</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'BDORZ'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'B490B5EBF6F3CD402E515D22BCDA1598'</span>&#125;,</span><br><span class="line"> &#123;<span class="string">'domain'</span>: <span class="string">'www.baidu.com'</span>,</span><br><span class="line">  <span class="string">'expiry'</span>: <span class="number">1531211072</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'BD_UPN'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'123253'</span>&#125;,</span><br><span class="line"> &#123;<span class="string">'domain'</span>: <span class="string">'www.baidu.com'</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'BD_HOME'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'0'</span>&#125;,</span><br><span class="line"> &#123;<span class="string">'domain'</span>: <span class="string">'.baidu.com'</span>,</span><br><span class="line">  <span class="string">'expiry'</span>: <span class="number">3677830659.441722</span>,</span><br><span class="line">  <span class="string">'httpOnly'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'BAIDUID'</span>,</span><br><span class="line">  <span class="string">'path'</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="string">'secure'</span>: <span class="keyword">False</span>,</span><br><span class="line">  <span class="string">'value'</span>: <span class="string">'C914BFBE505CBD0F56D8C9E95B71AF50:FG=1'</span>&#125;]</span><br><span class="line"><span class="comment"># 添加Cookie</span></span><br><span class="line">In [<span class="number">102</span>]: browser.add_cookie(cookie_dict=browser.get_cookies()[<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><h3 id="滚动条操作"><a href="#滚动条操作" class="headerlink" title="滚动条操作"></a>滚动条操作</h3><p>一些页面是动态加载，只有当页面展示给用户可见的时候，才会加载相应的数据。例如，京东商品页面信息，向下滚动的时候才会请求另外30个item。因此，就需要操作浏览器滚动条，滚动到底部，让所有的信息都加载出来。</p><p>我们在<code>ipython</code>中使用一下滚动条的操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">119</span>]: browser = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">In [<span class="number">120</span>]: browser.get(<span class="string">'https://www.jd.com'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">121</span>]: ele_search = browser.find_element_by_id(<span class="string">'key'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">122</span>]: ele_submit = browser.find_element_by_class_name(<span class="string">'button'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">123</span>]: ele_search.send_keys(<span class="string">'书包'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">124</span>]: ele_submit.click()</span><br><span class="line"></span><br><span class="line">In [<span class="number">125</span>]: <span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">In [<span class="number">126</span>]: soup = BeautifulSoup(browser.page_source,<span class="string">'lxml'</span>)</span><br><span class="line"><span class="comment"># 此时，页面上商品信息只有30个</span></span><br><span class="line">In [<span class="number">127</span>]: len(soup.findAll(<span class="string">'li'</span>,class_=<span class="string">'gl-item'</span>))</span><br><span class="line">Out[<span class="number">127</span>]: <span class="number">30</span></span><br><span class="line"><span class="comment"># 将滚动条滚动到底部</span></span><br><span class="line">In [<span class="number">128</span>]: browser.execute_script(<span class="string">'window.scrollTo(0, document.body.scrollHeight)'</span>)</span><br><span class="line"><span class="comment"># 重新生成标签树对象</span></span><br><span class="line">In [<span class="number">129</span>]: soup = BeautifulSoup(browser.page_source,<span class="string">'lxml'</span>)</span><br><span class="line"><span class="comment"># 此时，页面上的商品信息有60个</span></span><br><span class="line">In [<span class="number">130</span>]: len(soup.findAll(<span class="string">'li'</span>,class_=<span class="string">'gl-item'</span>))</span><br><span class="line">Out[<span class="number">130</span>]: <span class="number">60</span></span><br></pre></td></tr></table></figure><h2 id="等待页面加载完成-Waits"><a href="#等待页面加载完成-Waits" class="headerlink" title="等待页面加载完成(Waits)"></a>等待页面加载完成(Waits)</h2><p>现在我们在互联网上遇到的网站大多都会使用动态加载页面，因此，对我们的爬虫造成一定的干扰。页面中的元素或者内容，可以在不同的时间动态加载，这使得定位元素变得困难，例如前面的京东实战，60个页面item中有30个是后台动态请求服务器进行加载后渲染的。如果我们在定位元素的时候，元素还未被加载出来，那么将会<code>ElementNotVisibleException</code>异常。</p><p>使用<code>Waits</code>来等待页面完整加载出来，就可以解决该问题。</p><p>Selenium WebDriver提供两种类型的waits，即<strong>隐式waits</strong>和<strong>显式waits</strong>。</p><p>它们之间的区别是，<strong>隐式等待是让WebDriver等待一段时间后再查找元素；显式等待是让WebDriver等待满足某一条件后再进行下一步的操作。</strong></p><h3 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h3><p>WebDriverWait结合ExpectedCondition是一种比较好用的方式。</p><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">"http://somedomain/url_that_delays_loading"</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    element = WebDriverWait(driver, <span class="number">10</span>).until(</span><br><span class="line">        EC.presence_of_element_located((By.ID, <span class="string">"myDynamicElement"</span>))</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    driver.quit()</span><br></pre></td></tr></table></figure><p>在请求没有超时的情况下，等待10秒或者在10秒内发现了查找的元素。WebDriverWait 默认情况下会每500毫秒调用一次ExpectedCondition直到结果成功返回。 ExpectedCondition成功的返回结果是一个布尔类型的true或是不为null的返回值。</p><p>常用预期条件如下：</p><table><thead><tr><th>预期条件</th><th>含义</th></tr></thead><tbody><tr><td>title_is</td><td>判断当前页面的title是否等于预期</td></tr><tr><td>title_contains</td><td>判断当前页面的title是否包含预期字符串</td></tr><tr><td>presence_of_element_located</td><td>判断某个元素是否被加到了dom树里，并不代表该元素一定可见</td></tr><tr><td>visibility_of_element_located</td><td>判断某个元素是否可见. 可见代表元素非隐藏，并且元素的宽和高都不等于0</td></tr><tr><td>visibility_of</td><td>跟上面的方法做一样的事情，只是上面的方法要传入locator，这个方法直接传定位到的element就好了</td></tr><tr><td>presence_of_all_elements_located</td><td>判断是否至少有1个元素存在于dom树中。举个例子，如果页面上有n个元素的class都是’column-md-3’，那么只要有1个元素存在，这个方法就返回True</td></tr><tr><td>text_to_be_present_in_element</td><td>判断某个元素中的text是否包含了预期的字符串</td></tr><tr><td>text_to_be_present_in_element_value</td><td>判断某个元素中的value属性是否包含了预期的字符串</td></tr><tr><td>frame_to_be_available_and_switch_to_it</td><td>判断该frame是否可以switch进去，如果可以的话，返回True并且switch进去，否则返回False</td></tr><tr><td>invisibility_of_element_located</td><td>判断某个元素中是否不存在于dom树或不可见</td></tr><tr><td>element_to_be_clickable</td><td>判断某个元素中是否可见并且是enable的，这样的话才叫clickable</td></tr><tr><td>staleness_of</td><td>等某个元素从dom树中移除，注意，这个方法也是返回True或False</td></tr><tr><td>element_to_be_selected</td><td>判断某个元素是否被选中了，一般用在下拉列表</td></tr><tr><td>element_located_to_be_selected</td><td>跟上面的方法作用一样，只是上面的方法传入定位到的element，而这个方法传入locator</td></tr><tr><td>element_selection_state_to_be</td><td>判断某个元素的选中状态是否符合预期</td></tr><tr><td>element_located_selection_state_to_be</td><td>跟上面的方法作用一样，只是上面的方法传入定位到的element，而这个方法传入locator</td></tr><tr><td>alert_is_present</td><td>判断页面上是否存在alert</td></tr></tbody></table><h3 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h3><p>如果某些元素不是立即可用的，隐式等待是告诉WebDriver去等待一定的时间后去查找元素。 默认等待时间是0秒，一旦设置该值，隐式等待是设置该WebDriver的实例的生命周期。</p><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>) <span class="comment"># seconds</span></span><br><span class="line">driver.get(<span class="string">"http://somedomain/url_that_delays_loading"</span>)</span><br><span class="line">myDynamicElement = driver.find_element_by_id(<span class="string">"myDynamicElement"</span>)</span><br></pre></td></tr></table></figure><h1 id="PhantomJS无头浏览器的用法"><a href="#PhantomJS无头浏览器的用法" class="headerlink" title="PhantomJS无头浏览器的用法"></a>PhantomJS无头浏览器的用法</h1><p>其实PhantomJS在爬虫中的应用非常简单，只需用WebDriver驱动PhantomJS即可，回到<code>ipython</code>环境中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">143</span>]: browser = webdriver.PhantomJS()</span><br><span class="line">/Users/sunjiajia/Works/pyenv/crawler/lib/python3<span class="number">.6</span>/site-packages/selenium/webdriver/phantomjs/webdriver.py:<span class="number">49</span>: UserWarning: Selenium support <span class="keyword">for</span> PhantomJS has been deprecated, please use headless versions of Chrome <span class="keyword">or</span> Firefox instead</span><br><span class="line">  warnings.warn(<span class="string">'Selenium support for PhantomJS has been deprecated, please use headless '</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">146</span>]: browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">148</span>]: browser.page_source[:<span class="number">1000</span>]</span><br><span class="line">Out[<span class="number">148</span>]: <span class="string">'&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;&lt;head&gt;\n    \n    &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;\n    &lt;meta http-equiv="X-UA-Compatible" content="IE=Edge"&gt;\n\t&lt;meta content="always" name="referrer"&gt;\n    &lt;meta name="theme-color" content="#2932e1"&gt;\n    &lt;link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"&gt;\n    &lt;link rel="search" type="application/opensearchdescription+xml" href="/content-search.xml" title="百度搜索"&gt;\n    &lt;link rel="icon" sizes="any" mask="" href="//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg"&gt;\n\t\n\t\n\t&lt;link rel="dns-prefetch" href="//s1.bdstatic.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t1.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t2.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t3.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t10.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t11.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t12.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//b1.bdstatic.com"&gt;\n    \n    &lt;title&gt;百度一下，你就知道&lt;/title&gt;\n  '</span></span><br></pre></td></tr></table></figure><p>ヽ(^o^)丿这是什么鬼？竟然提示Selenium已经废弃了对PhantomJS的支持，但，还是获取到了信息。讲到这里了都，瑟瑟发抖中。。</p><p>于是，再加一个小章节，说明解决这个问题的方法。</p><h2 id="headless-Chrome的用法"><a href="#headless-Chrome的用法" class="headerlink" title="headless Chrome的用法"></a>headless Chrome的用法</h2><p>Selenium WebDriver已经通知我们，将废弃对PhantomJS的支持，那么，我们来使用一下headless Chrome吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options <span class="keyword">as</span> ChromeOptions</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: chrome_options = ChromeOptions()</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: chrome_options.add_argument(<span class="string">'--disable-gpu'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: browser = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: browser.page_source[:<span class="number">1000</span>]</span><br><span class="line">Out[<span class="number">8</span>]: <span class="string">'&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;\n    \n    &lt;meta http-equiv="content-type" content="text/html;charset=utf-8" /&gt;\n    &lt;meta http-equiv="X-UA-Compatible" content="IE=Edge" /&gt;\n\t&lt;meta content="always" name="referrer" /&gt;\n    &lt;meta name="theme-color" content="#2932e1" /&gt;\n    &lt;link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" /&gt;\n    &lt;link rel="search" type="application/opensearchdescription+xml" href="/content-search.xml" title="百度搜索" /&gt;\n    &lt;link rel="icon" sizes="any" mask="" href="//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg" /&gt;\n\t\n\t\n\t&lt;link rel="dns-prefetch" href="//s1.bdstatic.com" /&gt;\n\t&lt;link rel="dns-prefetch" href="//t1.baidu.com" /&gt;\n\t&lt;link rel="dns-prefetch" href="//t2.baidu.com" /&gt;\n\t&lt;link rel="dns-prefetch" href="//t3.baidu.com" /&gt;\n\t&lt;link rel="dns-prefetch" href="//t10.baidu.com" /&gt;\n\t&lt;link rel="dns-prefetch" href="//t11.baidu.com" /&gt;\n\t&lt;link rel="dns-prefetch" href="//t12.baidu.com" /&gt;\n\t&lt;link rel="dns-prefetc'</span></span><br></pre></td></tr></table></figure><h2 id="headless-Firefox的用法"><a href="#headless-Firefox的用法" class="headerlink" title="headless Firefox的用法"></a>headless Firefox的用法</h2><p>在<code>ipython</code>中测试headless Firefox的用法，其实和headless Chrome的用法基本一致：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">from</span> selenium.webdriver.firefox.options <span class="keyword">import</span> Options <span class="keyword">as</span> FFOptions</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: ff_options = FFOptions()</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: ff_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: browser = webdriver.Firefox(firefox_options=ff_options)</span><br><span class="line">    </span><br><span class="line">In [<span class="number">7</span>]: browser.get(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: browser.page_source[:<span class="number">1000</span>]</span><br><span class="line">Out[<span class="number">9</span>]: <span class="string">'&lt;html&gt;&lt;head&gt;\n    \n    &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;\n    &lt;meta http-equiv="X-UA-Compatible" content="IE=Edge"&gt;\n\t&lt;meta content="always" name="referrer"&gt;\n    &lt;meta name="theme-color" content="#2932e1"&gt;\n    &lt;link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"&gt;\n    &lt;link rel="search" type="application/opensearchdescription+xml" href="/content-search.xml" title="百度搜索"&gt;\n    &lt;link rel="icon" sizes="any" mask="" href="//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg"&gt;\n\t\n\t\n\t&lt;link rel="dns-prefetch" href="//s1.bdstatic.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t1.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t2.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t3.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t10.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t11.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//t12.baidu.com"&gt;\n\t&lt;link rel="dns-prefetch" href="//b1.bdstatic.com"&gt;\n    \n    &lt;title&gt;百度一下，你就知道&lt;/title&gt;\n    \n\n&lt;style id="css_index" index'</span></span><br></pre></td></tr></table></figure><h1 id="Selenium-WebDriver的常用方法总结"><a href="#Selenium-WebDriver的常用方法总结" class="headerlink" title="Selenium WebDriver的常用方法总结"></a>Selenium WebDriver的常用方法总结</h1><h2 id="浏览器常用功能操作"><a href="#浏览器常用功能操作" class="headerlink" title="浏览器常用功能操作"></a>浏览器常用功能操作</h2><table><thead><tr><th>用法</th><th>含义</th></tr></thead><tbody><tr><td>browser.maximize_window()</td><td>浏览器最大化</td></tr><tr><td>browser.set_window_size(480, 800)</td><td>设置浏览器的宽高</td></tr><tr><td>browser.back()</td><td>浏览器后退</td></tr><tr><td>browser.forward()</td><td>浏览器前进</td></tr><tr><td>browser.quit()</td><td>浏览器退出</td></tr><tr><td>browser.title</td><td>浏览器标题</td></tr><tr><td>browser.current_url</td><td>浏览器当前网址</td></tr></tbody></table><h2 id="对象定位操作"><a href="#对象定位操作" class="headerlink" title="对象定位操作"></a>对象定位操作</h2><table><thead><tr><th>方法名</th><th>含义</th></tr></thead><tbody><tr><td>browser.find_element_by_id()</td><td>根据标签的id属性值查找</td></tr><tr><td>browser.find_element_by_name()</td><td>根据标签的name属性值查找，当有多个时，返回第1个</td></tr><tr><td>browser.find_element_by_class_name()</td><td>根据标签的class属性值查找，当有多个时，返回第1个</td></tr><tr><td>browser.find_element_by_tag_name()</td><td>根据标签名值查找</td></tr><tr><td>browser.find_element_by_link_text()</td><td>根据标签的文字链接查找</td></tr><tr><td>browser.find_element_by_partial_link_text()</td><td>根据标签的文字链接模糊查找</td></tr><tr><td>browser.find_element_by_xpath()</td><td>根据xpath表达式进行匹配查找</td></tr><tr><td>browser.find_element_by_css_selector()</td><td>根据css表达式进行匹配查找</td></tr></tbody></table><p>另外，还有一系列的<code>browser.find_elements_by_**</code>方法，它们是对应的复数形式，返回的是列表，列表中存储的是<code>selenium.webdriver.remote.webelement.WebElement</code>类型。</p><h2 id="元素操作"><a href="#元素操作" class="headerlink" title="元素操作"></a>元素操作</h2><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td>element.clear()</td><td>如果可以的话，清除元素的内容</td></tr><tr><td>element.send_keys()</td><td>在元素上模拟按键输入</td></tr><tr><td>element.click()</td><td>单击元素</td></tr><tr><td>element.submit()</td><td>表单提交</td></tr></tbody></table><h2 id="键盘操作"><a href="#键盘操作" class="headerlink" title="键盘操作"></a>键盘操作</h2><p>send_keys()可用Keys类来模拟键盘操作，常用的操作有：</p><table><thead><tr><th>操作名</th><th>含义</th></tr></thead><tbody><tr><td>send_keys(Keys.BACK_SPACE)</td><td>删除键（BackSpace）</td></tr><tr><td>send_keys(Keys.SPACE)</td><td>空格键(Space)</td></tr><tr><td>send_keys(Keys.TAB)</td><td>制表键(Tab)</td></tr><tr><td>send_keys(Keys.ESCAPE)</td><td>回退键（Esc）</td></tr><tr><td>send_keys(Keys.ENTER)</td><td>回车键（Enter）</td></tr><tr><td>send_keys(Keys.CONTROL,’a’)</td><td>全选（Ctrl+A）</td></tr><tr><td>send_keys(Keys.CONTROL,’c’)</td><td>复制（Ctrl+C）</td></tr><tr><td>send_keys(Keys.CONTROL,’x’)</td><td>剪切（Ctrl+X）</td></tr><tr><td>send_keys(Keys.CONTROL,’v’)</td><td>粘贴（Ctrl+V）</td></tr></tbody></table><h2 id="浏览器多窗口"><a href="#浏览器多窗口" class="headerlink" title="浏览器多窗口"></a>浏览器多窗口</h2><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>browser.current_window_handle</td><td>获得当前窗口</td></tr><tr><td>browser.window_handles</td><td>获取全部窗口</td></tr><tr><td>browser.window_handles[1]</td><td>获取第2个窗口</td></tr><tr><td>browser.switch_to_window(driver.window_handles[1])</td><td>切换到第2个窗口</td></tr><tr><td>browser.close()</td><td>关闭窗口</td></tr></tbody></table><h2 id="Cookie处理"><a href="#Cookie处理" class="headerlink" title="Cookie处理"></a>Cookie处理</h2><table><thead><tr><th>方法名</th><th>含义</th></tr></thead><tbody><tr><td>get_cookies()</td><td>获得所有cookie 信息</td></tr><tr><td>get_cookie(name)</td><td>返回特定name 有cookie 信息</td></tr><tr><td>add_cookie(cookie_dict)</td><td>添加cookie，必须有name 和value 值</td></tr><tr><td>delete_cookie(name)</td><td>删除特定(部分)的cookie 信息</td></tr><tr><td>delete_all_cookies()</td><td>删除所有cookie 信息</td></tr></tbody></table><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问xxxx 网站</span></span><br><span class="line">driver.get(<span class="string">"http://www.xxxx.com/"</span>)</span><br><span class="line"><span class="comment"># 将用户名密码写入浏览器cookie</span></span><br><span class="line">driver.add_cookie(&#123;<span class="string">'name'</span>:<span class="string">'username'</span>, <span class="string">'value'</span>:<span class="string">'gitopen'</span>&#125;)</span><br><span class="line">driver.add_cookie(&#123;<span class="string">'name'</span>:<span class="string">'password'</span>, <span class="string">'value'</span>:<span class="string">'123456'</span>&#125;)</span><br><span class="line"><span class="comment"># 再次访问xxxx 网站，将会自动登录</span></span><br><span class="line">driver.get(<span class="string">"http://www.xxxx.com/"</span>)</span><br></pre></td></tr></table></figure><h1 id="实战——用Selenium爬取腾讯招聘信息"><a href="#实战——用Selenium爬取腾讯招聘信息" class="headerlink" title="实战——用Selenium爬取腾讯招聘信息"></a>实战——用Selenium爬取腾讯招聘信息</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--diable-gpu'</span>)</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="line">browser.get(<span class="string">"https://hr.tencent.com/position.php?&amp;start=0#a"</span>)</span><br><span class="line"></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    job = &#123;&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        element = WebDriverWait(browser, <span class="number">10</span>).until(</span><br><span class="line">            EC.presence_of_all_elements_located((By.ID, <span class="string">'next'</span>))</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(str(e))</span><br><span class="line">    browser.execute_script(<span class="string">'window.scrollTo(0, document.body.scrollHeight)'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析内容</span></span><br><span class="line">    print(<span class="string">"## 正在爬取连接：&#123;&#125;"</span>.format(browser.current_url))</span><br><span class="line">    soup = BeautifulSoup(browser.page_source, <span class="string">'lxml'</span>)</span><br><span class="line">    tag_table = soup.find(<span class="string">'table'</span>)</span><br><span class="line">    tr_even = tag_table.find_all(<span class="string">'tr'</span>, &#123;<span class="string">'class'</span>: <span class="string">'even'</span>&#125;)</span><br><span class="line">    tr_odd = tag_table.find_all(<span class="string">'tr'</span>, &#123;<span class="string">'class'</span>: <span class="string">'odd'</span>&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> tr_even + tr_odd:</span><br><span class="line">        tds = tr.find_all(<span class="string">'td'</span>)</span><br><span class="line">        job[<span class="string">'url'</span>] = <span class="string">"https://hr.tencent.com/"</span> + tds[<span class="number">0</span>].a.attrs[<span class="string">'href'</span>]</span><br><span class="line">        job[<span class="string">'title'</span>] = tds[<span class="number">0</span>].a.string</span><br><span class="line">        job[<span class="string">'level'</span>] = tds[<span class="number">1</span>].string <span class="keyword">if</span> tds[<span class="number">1</span>].string <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> <span class="string">""</span></span><br><span class="line">        job[<span class="string">'num'</span>] = tds[<span class="number">2</span>].string</span><br><span class="line">        job[<span class="string">'location'</span>] = tds[<span class="number">3</span>].string</span><br><span class="line">        job[<span class="string">'date'</span>] = tds[<span class="number">4</span>].string</span><br><span class="line">    <span class="comment"># 将每次爬取到的信息放入最终结果字典中</span></span><br><span class="line">    result.append(job)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拿到下一页tag</span></span><br><span class="line">    a_next = soup.find(id=<span class="string">'next'</span>)</span><br><span class="line">    <span class="comment"># 判断下一页能否点击，如果不可以，说明当前页是最后一页，退出循环；如果能够点击，那么点击它，继续循环</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'class'</span> <span class="keyword">in</span> a_next.attrs.keys() <span class="keyword">and</span> a_next.attrs[<span class="string">'class'</span>][<span class="number">0</span>] == <span class="string">'noactive'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ele_next = browser.find_element_by_id(<span class="string">'next'</span>)</span><br><span class="line">        ele_next.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将结果保存到文件中，以json格式</span></span><br><span class="line">localtime = <span class="string">"-"</span>.join(time.asctime(time.localtime(time.time())).split(<span class="string">' '</span>))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"job_"</span> + localtime + <span class="string">'.json'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> filename:</span><br><span class="line">    filename.write(json.dumps(result, ensure_ascii=<span class="keyword">False</span>))</span><br><span class="line">print(<span class="string">"### 爬取完毕"</span>)</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://selenium-python-zh.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">《Selenium with Python中文翻译文档》</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程所有源码下载链接：&lt;a href=&quot;https://share.weiyun.com/5xmFeUO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://share.weiyun.com/5xmFeUO&lt;/a&gt; 密
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://blog.sunjiajia.com/tags/Crawler/"/>
    
      <category term="Spider" scheme="https://blog.sunjiajia.com/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>《手把手带你学爬虫──初级篇》第4课 正则表达式以及re库的用法</title>
    <link href="https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson04-re/"/>
    <id>https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson04-re/</id>
    <published>2018-09-14T04:12:04.000Z</published>
    <updated>2018-09-19T00:51:11.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程所有源码下载链接：<a href="https://share.weiyun.com/5xmFeUO" target="_blank" rel="noopener">https://share.weiyun.com/5xmFeUO</a> 密码：fzwh6g</p></blockquote><h1 id="正则表达式以及re库的用法"><a href="#正则表达式以及re库的用法" class="headerlink" title="正则表达式以及re库的用法"></a>正则表达式以及re库的用法</h1><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>正则表达式</strong>，又称规则表达式，英文Regular Expression，常简写为regex、regexp或者RE；它通常被用来快速检索、替换那些符合某个正则表达式的文本。</p><p>正则表达式的优势，决定了我们需要学习它：</p><ul><li>具有很强的<strong>灵活性和逻辑性</strong>，同时<strong>功能性</strong>也非常强；</li><li>可以用<strong>及其简单</strong>的正则表达式找寻复杂多变的字符串；</li></ul><p>但是对于新手而言，掌握它的使用方法又是比较困难。</p><p><strong>re库</strong>是一个Python内置的用于进行一系列正则表达式操作的库。使用它，我们可以方便的使用正则表达式对字符串进行操作。<strong>它可以将一个正则表达式字符串编译为一个正则表达式特征，从而表达具有相同特征的字符串。</strong></p><p>例如：我们有这样一组字符串：<code>HI</code>、<code>HII</code>、<code>HIII</code>、<code>HIIII</code>、……、<code>HIIIIIII...</code>，那么，就可以用正则表达式<code>HI+</code>来表达这一组无穷字符串。</p><h1 id="正则表达式的用法"><a href="#正则表达式的用法" class="headerlink" title="正则表达式的用法"></a>正则表达式的用法</h1><h2 id="正则表达式的常用操作符"><a href="#正则表达式的常用操作符" class="headerlink" title="正则表达式的常用操作符"></a>正则表达式的常用操作符</h2><p>这些操作符是组成正则表达式的基本单元，因此，我们需要熟悉它们：</p><table><thead><tr><th>操作符</th><th>含义</th><th>例子</th></tr></thead><tbody><tr><td><code>.</code></td><td>表示任意的单个字符</td><td></td></tr><tr><td><code>[]</code></td><td>对单个字符设定取值范围，字符集</td><td><code>[a-z]</code>表示a到z单个字符</td></tr><tr><td><code>[^]</code></td><td>对单个字符设定排除范围，非字符集</td><td><code>[^xyz]</code>表示非x非y非z的单个字符</td></tr><tr><td><code>*</code></td><td>前一个字符，出现0次或者无限次扩展</td><td><code>xyz*</code>表示xy,xyz,xyzz,xyzzz,…</td></tr><tr><td><code>+</code></td><td>前一个字符，出现1次或无限次扩展</td><td><code>xyz+</code>表示xyz,xyzz,xyzzz,…</td></tr><tr><td><code>?</code></td><td>前一个字符，出现0次或者1次扩展</td><td><code>xyz?</code>表示xy,xyz</td></tr><tr><td>`</td><td>`</td><td>左右表达式任意一个字符串</td><td>`abc</td><td>xyz`表示abc,xyz</td></tr><tr><td><code>{m}</code></td><td>重复<strong>前一个字符</strong>m次</td><td><code>xy{2}z</code>表示xyyz</td></tr><tr><td><code>{m,n}</code></td><td>重复<strong>前一个字符</strong>m到n次，前后包含</td><td><code>xy{2,3}z</code>表示xyyz,xyyyz</td></tr><tr><td><code>^</code></td><td>匹配开头，匹配字符串的<strong>开头</strong></td><td><code>^xyz</code>表示xyz在一个字符串的开头</td></tr><tr><td><code>$</code></td><td>匹配结尾，匹配字符串的<strong>结尾</strong></td><td><code>xyz$</code>表示xyz在一个字符串的结尾</td></tr><tr><td><code>()</code></td><td>分组标记，里面只能使用\</td><td>操作符</td><td>`(abc</td><td>xyz)`表示abc,xyz</td></tr><tr><td><code>\d</code></td><td>匹配任意一个0-9的数字</td><td>相当于[0-9]</td></tr><tr><td><code>\w</code></td><td>非特殊字符并且非标点符号</td><td>相当于[a-zA-Z0-9]</td></tr></tbody></table><p><code>^</code>这个符号叫做异或符。</p><p>看几个小例子：</p><table><thead><tr><th>正则表达式</th><th>表示的字符串</th></tr></thead><tbody><tr><td>f(r\</td><td>ri\</td><td>rie\</td><td>rien)?d</td><td>fd,frd,frid,fried,friend</td></tr><tr><td>boy+</td><td>boy,boyy,boyyy,boyyy,… …</td></tr><tr><td>frien{:4}d</td><td>fried,friend,friennd,friennnd,friennnnd</td></tr></tbody></table><h2 id="常用正则表达式的实例"><a href="#常用正则表达式的实例" class="headerlink" title="常用正则表达式的实例"></a>常用正则表达式的实例</h2><p>这里总结了一些常用的正则表达式，既能够达到练手的目的，也能够方便日后直接使用。需要注意的是，这些常用正则表达式不一定精确，有时只在特定的业务背景下，能够得到自己想要的结果。</p><table><thead><tr><th>正则表达式</th><th>含义</th></tr></thead><tbody><tr><td><code>^[A-Za-z]+$</code></td><td>26个字母组成的字符串</td></tr><tr><td><code>^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</code></td><td>匹配Email地址</td></tr><tr><td><code>[1-9]\d{5}</code></td><td>中国邮政编码</td></tr><tr><td>`  ^([1-9]\d{5}[12]\d{3}(0[1-9]</td><td>1[012])(0[1-9]</td><td>[12][0-9]</td><td>3[01])\d{3}[0-9xX])$`</td><td>匹配身份证</td></tr><tr><td><code>\d+.\d+.\d+.\d+</code></td><td>匹配ip地址，提取时有用</td></tr><tr><td><code>^[1-9]\d*$</code></td><td>匹配正整数</td></tr><tr><td>` ^[1-9]\d*</td><td>0$`</td><td>匹配非负整数（正整数 + 0）</td></tr><tr><td><code>^[A-Z]+$</code></td><td>匹配由26个英文字母的大写组成的字符串</td></tr><tr><td><code>^[a-z]+$</code></td><td>匹配由26个英文字母的小写组成的字符串</td></tr><tr><td><code>^[A-Za-z0-9]+$</code></td><td>匹配由数字和26个英文字母组成的字符串</td></tr><tr><td><code>^w+$</code></td><td>匹配由数字、26个英文字母或者下划线组成的字符串</td></tr><tr><td><code>[\u4e00-\u9fa5]</code></td><td>匹配中文字符</td></tr></tbody></table><h1 id="re库的使用方法"><a href="#re库的使用方法" class="headerlink" title="re库的使用方法"></a>re库的使用方法</h1><p>re库是Python的标准库，主要用于字符串的匹配。</p><p>使用时，导入re即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><h2 id="正则表达式的表示类型"><a href="#正则表达式的表示类型" class="headerlink" title="正则表达式的表示类型"></a>正则表达式的表示类型</h2><ol><li><p><strong>raw string类型</strong>，也叫原生字符串类型，指不包含转义字符的字符串。即，原生字符串中的转义字符<code>\</code>当做普通字符，不具有转义功能。</p><p>re库采用raw string类型表示正则表达式，格式为：</p><p><code>r&#39;[1-9]\d{5}&#39;</code>或者<code>r&quot;[1-9]\d{5}&quot;</code>。</p></li><li><p><strong>string类型</strong>，字符串类型，将<code>\</code>理解为转义字符，因此写起来比较繁琐。</p><p>例如，上面的邮政编码正则表达式，就必须写为：<code>&#39;[1-9]\\d{5}&#39;</code>，第1个斜杠为转义字符标识，将第2个字符转义为普通的斜杠，从而表示<code>\d</code>。</p></li></ol><p>因此，我们推荐，<strong>当正则表达式中包含转义字符<code>\</code>的时候，使用raw string类型表示。</strong></p><h2 id="re库的常用函数"><a href="#re库的常用函数" class="headerlink" title="re库的常用函数"></a>re库的常用函数</h2><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>re.findall()</td><td>返回列表类型，返回匹配正则表达式的全部子字符串</td></tr><tr><td>re.match()</td><td>返回match对象，从字符串的开始位置起，匹配正则表达式</td></tr><tr><td>re.search()</td><td>返回match对象，在字符串中搜索和正则表达式相匹配的第一个位置</td></tr><tr><td>re.sub()</td><td>在字符串中替换掉所有匹配正则表达式的子字符串，返回替换后的字符串</td></tr><tr><td>re.finditer()</td><td>在字符串中搜索匹配正则表达式的子字符串，返回迭代类型，其中元素是match对象</td></tr><tr><td>re.split()</td><td>将字符串按照正则表达式进行匹配，将字符串匹配正则表达式的部分割开并返回一个列表</td></tr></tbody></table><p>下面，我们对这些函数进行详细解释以及在<code>ipython</code>中测试使用：</p><ol><li><p><code>re.search(pattern,string,flags=0)</code></p><ul><li><p>pattern：正则表达式的字符串或原生字符串表示；</p></li><li><p>string：待匹配字符串；</p></li><li><p>flags：正则表达式使用时的控制标记。</p><p>| 常用标记            | 说明                                                         |<br>| ——————- | ———————————————————— |<br>| re.I(re.IGNORECASE) | 忽略正则表达式的大小写，例如，<code>[A-Z]</code>可以匹配小写字符        |<br>| re.M(re.MULTILINE)  | <code>^</code>操作符能够将给定字符串的每行当做匹配开始，例如，字符串是一篇文章由多个段落组成，那么可以匹配每一行，并且从每一行的开始匹配 |<br>| re.S(re.DOTALL)     | <code>.</code>操作符能够匹配所有字符，默认匹配除换行外的所有字符，如果设置了，将可以匹配所有字符包括换行 |</p></li></ul><p>例子，匹配字符串中的邮政编码，示例字符串为<code>北京海淀 100036</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">10</span>]: match = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'北京海淀 100036'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">11</span>]: <span class="keyword">if</span> match:</span><br><span class="line">    ...:     print(match.group(<span class="number">0</span>))</span><br><span class="line">    ...:</span><br><span class="line"><span class="number">100036</span></span><br></pre></td></tr></table></figure></li><li><p><code>re.match(pattern,string,flags=0)</code></p><ul><li>参数和<code>re.search()</code>的一致</li></ul><p>例子，匹配字符串中的邮政编码，示例字符串为<code>北京海淀 100036</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">12</span>]: match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'北京海淀 100036'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">13</span>]: match.group(<span class="number">0</span>)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">AttributeError                            Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input<span class="number">-13</span><span class="number">-4</span>d972d6c40f1&gt; <span class="keyword">in</span> &lt;module&gt;()</span><br><span class="line">----&gt; 1 match.group(0)</span><br><span class="line"></span><br><span class="line">AttributeError: <span class="string">'NoneType'</span> object has no attribute <span class="string">'group'</span></span><br></pre></td></tr></table></figure><p>报错了。也就是说这个<code>match</code>是空的。因为，<code>re.match()</code>是从起始位置开始匹配，所以没有匹配到数据。验证了<code>re.match()</code>是从开始位置进行匹配。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">14</span>]: match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'100036 北京海淀'</span>)</span><br><span class="line">In [<span class="number">15</span>]: match.group(<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">15</span>]: <span class="string">'100036'</span></span><br></pre></td></tr></table></figure></li><li><p><code>re.findall(pattern,string,flags=0)</code></p><ul><li>参数和<code>re.search()</code>的一致</li></ul><p>例子，字符串为<code>北京海淀100036 郑州高新450001</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">16</span>]: ls = re.findall(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'北京海淀100036 郑州高新450001'</span>)</span><br><span class="line">In [<span class="number">17</span>]: ls</span><br><span class="line">Out[<span class="number">17</span>]: [<span class="string">'100036'</span>, <span class="string">'450001'</span>]</span><br></pre></td></tr></table></figure></li><li><p><code>re.split(pattern,string,maxsplit=0,flags=0)</code>:</p><ul><li>maxsplit：最大分割数，剩余部分作为最后一个元素输出；</li><li>其他三个参数和上面的一致。</li></ul><p>例子1，测试字符串为<code>北京海淀100036 郑州高新450001</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">18</span>]: ls = re.split(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'北京海淀100036 郑州高新450001'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">19</span>]: ls</span><br><span class="line">Out[<span class="number">19</span>]: [<span class="string">'北京海淀'</span>, <span class="string">' 郑州高新'</span>, <span class="string">''</span>]</span><br></pre></td></tr></table></figure><p>例子2，增加参数<code>maxsplit=1</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">20</span>]: ls = re.split(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'北京海淀100036 郑州高新450001'</span>, maxsplit=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">21</span>]: ls</span><br><span class="line">Out[<span class="number">21</span>]: [<span class="string">'北京海淀'</span>, <span class="string">' 郑州高新450001'</span>]</span><br></pre></td></tr></table></figure></li></ol><p>   例子3，是否保留匹配项的用法，给正则表达式加上小括号<code>()</code>，则保留匹配项，反之不保留：</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">22</span>]: ls = re.split(<span class="string">r'([1-9]\d&#123;5&#125;)'</span>, <span class="string">'北京海淀100036 郑州高新450001'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: ls</span><br><span class="line">Out[<span class="number">23</span>]: [<span class="string">'北京海淀'</span>, <span class="string">'100036'</span>, <span class="string">' 郑州高新'</span>, <span class="string">'450001'</span>, <span class="string">''</span>]</span><br></pre></td></tr></table></figure><ol start="5"><li><p><code>re.findall(pattern,string,flags=0)</code>：</p><ul><li>参数和<code>re.search()</code>的一致</li></ul><p>例子，测试字符串为<code>北京海淀100036 郑州高新450001</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">24</span>]: <span class="keyword">for</span> m <span class="keyword">in</span> re.finditer(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'北京海淀100036 郑州高新450001'</span>):</span><br><span class="line">    ...:     print(m.group(<span class="number">0</span>))</span><br><span class="line">    ...:</span><br><span class="line"><span class="number">100036</span></span><br><span class="line"><span class="number">450001</span></span><br></pre></td></tr></table></figure></li><li><p><code>re.sub(pattern,repl,string,count=0,flag=0)</code>：</p><ul><li>repl：替换匹配字符串的字符串，匹配到谁，就用repl将它替换；</li><li>count：匹配的最大替换次数；</li><li>剩余参数和其他re函数一致。</li></ul><p>例子，字符串为<code>北京海淀100036 郑州高新450001</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">29</span>]: re.sub(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,repl=<span class="string">":邮编"</span>,string=<span class="string">"北京海淀100036 郑州高新450001"</span>)</span><br><span class="line">Out[<span class="number">29</span>]: <span class="string">'北京海淀:邮编 郑州高新:邮编'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将count=1传入</span></span><br><span class="line">In [<span class="number">30</span>]: re.sub(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,repl=<span class="string">":邮编"</span>,string=<span class="string">"北京海淀100036 郑州高新450001"</span>,count=<span class="number">1</span>)</span><br><span class="line">Out[<span class="number">30</span>]: <span class="string">'北京海淀:邮编 郑州高新450001'</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="面向对象的用法"><a href="#面向对象的用法" class="headerlink" title="面向对象的用法"></a>面向对象的用法</h2><p>上面的讲解中，类似<code>re.findall()</code>的用法，叫做<code>函数式用法</code>；我们也可以使用面向对象的思想，来调用这些方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">31</span>]: regex = re.compile(<span class="string">r'[1-9]\d&#123;5&#125;'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">32</span>]: regex.sub(repl=<span class="string">":邮编"</span>,string=<span class="string">"北京海淀100036 郑州高新450001"</span>)</span><br><span class="line">Out[<span class="number">32</span>]: <span class="string">'北京海淀:邮编 郑州高新:邮编'</span></span><br></pre></td></tr></table></figure><p><strong>优点：</strong>当我们需要多次使用同一个正则表达式规则时，特别方便，可以重复使用<code>pattern</code>这个对象来调用不同的方法达到目的。可以提高匹配速度。</p><p><code>regex = re.compile(pattern, flags=0)</code>：</p><p>该函数根据包含的正则表达式的字符串创建<strong>模式对象</strong>，将正则表达式的字符串形式编译成正则表达式对象。</p><p><strong>注意1：</strong>没有经过编译的<strong>正则表达式字符串</strong>仅仅是一种表达形式，只有经过编译的正则表达式字符串才能形成一个<strong>正则表达式对象</strong>，它表示了一组符合规则的字符串。</p><p><strong>注意2：</strong>经过编译后得到的正则表达式对象，可以调用的方法和<code>re</code>调用的函数一致，请注意，由于正则表达式已经被编译为模式对象，因此，通过模式对象<code>regex</code>调用相应方法的时候，方法的参数<code>pattern</code>不再需要提供。</p><h2 id="re库的match对象"><a href="#re库的match对象" class="headerlink" title="re库的match对象"></a>re库的match对象</h2><p>我们在前面的例子中，曾经用到一个对象<code>match</code>，这个对象的类型是<code>SRE_Match</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">14</span>]: match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'100036 北京海淀'</span>)</span><br><span class="line">In [<span class="number">15</span>]: match.group(<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">15</span>]: <span class="string">'100036'</span></span><br><span class="line">    ... ... ... ...</span><br><span class="line">In [<span class="number">33</span>]: type(match)</span><br><span class="line">Out[<span class="number">33</span>]: _sre.SRE_Match</span><br></pre></td></tr></table></figure><p>Match对象的常用属性有4个：</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td><code>.re</code></td><td>匹配时使用的pattern对象（正则表达式）</td></tr><tr><td><code>.string</code></td><td>待匹配的文本</td></tr><tr><td><code>.pos</code></td><td>搜索文本的开始位置</td></tr><tr><td><code>.endpos</code></td><td>搜索文本的结束位置</td></tr></tbody></table><p>我们在<code>ipython</code>中使用一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">34</span>]: match.re</span><br><span class="line">Out[<span class="number">34</span>]: re.compile(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, re.UNICODE)</span><br><span class="line"></span><br><span class="line">In [<span class="number">35</span>]: match.string</span><br><span class="line">Out[<span class="number">35</span>]: <span class="string">'100036 北京海淀'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">36</span>]: match.pos</span><br><span class="line">Out[<span class="number">36</span>]: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">37</span>]: match.endpos</span><br><span class="line">Out[<span class="number">37</span>]: <span class="number">11</span></span><br></pre></td></tr></table></figure><p>Match对象常用的方法：</p><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td><code>.group(0)</code></td><td>获得匹配后的字符串</td></tr><tr><td><code>.start()</code></td><td>匹配字符串在原始字符串的开始位置</td></tr><tr><td><code>.end()</code></td><td>匹配字符串在原始字符串的结束位置</td></tr><tr><td><code>.span()</code></td><td>返回<code>(.start(),end())</code></td></tr></tbody></table><p>我们在<code>ipython</code>中使用一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配的结构存储在这里</span></span><br><span class="line">In [<span class="number">38</span>]: match.group(<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">38</span>]: <span class="string">'100036'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">39</span>]: match.start()</span><br><span class="line">Out[<span class="number">39</span>]: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">40</span>]: match.end()</span><br><span class="line">Out[<span class="number">40</span>]: <span class="number">6</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">41</span>]: match.span()</span><br><span class="line">Out[<span class="number">41</span>]: (<span class="number">0</span>, <span class="number">6</span>)</span><br></pre></td></tr></table></figure><h2 id="贪婪匹配和最小匹配"><a href="#贪婪匹配和最小匹配" class="headerlink" title="贪婪匹配和最小匹配"></a>贪婪匹配和最小匹配</h2><p>首先看一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">49</span>]: match = re.search(<span class="string">r'one.*n'</span>,<span class="string">'oneanbncndnen'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">50</span>]: match.group(<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">50</span>]: <span class="string">'oneanbncndnen'</span></span><br></pre></td></tr></table></figure><p><code>g.*n</code>这个正则表达式可以匹配多个字符串，例如，gitopen、gin、等，但是，结果却返回最长的那个匹配字符串<code>gitaabbccddopen</code>。</p><p><strong>re库默认采用贪婪匹配，即输出匹配最长的子字符串。</strong></p><p>但是有的时候，我们需要输出最短的那个子字符串，这时候，需要使用正则表达式的最小匹配：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">51</span>]: match = re.search(<span class="string">r'one.*?n'</span>,<span class="string">'oneanbncndnen'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">52</span>]: match.group(<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">52</span>]: <span class="string">'onean'</span></span><br></pre></td></tr></table></figure><p>re库的最小匹配，需要对以下几个操作符进行扩展：</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td><code>*?</code></td><td>前一个字符0次或者无限次扩展，最小匹配</td></tr><tr><td><code>+?</code></td><td>前一个字符1次或者无限次扩展，最小匹配</td></tr><tr><td><code>??</code></td><td>前一个字符0次或者1次扩展，最小匹配</td></tr><tr><td><code>{m,n}?</code></td><td>扩展前一个字符m到n次，含n次，最小匹配</td></tr></tbody></table><p>如果<strong>re库的操作符匹配不同长度的字符串的话，都可以在操作符后面加上<code>?</code>进行最小匹配。</strong></p><h1 id="实战——定向爬取京东100页商品信息"><a href="#实战——定向爬取京东100页商品信息" class="headerlink" title="实战——定向爬取京东100页商品信息"></a>实战——定向爬取京东100页商品信息</h1><p><strong>问题0：</strong>按照销量进行爬取，这样可以排除页面中广告</p><p> 得到的连接如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://search.jd.com/Search?keyword=书包&amp;enc=utf-8&amp;qrst=1&amp;rt=1&amp;stop=1&amp;vt=2&amp;psort=3&amp;stock=1&amp;page=1&amp;s=1&amp;click=0</span><br></pre></td></tr></table></figure><p>从浏览器开发者工具中可以得到这些GET请求的参数，如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"keyword"</span>: <span class="string">"书包"</span>,</span><br><span class="line">    <span class="attr">"enc"</span>: utf<span class="number">-8</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>qrst<span class="string">": 1"</span>,</span><br><span class="line">    <span class="attr">"rt"</span>: <span class="number">1</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>stop<span class="string">": 1"</span>,</span><br><span class="line">    <span class="attr">"vt"</span>: <span class="number">2</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>psort<span class="string">": 3"</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>page<span class="string">": 1"</span>,</span><br><span class="line">    <span class="attr">"s"</span>: <span class="number">1</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>click: <span class="number">0</span><span class="string">",</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>这样，我们得到了用<code>requests</code>发送GET说必须的连接和参数，连接为<code>https:// search.jd.com/Search</code>，参数为上面的这个字典。其中，需要我们控制的几个参数为：<code>keyword</code>、<code>s</code>、<code>page</code></p><p><strong>问题1：</strong>请求链接的构造，page竟然是奇数？！</p><p>在京东搜索商品以后，我们会来搜索页面，这时观察页面的url不难发现一个规律，拼接页面url的时候的page参数，需要传入的数字为奇数。经过计算发现，总共100页搜索结果，如果我们想获取全部信息，就必须从把page的值赋值为200以内的奇数，即<code>1,3,5,7,9,...,199</code>。</p><p>如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第1页 page=1</span><br><span class="line">https://search.jd.com/Search?keyword=书包&amp;enc=utf-8&amp;qrst=1&amp;rt=1&amp;stop=1&amp;vt=2&amp;psort=3&amp;stock=1&amp;page=1&amp;s=1&amp;click=0</span><br><span class="line"></span><br><span class="line">第2页 page=3</span><br><span class="line">https://search.jd.com/Search?keyword=书包&amp;enc=utf-8&amp;qrst=1&amp;rt=1&amp;stop=1&amp;vt=2&amp;psort=3&amp;stock=1&amp;page=3&amp;s=61&amp;click=0</span><br></pre></td></tr></table></figure><p><strong>问题2：</strong>编写页面请求，得到的页面中只有30个商品信息？！</p><p>当我们在编写程序的时候，用<code>requests</code>库请求回来的html文本内容中，属性为<code>class=&#39;gl-item&#39;</code>的<code>li</code>标签只有30个。什么？刚才不是数过了吗？一共60个呀。为什么是30个呢？</p><p>打开浏览器的开发者工具栏，将页面从上往下慢慢拖动，并且观察<code>Network</code>中的网络请求，突然，有一个神秘的请求出现了，它的连接为<code>https://search.jd.com/s_new.php?keyword=%E4%B9%A6%E5%8C%85&amp;enc=utf-8&amp;qrst=1&amp;rt=1&amp;stop=1&amp;vt=2&amp;psort=3&amp;stock=1&amp;page=2&amp;s=31&amp;scrolling=y&amp;log_id=1529934788.49163&amp;tpl=3_M&amp;show_items=4208541,12596174640,2804865,877258,4593360,3598223,5308846,11031192090,4028698,5471930,6511832,765798,3796277,6530586,311349,1015774,10552271564,6044018,5025051,10552555536,28941008721,1106925,10285134151,4120808,10492711739,4044524,25595327933,6401561,5181576,2437187963</code>，这是什么东西？</p><p>然后查看这个链接的<code>Response</code>，搜索<code>gl-item</code>，我们发现，竟然也有30个！那么。。。刚才的30加上现在的30，不就是60个商品？仔细观察这个链接，我们发现了一个某东做的小手脚！快看，连接中的<code>page=2</code>！So,~~~~,似乎明白了什么。</p><p>原来，我们在问题1中得到的搜索页面一共有100页，实际上有200页，奇数页就是我们直接看到的搜索结果页面，一共请求到30个商品信息，而偶数页，则是当用户拖动滚动条的时候，看完了30个，就会自动后台请求另外30个商品，这后来请求的30个，就是偶数页的信息，并且动态的添加到页面上去。</p><p>请求的基本链接为<code>https://search.jd.com/s_new.php</code>，请求的基本参数我们提取为字典，其中需要控制的参数为：<code>keyword</code>、<code>page</code>、<code>s</code>、<code>log_id</code>、<code>show_items</code>。</p><p><code>log_id</code>和<code>show_items</code>必须从奇数页请求结果中提取，<code>show_items</code>是用一个列表转化成的字符串，其中数字是，奇数页中每个带有<code>class=&#39;gl-item&#39;</code>属性的div，它的<code>data-pid</code>属性的值。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        'keyword': '书包',</span><br><span class="line">        'enc': 'utf-8',</span><br><span class="line">        'qrst': '1',</span><br><span class="line">        'rt': '1',</span><br><span class="line">        'stop': '1',</span><br><span class="line">        'vt': '2',</span><br><span class="line">        'psort': '3',</span><br><span class="line">        'stock': '1',</span><br><span class="line">        'page': '2',</span><br><span class="line">        's': '31',</span><br><span class="line">        'scrolling': 'y',</span><br><span class="line">        'log_id': '1529759067.93124',</span><br><span class="line">        'tpl': '3_M',</span><br><span class="line">        'show_items': '2241345,4153317,10285134151,10503046182,13180766655,6117013,2330770,5168648,10285341597,26194798282,5471930,2804865,28561551177,1585517611,1025981997,6174172,11693982705,10540540570,5386778,11096315457,20682615258,23533395828,5248730,27306328004,3929123,5218868,12422531859,4208541,5634094,2330752'</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>问题3：</strong>讲了这么多我们该如何获取到60个商品信息呢？</p><p>循环遍历，然后判断页码的奇偶性，根据奇偶性发送不同连接不同请求参数的请求，得到不同的结果进行内容解析。</p><p>整个程序的源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url, params=None)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Referer'</span>: <span class="string">'https://search.jd.com'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:58.0) Gecko/20100101 Firefox/58.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url=url, timeout=<span class="number">30</span>, headers=headers, params=params)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        print(<span class="string">"### 正在请求的链接为：&#123;&#125;"</span>.format(r.url))</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(str(e))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_even_params</span><span class="params">(html, even_params)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    li_list = soup.find_all(class_=<span class="string">"gl-item"</span>)</span><br><span class="line">    show_items = []</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">        show_items.append(li.attrs[<span class="string">'data-pid'</span>])</span><br><span class="line"></span><br><span class="line">    log_id = re.compile(<span class="string">r"log_id:'\d+.\d+'"</span>).search(html).group(<span class="number">0</span>).replace(<span class="string">'log_id:'</span>, <span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">    even_params[<span class="string">'show_items'</span>] = <span class="string">","</span>.join(show_items)</span><br><span class="line">    even_params[<span class="string">'log_id'</span>] = log_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    li_list = soup.find_all(class_=<span class="string">'gl-item'</span>)</span><br><span class="line"></span><br><span class="line">    products = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> gl_item <span class="keyword">in</span> li_list:</span><br><span class="line">        product = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        product[<span class="string">'slogan'</span>] = gl_item.find(class_=<span class="string">'p-img'</span>).a.attrs[<span class="string">'title'</span>]</span><br><span class="line">        product[<span class="string">'url'</span>] = <span class="string">"https:"</span> + gl_item.find(class_=<span class="string">'p-img'</span>).a.attrs[<span class="string">'href'</span>]</span><br><span class="line">        product[<span class="string">'price'</span>] = gl_item.find(class_=<span class="string">'p-price'</span>).strong.i.string</span><br><span class="line">        pin_gou = gl_item.find(class_=<span class="string">'price-pingou'</span>)</span><br><span class="line">        <span class="keyword">if</span> pin_gou <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            product[<span class="string">'pin_price'</span>] = <span class="string">""</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            product[<span class="string">'pin_price'</span>] = re.compile(<span class="string">r'\d+.\d+'</span>).search(str(pin_gou)).group(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        product[<span class="string">'name'</span>] = gl_item.find(class_=<span class="string">'p-name'</span>).a.em.get_text()</span><br><span class="line">        product[<span class="string">'comment'</span>] = gl_item.find(class_=<span class="string">'p-commit'</span>).strong.a.string</span><br><span class="line"></span><br><span class="line">        a_shop = gl_item.find(class_=<span class="string">'p-shop'</span>).find(<span class="string">'a'</span>)</span><br><span class="line">        <span class="keyword">if</span> a_shop <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            product[<span class="string">'shop_name'</span>] = <span class="string">""</span></span><br><span class="line">            product[<span class="string">'shop_url'</span>] = <span class="string">""</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            product[<span class="string">'shop_name'</span>] = a_shop.attrs[<span class="string">'title'</span>]</span><br><span class="line">            product[<span class="string">'shop_url'</span>] = <span class="string">"https:"</span> + a_shop.attrs[<span class="string">'href'</span>]</span><br><span class="line">        products.append(product)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> products</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 搜索关键词</span></span><br><span class="line">    goods = <span class="string">'书包'</span></span><br><span class="line">    <span class="comment"># 爬取深度，最大100页</span></span><br><span class="line">    depth = <span class="number">10</span></span><br><span class="line">    <span class="comment"># 结果列表</span></span><br><span class="line">    products = []</span><br><span class="line">    <span class="comment"># 每页商品的起始数字</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    odd_params = &#123;</span><br><span class="line">        <span class="string">'keyword'</span>: goods,</span><br><span class="line">        <span class="string">'enc'</span>: <span class="string">'utf-8'</span>,</span><br><span class="line">        <span class="string">'wq'</span>: goods,</span><br><span class="line">        <span class="string">'page'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'psort'</span>: <span class="string">'3'</span>,</span><br><span class="line">        <span class="string">'s'</span>: <span class="string">'1'</span></span><br><span class="line">    &#125;</span><br><span class="line">    odd_url = <span class="string">'https://search.jd.com/Search'</span></span><br><span class="line"></span><br><span class="line">    even_params = &#123;</span><br><span class="line">        <span class="string">'keyword'</span>: goods,</span><br><span class="line">        <span class="string">'enc'</span>: <span class="string">'utf-8'</span>,</span><br><span class="line">        <span class="string">'qrst'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'rt'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'stop'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'vt'</span>: <span class="string">'2'</span>,</span><br><span class="line">        <span class="string">'psort'</span>: <span class="string">'3'</span>,</span><br><span class="line">        <span class="string">'stock'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'page'</span>: <span class="string">'2'</span>,</span><br><span class="line">        <span class="string">'s'</span>: <span class="string">'31'</span>,</span><br><span class="line">        <span class="string">'scrolling'</span>: <span class="string">'y'</span>,</span><br><span class="line">        <span class="string">'log_id'</span>: <span class="string">'1529759067.93124'</span>,</span><br><span class="line">        <span class="string">'tpl'</span>: <span class="string">'3_M'</span>,</span><br><span class="line">        <span class="string">'show_items'</span>: <span class="string">'2241345,4153317,10285134151,10503046182,13180766655,6117013,2330770,5168648,10285341597,26194798282,5471930,2804865,28561551177,1585517611,1025981997,6174172,11693982705,10540540570,5386778,11096315457,20682615258,23533395828,5248730,27306328004,3929123,5218868,12422531859,4208541,5634094,2330752'</span></span><br><span class="line">    &#125;</span><br><span class="line">    even_url = <span class="string">'https://search.jd.com/s_new.php'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">2</span> * depth + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 奇数</span></span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">            page_id = num</span><br><span class="line">            odd_params[<span class="string">'page'</span>] = page_id</span><br><span class="line">            odd_params[<span class="string">'s'</span>] = str(s)</span><br><span class="line">            html = get_html(url=odd_url, params=odd_params)</span><br><span class="line">            set_even_params(html, even_params)</span><br><span class="line">            products.append(parse_page(html))</span><br><span class="line">        <span class="comment"># 偶数</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            page_id = num</span><br><span class="line">            even_params[<span class="string">'page'</span>] = page_id</span><br><span class="line">            even_params[<span class="string">'s'</span>] = str(s)</span><br><span class="line">            html = get_html(url=even_url, params=even_params)</span><br><span class="line">            products.append(parse_page(html))</span><br><span class="line">        <span class="comment"># 每次奇偶数页面迭代，都是30个商品</span></span><br><span class="line">        s += <span class="number">30</span></span><br><span class="line">    <span class="comment"># 将结果保存到文件中，以json格式</span></span><br><span class="line">    localtime = <span class="string">"-"</span>.join(time.asctime(time.localtime(time.time())).split(<span class="string">' '</span>))</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"jd_"</span> + localtime + <span class="string">'.json'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> filename:</span><br><span class="line">        filename.write(json.dumps(products, ensure_ascii=<span class="keyword">False</span>))</span><br><span class="line">    print(<span class="string">"### 爬取完毕"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程所有源码下载链接：&lt;a href=&quot;https://share.weiyun.com/5xmFeUO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://share.weiyun.com/5xmFeUO&lt;/a&gt; 密
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://blog.sunjiajia.com/tags/Crawler/"/>
    
      <category term="Spider" scheme="https://blog.sunjiajia.com/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>《手把手带你学爬虫──初级篇》第3课 Beautiful Soup 4 库讲解</title>
    <link href="https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson03-beautifulsoup4/"/>
    <id>https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson03-beautifulsoup4/</id>
    <published>2018-09-14T04:12:03.000Z</published>
    <updated>2018-09-19T00:51:05.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程所有源码下载链接：<a href="https://share.weiyun.com/5xmFeUO" target="_blank" rel="noopener">https://share.weiyun.com/5xmFeUO</a> 密码：fzwh6g</p></blockquote><h1 id="Beautiful-Soup-4-库讲解"><a href="#Beautiful-Soup-4-库讲解" class="headerlink" title="Beautiful Soup 4 库讲解"></a>Beautiful Soup 4 库讲解</h1><h1 id="简介与安装"><a href="#简介与安装" class="headerlink" title="简介与安装"></a>简介与安装</h1><p>Beautiful Soup 4 库它是一个从HTML或者XML文件中提取数据的Python库。使用它，将极大地简化从网页源码中提取数据的步骤。</p><blockquote><p> 一个HTML或者XML文档就是一个<code>标签树</code>，使用bs4后，一个标签树就是一个BeautifulSoup类。</p></blockquote><p>Beautiful Soup 4 库的安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure><h1 id="Beautiful-Soup-4-库基本使用方法"><a href="#Beautiful-Soup-4-库基本使用方法" class="headerlink" title="Beautiful Soup 4 库基本使用方法"></a>Beautiful Soup 4 库基本使用方法</h1><h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><p>我们在<code>ipython</code>环境中体验一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">In [1]: import requests</span><br><span class="line">In [2]: r = requests.get(<span class="string">"https://raw.githubusercontent.com/opengit/CrawlerLessons/master/codes/lesson03/bs4_demo01.html"</span>)</span><br><span class="line">In [3]: r.text</span><br><span class="line">Out[3]: <span class="string">'&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;\n    &lt;title&gt;VPS推荐&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;p class="title"&gt;\n    &lt;b&gt;亲测速度很快&lt;/b&gt;\n&lt;/p&gt;\n&lt;p class="links"&gt;\n    下面是两个推荐的VPS服务器链接：\n    &lt;a href="https://m.do.co/c/fd128f8ba9e8" class="vps1" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和\n    &lt;a href="https://www.vultr.com/?ref=7147564" class="vps2" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。\n&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;'</span></span><br><span class="line">In [4]: demo = r.text</span><br><span class="line">In [5]: from bs4 import BeautifulSoup</span><br><span class="line">In [6]: soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)</span><br><span class="line">In [7]: <span class="built_in">print</span>(soup.prettify())</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;meta content=<span class="string">"text/html; charset=utf-8"</span> http-equiv=<span class="string">"Content-Type"</span>/&gt;</span><br><span class="line">  &lt;title&gt;</span><br><span class="line">   VPS推荐</span><br><span class="line">  &lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line">  &lt;p class=<span class="string">"title"</span>&gt;</span><br><span class="line">   &lt;b&gt;</span><br><span class="line">    亲测速度很快</span><br><span class="line">   &lt;/b&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p class=<span class="string">"links"</span>&gt;</span><br><span class="line">   下面是两个推荐的VPS服务器链接：</span><br><span class="line">   &lt;a class=<span class="string">"vps1"</span> href=<span class="string">"https://m.do.co/c/fd128f8ba9e8"</span> id=<span class="string">"link1"</span>&gt;</span><br><span class="line">    Digital Ocean优惠链接</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   和</span><br><span class="line">   &lt;a class=<span class="string">"vps2"</span> href=<span class="string">"https://www.vultr.com/?ref=7147564"</span> id=<span class="string">"link2"</span>&gt;</span><br><span class="line">    Vultr优惠10美元链接</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   。</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"> &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>总结一下Beautiful Soup 4的最简单用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入Beautiful Soup 4</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 第1个参数是html文档内容，第2个参数是解析器</span></span><br><span class="line">soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)</span><br></pre></td></tr></table></figure><p>这里的<code>html.parser</code>是html解析器，有关解析器的用法，我们在后面讲解。</p><h2 id="Beautiful-Soup-4-库的元素"><a href="#Beautiful-Soup-4-库的元素" class="headerlink" title="Beautiful Soup 4 库的元素"></a>Beautiful Soup 4 库的元素</h2><h3 id="Beautiful-Soup类的基本元素"><a href="#Beautiful-Soup类的基本元素" class="headerlink" title="Beautiful Soup类的基本元素"></a>Beautiful Soup类的基本元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>亲测速度很快<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;p&gt;...&lt;/p&gt;</code> 叫做标签Tag</li><li><code>p</code>叫做标签的Name</li><li><code>class=&quot;title&quot;</code>叫做属性域</li><li><code>class</code>叫做属性的Name</li><li><code>title</code>叫做属性的值</li></ul><table><thead><tr><th>基本元素</th><th>含义</th></tr></thead><tbody><tr><td>Tag</td><td>标签，最基本的单元，用<code>&lt;&gt;</code>和<code>&lt;/&gt;</code>标明开头和结尾</td></tr><tr><td>Name</td><td>标签名字，<code>&lt;a&gt;&lt;/a&gt;</code>的名字是<code>a</code>，用法：<code>&lt;tag&gt;.name</code></td></tr><tr><td>Attributes</td><td>标签属性，字典形式，用法：<code>&lt;tag&gt;.attrs</code></td></tr><tr><td>NavigableString</td><td>标签内非属性字符串，<code>&lt;&gt;...&lt;/&gt;</code>中的字符串，用法：<code>&lt;tag&gt;.string</code></td></tr><tr><td>Comment</td><td>标签内字符串的注释部分</td></tr></tbody></table><p>在<code>ipython</code>环境下，使用这些类的基本元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 Beautiful Soup 4</span></span><br><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 导入 requests</span></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># get请求网页</span></span><br><span class="line">In [<span class="number">3</span>]: r = requests.get(<span class="string">"https://raw.githubusercontent.com/opengit/CrawlerLessons/master/codes/lesson03/bs4_demo01.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># html文本内容</span></span><br><span class="line">In [<span class="number">4</span>]: demo = r.text</span><br><span class="line"><span class="comment"># 拿到BeautifulSoup的对象</span></span><br><span class="line">In [<span class="number">5</span>]: soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)</span><br><span class="line"><span class="comment"># 获取a标签的名称</span></span><br><span class="line">In [<span class="number">6</span>]: soup.a.name</span><br><span class="line">Out[<span class="number">6</span>]: <span class="string">'a'</span></span><br><span class="line"><span class="comment"># 获取a标签的父标签的名字</span></span><br><span class="line">In [<span class="number">7</span>]: soup.a.parent.name</span><br><span class="line">Out[<span class="number">7</span>]: <span class="string">'p'</span></span><br><span class="line"><span class="comment"># 获取a标签的父标签的父标签的名字</span></span><br><span class="line">In [<span class="number">8</span>]: soup.a.parent.parent.name</span><br><span class="line">Out[<span class="number">8</span>]: <span class="string">'body'</span></span><br><span class="line"><span class="comment"># soup.a的类型是Tag</span></span><br><span class="line">In [<span class="number">9</span>]: tag = soup.a</span><br><span class="line"><span class="comment"># 类型为Tag的a标签的属性</span></span><br><span class="line">In [<span class="number">10</span>]: tag.attrs</span><br><span class="line">Out[<span class="number">10</span>]: &#123;<span class="string">'href'</span>: <span class="string">'https://m.do.co/c/fd128f8ba9e8'</span>, <span class="string">'class'</span>: [<span class="string">'vps1'</span>], <span class="string">'id'</span>: <span class="string">'link1'</span>&#125;</span><br><span class="line"><span class="comment"># 取标签的属性值</span></span><br><span class="line">In [<span class="number">11</span>]: tag.attrs[<span class="string">'class'</span>]</span><br><span class="line">Out[<span class="number">11</span>]: [<span class="string">'vps1'</span>]</span><br><span class="line">In [<span class="number">12</span>]: tag.attrs[<span class="string">'href'</span>]</span><br><span class="line">Out[<span class="number">12</span>]: <span class="string">'https://m.do.co/c/fd128f8ba9e8'</span></span><br><span class="line"><span class="comment"># Tag的属性返回的是一个字典类型</span></span><br><span class="line">In [<span class="number">13</span>]: type(tag.attrs)</span><br><span class="line">Out[<span class="number">13</span>]: dict</span><br><span class="line"><span class="comment"># soup.a 是一个Tag类型</span></span><br><span class="line">In [<span class="number">14</span>]: type(tag)</span><br><span class="line">Out[<span class="number">14</span>]: bs4.element.Tag</span><br><span class="line">In [<span class="number">15</span>]: tag</span><br><span class="line">Out[15]: &lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;</span><br><span class="line"><span class="comment"># 标签中的字符串</span></span><br><span class="line">In [<span class="number">16</span>]: tag.string</span><br><span class="line">Out[<span class="number">16</span>]: <span class="string">'Digital Ocean优惠链接'</span></span><br><span class="line">In [<span class="number">17</span>]: soup.p</span><br><span class="line">Out[<span class="number">17</span>]:</span><br><span class="line">&lt;p class="title"&gt;</span><br><span class="line">&lt;b&gt;亲测速度很快&lt;/b&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">In [<span class="number">18</span>]: soup.p.string</span><br><span class="line">In [<span class="number">19</span>]: soup.p.b.string</span><br><span class="line">Out[<span class="number">19</span>]: <span class="string">'亲测速度很快'</span></span><br><span class="line">In [<span class="number">20</span>]: type(soup.p.b.string)</span><br><span class="line"><span class="comment"># 标签中的字符串是NavigableString类型</span></span><br><span class="line">Out[<span class="number">20</span>]: bs4.element.NavigableString</span><br><span class="line"></span><br><span class="line"><span class="comment"># Comment 示例</span></span><br><span class="line">In [<span class="number">25</span>]: newsoup = BeautifulSoup(<span class="string">"&lt;b&gt;&lt;!--我是注释--&gt;&lt;/b&gt;&lt;p&gt;我是注释&lt;/p&gt;"</span>,<span class="string">"html.parser"</span>)</span><br><span class="line">In [<span class="number">26</span>]: newsoup.b.string</span><br><span class="line">Out[<span class="number">26</span>]: <span class="string">'我是注释'</span></span><br><span class="line">In [<span class="number">27</span>]: type(newsoup.b.string)</span><br><span class="line">Out[<span class="number">27</span>]: bs4.element.Comment</span><br><span class="line">In [<span class="number">29</span>]: newsoup.p.string</span><br><span class="line">Out[<span class="number">29</span>]: <span class="string">'我是注释'</span></span><br><span class="line">In [<span class="number">30</span>]: type(newsoup.p.string)</span><br><span class="line">Out[<span class="number">30</span>]: bs4.element.NavigableString</span><br></pre></td></tr></table></figure><h2 id="Beautiful-Soup-4-库的解析器"><a href="#Beautiful-Soup-4-库的解析器" class="headerlink" title="Beautiful Soup 4 库的解析器"></a>Beautiful Soup 4 库的解析器</h2><table><thead><tr><th>解析器</th><th>使用方法</th><th>优势</th><th>劣势</th><th>条件</th></tr></thead><tbody><tr><td>Python标准库</td><td><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td><td>Python的内置标准库执行速度适中文档容错能力强</td><td>Python 2.7.3 or 3.2.2)前的版本中文档容错能力差</td><td>直接使用</td></tr><tr><td>lxml HTML 解析器</td><td><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td><td>速度快文档容错能力强</td><td>需要安装C语言库</td><td><code>pip install lxml</code></td></tr><tr><td>lxml XML 解析器</td><td><code>BeautifulSoup(markup, [&quot;lxml&quot;, &quot;xml&quot;])</code>，<code>BeautifulSoup(markup, &quot;xml&quot;)</code></td><td>速度快唯一支持XML的解析器</td><td>需要安装C语言库</td><td><code>pip install lxml</code></td></tr><tr><td>html5lib</td><td><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td><td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td><td>速度慢不依赖外部扩展</td><td><code>pip install html5lib</code></td></tr></tbody></table><h2 id="Beautiful-Soup-4-库对HTML内容进行遍历"><a href="#Beautiful-Soup-4-库对HTML内容进行遍历" class="headerlink" title="Beautiful Soup 4 库对HTML内容进行遍历"></a>Beautiful Soup 4 库对HTML内容进行遍历</h2><h3 id="HTML基本格式"><a href="#HTML基本格式" class="headerlink" title="HTML基本格式"></a>HTML基本格式</h3><p>事实上，HTML的基本格式是一种<strong>树形结构/标签树</strong>。上面的例子中，使用的html的结构如图：</p><p><img src="/img/crawler/lessons/lesson03_bs4_01.png" alt=""></p><h3 id="下行遍历"><a href="#下行遍历" class="headerlink" title="下行遍历"></a>下行遍历</h3><p>所谓下行遍历，就是从父节点向子节点进行遍历的方法。Beautiful Soup 4中有这个属性可以用在下行遍历中：</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>.contents</td><td><strong>子节点</strong>的列表，是<strong>列表类型</strong>，将<code>&lt;tag&gt;</code>的所有子节点存入列表</td></tr><tr><td>.children</td><td><strong>迭代类型</strong>，包含了所有<strong>子节点</strong>，可用于遍历循环子节点</td></tr><tr><td>.descendants</td><td><strong>迭代类型</strong>，包含了所有<strong>子孙节点</strong>，用于遍历循环</td></tr></tbody></table><p>下面在<code>ipython</code>中测试一下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">33</span>]: r = requests.get(<span class="string">"https://raw.githubusercontent.com/opengit/CrawlerLessons/master/codes/lesson03/bs4_demo01.html"</span>)</span><br><span class="line">In [<span class="number">34</span>]: demo = r.text</span><br><span class="line">In [<span class="number">35</span>]: soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)</span><br><span class="line">In [<span class="number">36</span>]: soup.head</span><br><span class="line">Out[36]: &lt;head&gt;&lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type"/&gt;&lt;title&gt;VPS推荐&lt;/title&gt;&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># head标签的子节点列表</span></span><br><span class="line">In [<span class="number">37</span>]: soup.head.contents</span><br><span class="line">Out[<span class="number">37</span>]:</span><br><span class="line">[&lt;meta content=<span class="string">"text/html; charset=utf-8"</span> http-equiv=<span class="string">"Content-Type"</span>/&gt;,</span><br><span class="line"> &lt;title&gt;VPS推荐&lt;/title&gt;]</span><br><span class="line"><span class="comment"># body标签的子节点列表</span></span><br><span class="line">In [<span class="number">38</span>]: body = soup.body.contents</span><br><span class="line">In [<span class="number">39</span>]: body</span><br><span class="line">Out[<span class="number">39</span>]:</span><br><span class="line">[&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;,</span><br><span class="line"> &lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># body标签的子节点列表的长度</span></span><br><span class="line">In [<span class="number">40</span>]: len(body)</span><br><span class="line">Out[<span class="number">40</span>]: <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># body的所有子孙节点的迭代类型generator</span></span><br><span class="line">In [<span class="number">41</span>]: bodys = soup.body.descendants</span><br><span class="line">In [<span class="number">42</span>]: bodys</span><br><span class="line">Out[<span class="number">42</span>]: &lt;generator object descendants at <span class="number">0x104e2c0a0</span>&gt;</span><br><span class="line"><span class="comment"># 遍历子孙节点</span></span><br><span class="line">In [<span class="number">43</span>]: <span class="keyword">for</span> item <span class="keyword">in</span> bodys:</span><br><span class="line">    ...:     print(item)</span><br><span class="line">    ...:</span><br><span class="line">&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;</span><br><span class="line">&lt;b&gt;亲测速度很快&lt;/b&gt;</span><br><span class="line">亲测速度很快</span><br><span class="line">&lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;</span><br><span class="line">下面是两个推荐的VPS服务器链接：</span><br><span class="line">&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;</span><br><span class="line">Digital Ocean优惠链接</span><br><span class="line"> 和</span><br><span class="line">&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;</span><br><span class="line">Vultr优惠<span class="number">10</span>美元链接</span><br><span class="line">。</span><br><span class="line"><span class="comment"># body标签的子节点迭代类型</span></span><br><span class="line">In [<span class="number">44</span>]: bodyc = soup.body.children</span><br><span class="line"><span class="comment"># 遍历</span></span><br><span class="line">In [<span class="number">45</span>]: <span class="keyword">for</span> item <span class="keyword">in</span> bodyc:</span><br><span class="line">    ...:     print(item)</span><br><span class="line">    ...:</span><br><span class="line">&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;</span><br><span class="line">&lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="上行遍历"><a href="#上行遍历" class="headerlink" title="上行遍历"></a>上行遍历</h3><p>标签树从下往上进行遍历。上行遍历的几个属性：</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>.parent</td><td><code>&lt;tag&gt;</code>的父亲标签</td></tr><tr><td>.parents</td><td><code>&lt;tag&gt;</code>的先辈们标签的迭代类型，用于遍历循环</td></tr></tbody></table><p>接着上面的例子，下面在<code>ipython</code>中进行测试：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">46</span>]: soup.title.parent</span><br><span class="line">Out[46]: &lt;head&gt;&lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type"/&gt;&lt;title&gt;VPS推荐&lt;/title&gt;&lt;/head&gt;</span><br><span class="line"><span class="comment"># 由于html标签是最外层标签，因此html标签的父标签是它自己</span></span><br><span class="line">In [<span class="number">47</span>]: soup.html.parent</span><br><span class="line">Out[<span class="number">47</span>]:</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;&lt;head&gt;&lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type"/&gt;&lt;title&gt;VPS推荐&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;&lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"><span class="comment"># soup的父标签为空</span></span><br><span class="line">In [<span class="number">48</span>]: soup.parent</span><br><span class="line"><span class="comment"># 遍历</span></span><br><span class="line">In [<span class="number">49</span>]: <span class="keyword">for</span> item <span class="keyword">in</span> soup.html.parents:</span><br><span class="line">    ...:     print(item)</span><br><span class="line">    ...:</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;&lt;head&gt;&lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type"/&gt;&lt;title&gt;VPS推荐&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;&lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="平行遍历"><a href="#平行遍历" class="headerlink" title="平行遍历"></a>平行遍历</h3><p><strong>前提：参与平行遍历的节点必须拥有同一个父亲节点</strong></p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>.next_sibling</td><td>返回按照HTML文本顺序的<strong>下一个</strong>平行节点标签</td></tr><tr><td>.previous_sibling</td><td>返回按照HTML文本顺序的<strong>上一个</strong>平行节点标签</td></tr><tr><td>.next_siblings</td><td>迭代类型，返回按照HTML文本顺序的<strong>后续</strong>所有平行节点标签</td></tr><tr><td>.previous_siblings</td><td>迭代类型，返回按照HTML文本顺序的<strong>前续</strong>所有平行节点标签</td></tr></tbody></table><p>在<code>ipython</code>中使用这些属性：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">50</span>]: soup.body.contents</span><br><span class="line">Out[<span class="number">50</span>]:</span><br><span class="line">[&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;,</span><br><span class="line"> &lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;]</span><br><span class="line"></span><br><span class="line">In [<span class="number">51</span>]: soup.body.contents[<span class="number">0</span>].next_sibling</span><br><span class="line">Out[51]: &lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">52</span>]: soup.body.contents[<span class="number">1</span>].next_sibling</span><br><span class="line"></span><br><span class="line">In [<span class="number">53</span>]: soup.body.contents[<span class="number">1</span>].previous_sibling</span><br><span class="line">Out[53]: &lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">54</span>]: soup.a.next_sibling</span><br><span class="line">Out[<span class="number">54</span>]: <span class="string">' 和'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">55</span>]: soup.a.next_sibling.next_sibling</span><br><span class="line">Out[55]: &lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">In [<span class="number">56</span>]: soup.a.previousSibling</span><br><span class="line">Out[<span class="number">56</span>]: <span class="string">'下面是两个推荐的VPS服务器链接：'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">57</span>]: soup.a.previous_sibling</span><br><span class="line">Out[<span class="number">57</span>]: <span class="string">'下面是两个推荐的VPS服务器链接：'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">58</span>]: soup.a.previous_sibling.previousSibling</span><br><span class="line"></span><br><span class="line">In [<span class="number">59</span>]: soup.a.next_sibling.previous_sibling</span><br><span class="line">Out[59]: &lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="Beautiful-Soup-4-库对HTML格式化输出"><a href="#Beautiful-Soup-4-库对HTML格式化输出" class="headerlink" title="Beautiful Soup 4 库对HTML格式化输出"></a>Beautiful Soup 4 库对HTML格式化输出</h2><p>也就是让输出的HTML更加好看。使用<code>prettify()</code>方法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">60</span>]: r.text</span><br><span class="line">Out[<span class="number">60</span>]: <span class="string">'&lt;!DOCTYPE html&gt;\n&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&lt;title&gt;VPS推荐&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p class="title"&gt;&lt;b&gt;亲测速度很快&lt;/b&gt;&lt;/p&gt;&lt;p class="links"&gt;下面是两个推荐的VPS服务器链接：&lt;a href="https://m.do.co/c/fd128f8ba9e8" class="vps1" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt; 和&lt;a href="https://www.vultr.com/?ref=7147564" class="vps2" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">61</span>]: soup.prettify()</span><br><span class="line">Out[<span class="number">61</span>]: <span class="string">'&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n  &lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type"/&gt;\n  &lt;title&gt;\n   VPS推荐\n  &lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;p class="title"&gt;\n   &lt;b&gt;\n    亲测速度很快\n   &lt;/b&gt;\n  &lt;/p&gt;\n  &lt;p class="links"&gt;\n   下面是两个推荐的VPS服务器链接：\n   &lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;\n    Digital Ocean优惠链接\n   &lt;/a&gt;\n   和\n   &lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;\n    Vultr优惠10美元链接\n   &lt;/a&gt;\n   。\n  &lt;/p&gt;\n &lt;/body&gt;\n&lt;/html&gt;'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">62</span>]: print(soup.prettify())</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;meta content=<span class="string">"text/html; charset=utf-8"</span> http-equiv=<span class="string">"Content-Type"</span>/&gt;</span><br><span class="line">  &lt;title&gt;</span><br><span class="line">   VPS推荐</span><br><span class="line">  &lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line">  &lt;p class="title"&gt;</span><br><span class="line">   &lt;b&gt;</span><br><span class="line">    亲测速度很快</span><br><span class="line">   &lt;/b&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p class="links"&gt;</span><br><span class="line">   下面是两个推荐的VPS服务器链接：</span><br><span class="line">   &lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;</span><br><span class="line">    Digital Ocean优惠链接</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   和</span><br><span class="line">   &lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;</span><br><span class="line">    Vultr优惠<span class="number">10</span>美元链接</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   。</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"> &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Beautiful-Soup-4-库常用函数"><a href="#Beautiful-Soup-4-库常用函数" class="headerlink" title="Beautiful Soup 4 库常用函数"></a>Beautiful Soup 4 库常用函数</h2><p><code>&lt;tag&gt;.find_all(name, attrs, recursive, string, **kwargs)</code></p><p>返回一个列表类型，存储查找的结果。</p><p><code>name</code>：标签名字检索字符串，可以为列表形式，包含多个检索字符串；</p><p><code>attrs</code>：标签属性值的检索字符串，可标注属性检索；</p><p><code>recursive</code>：是否对子孙节点全部检索，默认值是True；</p><p><code>string</code>：<code>&lt;&gt;...&lt;/&gt;</code>中字符串区域的检索字符串；</p><p><code>**kwargs</code>：；</p><p>在<code>ipython</code>中进行测试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">63</span>]: <span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">    ...:     print(link.get(<span class="string">'href'</span>))</span><br><span class="line">    ...:</span><br><span class="line">https://m.do.co/c/fd128f8ba9e8</span><br><span class="line">https://www.vultr.com/?ref=7147564</span><br><span class="line"></span><br><span class="line">In [<span class="number">64</span>]: soup.find_all([<span class="string">'a'</span>,<span class="string">'b'</span>])</span><br><span class="line">Out[<span class="number">64</span>]:</span><br><span class="line">[&lt;b&gt;亲测速度很快&lt;/b&gt;,</span><br><span class="line"> &lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;,</span><br><span class="line"> &lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;]</span><br><span class="line"></span><br><span class="line">In [<span class="number">65</span>]: <span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(<span class="keyword">True</span>):</span><br><span class="line">    ...:     print(tag.name)</span><br><span class="line">    ...:</span><br><span class="line">html</span><br><span class="line">head</span><br><span class="line">meta</span><br><span class="line">title</span><br><span class="line">body</span><br><span class="line">p</span><br><span class="line">b</span><br><span class="line">p</span><br><span class="line">a</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用正则表达式，打印出所有以b开头的标签名称</span></span><br><span class="line">In [<span class="number">66</span>]: <span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">In [<span class="number">67</span>]: <span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(re.compile(<span class="string">'b'</span>)):</span><br><span class="line">    ...:     print(tag.name)</span><br><span class="line">    ...:</span><br><span class="line">body</span><br><span class="line">b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有a标签，列表形式返回</span></span><br><span class="line">In [<span class="number">72</span>]: soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">Out[<span class="number">72</span>]:</span><br><span class="line">[&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;,</span><br><span class="line"> &lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有a标签中，id='link1'的a标签，返回列表</span></span><br><span class="line">In [<span class="number">73</span>]: soup.find_all(<span class="string">'a'</span>,id=<span class="string">'link1'</span>)</span><br><span class="line">Out[73]: [&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;]</span><br><span class="line"><span class="comment"># 查找所有a标签中，id='link2'的a标签，返回列表</span></span><br><span class="line">In [<span class="number">74</span>]: soup.find_all(<span class="string">'a'</span>,id=<span class="string">'link2'</span>)</span><br><span class="line">Out[74]: [&lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;]</span><br><span class="line"><span class="comment"># 查找所有p标签中，id='link1'的a标签，返回列表，由于p标签没有带id='link1'的，所有列表中没有元素</span></span><br><span class="line">In [<span class="number">75</span>]: soup.find_all(<span class="string">'p'</span>,id=<span class="string">'link2'</span>)</span><br><span class="line">Out[<span class="number">75</span>]: []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出所有id的值以link开头的标签</span></span><br><span class="line">In [<span class="number">76</span>]: soup.find_all(id=re.compile(<span class="string">'link'</span>))</span><br><span class="line">Out[<span class="number">76</span>]:</span><br><span class="line">[&lt;a class="vps1" href="https://m.do.co/c/fd128f8ba9e8" id="link1"&gt;Digital Ocean优惠链接&lt;/a&gt;,</span><br><span class="line"> &lt;a class="vps2" href="https://www.vultr.com/?ref=7147564" id="link2"&gt;Vultr优惠10美元链接&lt;/a&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有字符串中含有‘优惠’的字符串</span></span><br><span class="line">In [<span class="number">78</span>]: soup.find_all(string = re.compile(<span class="string">'优惠'</span>))</span><br><span class="line">Out[<span class="number">78</span>]: [<span class="string">'Digital Ocean优惠链接'</span>, <span class="string">'Vultr优惠10美元链接'</span>]</span><br></pre></td></tr></table></figure><p>下面介绍一下Beautiful Soup 4的其他方法：</p><table><thead><tr><th>函数名</th><th>含义</th><th>参数</th></tr></thead><tbody><tr><td><code>&lt;tag&gt;.find()</code></td><td>返回字符串类型，搜索并返回一个结果</td><td>同find_all()参数</td></tr><tr><td><code>&lt;tag&gt;.find_parent()</code></td><td>返回字符串类型，在先辈中返回一个结果</td><td>同find()参数</td></tr><tr><td><code>&lt;tag&gt;.find_parents()</code></td><td>返回列表类型，在先辈中搜索</td><td>同find_all()参数</td></tr><tr><td><code>&lt;tag&gt;.find_next_sibling()</code></td><td>返回字符串类型，在后续平行节点中返回一个结果</td><td>同find()参数</td></tr><tr><td><code>&lt;tag&gt;.find_next_siblings()</code></td><td>返回列表类型，在后续平行节点中搜索</td><td>同find_all()参数</td></tr><tr><td><code>&lt;tag&gt;.find_previous_sibling()</code></td><td>返回字符串类型，在前续平行节点中返回一个结果</td><td>同find()参数</td></tr><tr><td><code>&lt;tag&gt;.find_previous_siblings()</code></td><td>返回列表类型，在前续平行节点中搜索</td><td>同find_all()参数</td></tr></tbody></table><h2 id="Beautiful-Soup-4-库补充知识"><a href="#Beautiful-Soup-4-库补充知识" class="headerlink" title="Beautiful Soup 4 库补充知识"></a>Beautiful Soup 4 库补充知识</h2><ol><li><p><code>&lt;tag&gt;.string</code>用法总结：</p><ul><li>如果tag只有一个<code>NavigableString</code>类型子节点（文本内容），那么将得到该子节点；</li><li>如果tag只有一个子节点，那么<code>.string</code>得到的结果，和上面的结果一样；</li><li>如果tag包含多个子节点，tag就无法确定<code>.string</code>方法该调用哪个节点的内容，因此结果是None。</li></ul></li><li><p><code>&lt;tag&gt;.strings</code>和<code>&lt;tag&gt;.stripped_strings</code>用法：</p><ul><li>如果tag中包含多个字符串，可以使用<code>.strings</code>来循环遍历，输出的字符串中可能包含很多空格或空行；</li><li>使用<code>.stripped_strings</code>可以去除多余空白内容，全部是空格的行会被忽略掉，段首和段尾的空白会被删除。</li></ul></li><li><p><strong>CSS选择器</strong>，Beautiful Soup 4 支持大部分的CSS选择器，在<code>select()</code>方法中传入字符串参数即可使用：</p><blockquote><p><code>#link1</code> 是id选择器；<code>.sister</code>是class类选择器。</p></blockquote><ul><li><p>通过tag标签逐层查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">"body a"</span>)</span><br></pre></td></tr></table></figure></li><li><p>找到某个tag标签下的直接子标签：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">"head &gt; title"</span>)</span><br><span class="line">soup.select(<span class="string">"p &gt; #link1"</span>)</span><br></pre></td></tr></table></figure></li><li><p>找到兄弟节点标签：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找到所有兄弟节点</span></span><br><span class="line">soup.select(<span class="string">"#link1 ~ .sister"</span>)</span><br><span class="line"><span class="comment"># 找到下一个兄弟节点</span></span><br><span class="line">soup.select(<span class="string">"#link1 + .sister"</span>)</span><br></pre></td></tr></table></figure></li><li><p>通过CSS的类名查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">".sister"</span>)</span><br><span class="line">soup.select(<span class="string">"[class~=sister]"</span>)</span><br></pre></td></tr></table></figure></li><li><p>通过tag的id查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">"#link1"</span>)</span><br><span class="line">soup.select(<span class="string">"a#link2"</span>)</span><br></pre></td></tr></table></figure></li><li><p>通过是否存在某个属性查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">'a[href]'</span>)</span><br></pre></td></tr></table></figure></li><li><p>通过属性的值来查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">'a[href="http://example.com/elsie"]'</span>)</span><br><span class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 属性的值开头含有某字符串</span></span><br><span class="line">soup.select(<span class="string">'a[href^="http://example.com/"]'</span>)</span><br><span class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 属性的值结尾含有某字符串</span></span><br><span class="line">soup.select(<span class="string">'a[href$="tillie"]'</span>)</span><br><span class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 属性的值中间含有某字符串</span></span><br><span class="line">soup.select(<span class="string">'a[href*=".com/el"]'</span>)</span><br><span class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>&lt;tag&gt;.get_text()</code>方法，如果只想得到tag中包含的文本内容，那么可以调用这个方法，获取到tag中包含的所有文本内容，<strong>包括子孙tag中的内容</strong>，并将结果作为Unicode字符串返回。</p></li></ol><h1 id="实战——用Beautiful-Soup-4-库爬取豆瓣电影排行榜Top250"><a href="#实战——用Beautiful-Soup-4-库爬取豆瓣电影排行榜Top250" class="headerlink" title="实战——用Beautiful Soup 4 库爬取豆瓣电影排行榜Top250"></a>实战——用Beautiful Soup 4 库爬取豆瓣电影排行榜Top250</h1><p>豆瓣电影Top250的页面地址是<a href="https://movie.douban.com/top250?start=0，打开页面以后，发现页面下方有页面页码导航，因此，访问不同页面的数据的策略就是更改`start=0`的值，每个页面25条数据。" target="_blank" rel="noopener">https://movie.douban.com/top250?start=0，打开页面以后，发现页面下方有页面页码导航，因此，访问不同页面的数据的策略就是更改`start=0`的值，每个页面25条数据。</a></p><p>本实战代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment">### 可以改进的地方：</span></span><br><span class="line"><span class="comment">### 我们拿到的数据是在列表中拿到的，并不完善；</span></span><br><span class="line"><span class="comment">### 我们的作业是，拿到电影详情url以后，访问该url，从页面中爬取更多的信息。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取网页源码</span></span><br><span class="line"><span class="string">    :param url: 网页请求链接</span></span><br><span class="line"><span class="string">    :return: 返回网页源码</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"产生了异常：&#123;&#125;"</span>.format(str(e)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_movie_by_bs4</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    处理网页源码，使用Beautiful Soup 4提取电影信息</span></span><br><span class="line"><span class="string">    :param html: 网页源码</span></span><br><span class="line"><span class="string">    :return: 当前页电影信息的列表</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 列表形式，用以存储抽取出来的数据，每个数据是字典形式</span></span><br><span class="line">    page_movies = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 把html文档内容交给Beautiful Soup</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    <span class="comment"># 2.查找所有class='info'的div节点</span></span><br><span class="line">    div_infos = soup.find_all(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>: <span class="string">'info'</span>&#125;)</span><br><span class="line">    <span class="keyword">for</span> div_info <span class="keyword">in</span> div_infos:</span><br><span class="line">        <span class="comment"># 用字典保存</span></span><br><span class="line">        movie = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 3. 查找拥有class="hd"属性值的节点</span></span><br><span class="line">        div_hd = div_info.find(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>: <span class="string">'hd'</span>&#125;)</span><br><span class="line">        <span class="comment"># 4. 查找拥有class="bd"属性值的节点</span></span><br><span class="line">        div_bd = div_info.find(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>: <span class="string">'bd'</span>&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 5.从div_hd中取出url和title</span></span><br><span class="line">        movie[<span class="string">'url'</span>] = div_hd.a.attrs[<span class="string">'href'</span>]</span><br><span class="line">        title = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> span <span class="keyword">in</span> div_hd.a.contents:</span><br><span class="line">            title += str(span.string)</span><br><span class="line">        movie[<span class="string">'title'</span>] = <span class="string">''</span>.join(title.split())</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 6. 从div_bd中取出 导演（boss） 、主演（role）、年份（year）、国家（nation）、类别（category）、 引用评价(quote)</span></span><br><span class="line">        p1 = div_bd.find(<span class="string">'p'</span>, &#123;<span class="string">'class'</span>: <span class="string">''</span>&#125;)</span><br><span class="line">        movie[<span class="string">'info'</span>] = <span class="string">","</span>.join(p1.get_text(<span class="string">','</span>, strip=<span class="keyword">True</span>).split()).replace(<span class="string">":"</span>, <span class="string">","</span>).replace(<span class="string">",,"</span>, <span class="string">","</span>).replace(<span class="string">"/,"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        div_star = div_bd.find(<span class="string">'div'</span>)</span><br><span class="line">        movie[<span class="string">'rating_num'</span>] = div_star.find_all(<span class="string">'span'</span>)[<span class="number">1</span>].string</span><br><span class="line">        movie[<span class="string">'valuation_num'</span>] = str(div_star.find_all(<span class="string">'span'</span>)[<span class="number">3</span>].string).replace(<span class="string">"人评价"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        p2 = div_bd.find(<span class="string">'p'</span>, &#123;<span class="string">'class'</span>: <span class="string">'quote'</span>&#125;)</span><br><span class="line">        <span class="keyword">if</span> p2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            movie[<span class="string">'quote'</span>] = p2.span.string</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            movie[<span class="string">'quote'</span>] = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        page_movies.append(movie)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> page_movies</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    控制url，循环爬取所有页面，得到所有电影信息</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    bash_url = <span class="string">'https://movie.douban.com/top250?start='</span></span><br><span class="line">    offset = <span class="number">0</span></span><br><span class="line">    all_movies = []</span><br><span class="line">    page_id = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> offset &lt; <span class="number">250</span>:</span><br><span class="line">        print(<span class="string">"正在爬取第&#123;&#125;页"</span>.format(str(page_id + <span class="number">1</span>)))</span><br><span class="line">        url = bash_url + str(offset)</span><br><span class="line">        html_text = get_html(url)</span><br><span class="line">        page_movies = parse_movie_by_bs4(html_text)</span><br><span class="line">        all_movies.append(page_movies)</span><br><span class="line">        offset += <span class="number">25</span></span><br><span class="line">        page_id += <span class="number">1</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"douban_250.json"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> filename:</span><br><span class="line">        filename.write(json.dumps(all_movies, ensure_ascii=<span class="keyword">False</span>))</span><br><span class="line">    print(<span class="string">"所有数据爬取完毕"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="参考资料推荐"><a href="#参考资料推荐" class="headerlink" title="参考资料推荐"></a>参考资料推荐</h1><p>官方文档：<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/index.html" target="_blank" rel="noopener">《Beautiful Soup 4.2.0 文档》</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程所有源码下载链接：&lt;a href=&quot;https://share.weiyun.com/5xmFeUO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://share.weiyun.com/5xmFeUO&lt;/a&gt; 密
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://blog.sunjiajia.com/tags/Crawler/"/>
    
      <category term="Spider" scheme="https://blog.sunjiajia.com/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>《手把手带你学爬虫──初级篇》第2课 Requests库讲解</title>
    <link href="https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson02-requests/"/>
    <id>https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson02-requests/</id>
    <published>2018-09-14T04:12:02.000Z</published>
    <updated>2019-01-12T14:25:37.904Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程所有源码下载链接：<a href="https://share.weiyun.com/5xmFeUO" target="_blank" rel="noopener">https://share.weiyun.com/5xmFeUO</a> 密码：fzwh6g</p></blockquote><h1 id="Requests库讲解"><a href="#Requests库讲解" class="headerlink" title="Requests库讲解"></a>Requests库讲解</h1><h1 id="简介与安装"><a href="#简介与安装" class="headerlink" title="简介与安装"></a>简介与安装</h1><p>Requests是一常用的http请求库，它使用python语言编写，可以方便地发送http请求，以及方便地处理响应结果。</p><p>引用官方文档中的第一句话，来对Requests库进行一句话简介：</p><blockquote><p>Requests 唯一的一个<strong>非转基因</strong>的 Python HTTP 库，人类可以安全享用。</p></blockquote><p>翻译一下，就是：</p><blockquote><p>Requests库使用简单安全，威力无边，老少皆宜。</p></blockquote><p>至于安装，使用pip安装，简直不能更方便了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>其他不多说，直接上手！</p><h1 id="Requests库的基本用法"><a href="#Requests库的基本用法" class="headerlink" title="Requests库的基本用法"></a>Requests库的基本用法</h1><h2 id="体验入门"><a href="#体验入门" class="headerlink" title="体验入门"></a>体验入门</h2><p>通过用一个读取百度首页的例子，来体验一下如何在不用浏览器的情况下，读取互联网上的信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">()</span>:</span></span><br><span class="line">    response = requests.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">    print(response.status_code)</span><br><span class="line">    print(response.encoding)</span><br><span class="line">    html_text = response.text</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"baidu.html"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(html_text)</span><br><span class="line">        print(<span class="string">"write finished."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_html()</span><br></pre></td></tr></table></figure><p>多次运行程序，控制台下输出的结果有两种，并且在当前文件夹下生成了一个<code>baidu.html</code>的文件，保存了从互联网上读取来的百度首页的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HTTP请求状态码</span></span><br><span class="line">200</span><br><span class="line"><span class="comment"># 网页编码</span></span><br><span class="line">ISO-8859-1</span><br><span class="line"><span class="comment"># 响应头信息(headers)</span></span><br><span class="line">&#123;<span class="string">'Content-Length'</span>: <span class="string">'7610'</span>, <span class="string">'Cache-Control'</span>: <span class="string">'private, no-cache, no-store, proxy-revalidate, no-transform'</span>, <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Content-Type'</span>: <span class="string">'text/html'</span>, <span class="string">'Date'</span>: <span class="string">'Sat, 16 Jun 2018 07:00:11 GMT'</span>, <span class="string">'Keep-Alive'</span>: <span class="string">'timeout=4'</span>, <span class="string">'Last-Modified'</span>: <span class="string">'Mon, 23 Jan 2017 13:27:29 GMT'</span>, <span class="string">'Pragma'</span>: <span class="string">'no-cache'</span>, <span class="string">'Proxy-Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Server'</span>: <span class="string">'bfe/1.0.8.18'</span>, <span class="string">'Set-Cookie'</span>: <span class="string">'BDORZ=27315; max-age=86400; domain=.baidu.com; path=/'</span>&#125;</span><br><span class="line"><span class="comment"># 文件写入完毕</span></span><br><span class="line">write finished.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">200</span><br><span class="line">UTF-8</span><br><span class="line">&#123;<span class="string">'Content-Length'</span>: <span class="string">'12886'</span>, <span class="string">'Cache-Control'</span>: <span class="string">'no-cache'</span>, <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Content-Type'</span>: <span class="string">'text/html;charset=UTF-8'</span>, <span class="string">'Keep-Alive'</span>: <span class="string">'timeout=4'</span>, <span class="string">'Pragma'</span>: <span class="string">'no-cache'</span>, <span class="string">'Proxy-Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Server'</span>: <span class="string">'Apache-Coyote/1.1'</span>, <span class="string">'Set-Cookie'</span>: <span class="string">'andr_zz=7;domain=.baidu.com;path=/;max-age=600'</span>&#125;</span><br><span class="line">write finished.</span><br></pre></td></tr></table></figure><p>输出的结果有两种，是因为每一次服务器都给Requests发送的请求回应了不同的响应信息。这点不重要，这个现象是为了后面讨论<code>response.encoding</code>的用法。</p><h2 id="入门例子剖析"><a href="#入门例子剖析" class="headerlink" title="入门例子剖析"></a>入门例子剖析</h2><h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><p>当你需要访问一个网页时，你的浏览器（这里是Requests库）向网页所在的服务器（百度服务器）发出请求；服务器会返回一个头信息（server header），用以响应浏览器的请求。</p><p>常用HTTP请求状态码含义：</p><table><thead><tr><th style="text-align:center">状态码</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">200</td><td style="text-align:center">请求成功</td></tr><tr><td style="text-align:center">301</td><td style="text-align:center">资源被永久转移到其它URL</td></tr><tr><td style="text-align:center">404</td><td style="text-align:center">请求的资源不存在</td></tr><tr><td style="text-align:center">505</td><td style="text-align:center">内部服务器错误</td></tr></tbody></table><p>这些状态码的含义不必死记硬背，可以在需要的时候搜索一下。这里方便参考，给出简记方法：</p><table><thead><tr><th style="text-align:center">非正常状态码</th><th style="text-align:center">简记</th></tr></thead><tbody><tr><td style="text-align:center">1xx</td><td style="text-align:center">服务器对客户端说：收到了</td></tr><tr><td style="text-align:center">2xx</td><td style="text-align:center">服务器对客户端说：合作愉快</td></tr><tr><td style="text-align:center">3xx</td><td style="text-align:center">服务器对客户端说：回头见</td></tr><tr><td style="text-align:center">4xx</td><td style="text-align:center">服务器对客户端说：你错了</td></tr><tr><td style="text-align:center">5xx</td><td style="text-align:center">服务器对客户端说：我错了</td></tr></tbody></table><p>更详细的有关用法，只在有需求的时候查阅就可以了。参见<a href="http://www.runoob.com/http/http-status-codes.html" target="_blank" rel="noopener">《HTTP状态码》</a>。</p><h3 id="网页编码"><a href="#网页编码" class="headerlink" title="网页编码"></a>网页编码</h3><p>当得到的网页编码是<code>ISO-8859-1</code>时，我们在浏览器中打开<code>baidu.html</code>文件，发现是页面中凡是中文的地方都是乱码，如图：</p><p><img src="/img/crawler/lessons/lesson02_requests_demo01_01.jpg" alt=""></p><p>当得到的网页编码是<code>utf-8</code>时，我们在浏览器中打开<code>baidu.html</code>文件，发现是页面是正常的，如图：</p><p><img src="/img/crawler/lessons/lesson02_requests_demo01_02.jpg" alt=""></p><p>总结：</p><ul><li>当headers中不存在charset时，<code>response.encoding</code>默认认为编码为<code>ISO-8859-1</code></li><li>当headers中存在charset时，<code>response.encoding</code>显示为headers中charset的编码</li></ul><h3 id="头信息"><a href="#头信息" class="headerlink" title="头信息"></a>头信息</h3><p>浏览器在与服务器进行交流的过程中，会协商一些参数，用于影响页面的渲染和展示。当浏览器向服务器发送请求的时候，所携带的信息为<code>请求头信息</code>；当服务器向浏览器返回响应信息的时候，携带的信息<code>响应头信息</code>。在浏览器中，我们可以直观的看到这些信息：</p><p><img src="/img/crawler/lessons/lesson02_requests_03.jpg" alt=""></p><p>这里我们不做详细的讲解，有兴趣的同学可以参考<a href="http://www.runoob.com/http/http-tutorial.html" target="_blank" rel="noopener">《HTTP教程》</a>。</p><h2 id="HTTP请求报文（了解）"><a href="#HTTP请求报文（了解）" class="headerlink" title="HTTP请求报文（了解）"></a>HTTP请求报文（了解）</h2><p>HTTP请求报文由3部分组成：<strong>请求行+请求头+请求体</strong></p><p>获取请求报文的方法（Chrome浏览器）如图所示：</p><p><img src="/img/crawler/lessons/lesson02_requests_04.png" alt=""></p><p>Request Headers的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">DNT: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line">Cookie: BAIDUID=2D5F6595F31C411DF5DADEA1C10D8A81:FG=1; BIDUPSID=2D5F6595F31C411DF5DADEA1C10D8A81; PSTM=1529210459; BD_HOME=0; H_PS_PSSID=1446_21122_26350_26432; BD_UPN=123253</span><br></pre></td></tr></table></figure><p>图解为：</p><p><img src="/img/crawler/lessons/lesson02_requests_05.png" alt=""></p><p>Requests库也可以帮助我们拿到这些信息，以下代码在ipython中进行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">20</span>]: r = requests.post(<span class="string">'http://httpbin.org/post'</span>, data = &#123;<span class="string">'username'</span>:<span class="string">'zhangsan'</span>,<span class="string">'password'</span>:<span class="string">'123456'</span>&#125;)</span><br><span class="line"></span><br><span class="line">In [<span class="number">21</span>]: r.request.method</span><br><span class="line">Out[<span class="number">21</span>]: <span class="string">'POST'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">22</span>]: r.request.url</span><br><span class="line">Out[<span class="number">22</span>]: <span class="string">'http://httpbin.org/post'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: r.request.headers</span><br><span class="line">Out[<span class="number">23</span>]: &#123;<span class="string">'User-Agent'</span>: <span class="string">'python-requests/2.18.4'</span>, <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>, <span class="string">'Accept'</span>: <span class="string">'*/*'</span>, <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Content-Length'</span>: <span class="string">'33'</span>, <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [<span class="number">24</span>]: r.request.body</span><br><span class="line">Out[<span class="number">24</span>]: <span class="string">'username=zhangsan&amp;password=123456'</span></span><br></pre></td></tr></table></figure><p>Request Headers的字段讲解：</p><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">Accept</td><td style="text-align:center">请求报文通过该属性告诉服务端，客户端接受什么类型的响应</td></tr><tr><td style="text-align:center"><strong>Cookie</strong></td><td style="text-align:center">HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器</td></tr><tr><td style="text-align:center">Referer</td><td style="text-align:center">先前网页的地址，当前请求网页紧随其后,即来路</td></tr><tr><td style="text-align:center">Cache-Control</td><td style="text-align:center">指定请求和响应遵循的缓存机制</td></tr><tr><td style="text-align:center">Connection</td><td style="text-align:center">表示是否需要持久连接（HTTP 1.1默认进行持久连接）</td></tr><tr><td style="text-align:center">Upgrade-Insecure-Requests</td><td style="text-align:center">让浏览器自动升级请求 （由 http 升级成 https）</td></tr><tr><td style="text-align:center"><strong>User-Agent</strong></td><td style="text-align:center">浏览器的<a href="https://zh.wikipedia.org/wiki/%E7%94%A8%E6%88%B7%E4%BB%A3%E7%90%86" target="_blank" rel="noopener">浏览器身份标识字符串</a></td></tr><tr><td style="text-align:center"><strong>Accept-Encoding</strong></td><td style="text-align:center">能够接受的编码方式列表</td></tr><tr><td style="text-align:center"><strong>Accept-Language</strong></td><td style="text-align:center">能够接受的回应内容的自然语言列表</td></tr><tr><td style="text-align:center">Accept-Charset</td><td style="text-align:center">能够接受的字符集</td></tr></tbody></table><p> 更多具体的请求字段含义，请参考维基<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5" target="_blank" rel="noopener">HTTP头字段</a>，这里不做详细讲解。</p><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>HTTP协议可是互联网最基础最重要的协议。它可是一门大的学问。我们这里仅仅讲解一些基本概念。</p><p>HTTP协议，超文本传输协议，即HyperText Transfer Protocol，是互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准。</p><p>HTTP是一个基于“请求与响应”模式的、无状态的应用层协议。<code>无状态</code>可以理解为：每一个请求与响应没有上下文联系。</p><p>对于HTTP协议，我们在日常使用过程中，最直观的就是URL，即<code>统一资源定位符</code>。它的格式为：<code>http://host[:port][path]</code>。URL是通过HTTP协议存取互联网资源的路径，一个URL对应一个数据资源。</p><p>HTTP协议的请求方法，常用的有6种，Requests的几个常用方法是和这个对应的：</p><table><thead><tr><th style="text-align:center">方法名</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">GET</td><td style="text-align:center">请求获取URL位置的资源</td></tr><tr><td style="text-align:center">POST</td><td style="text-align:center">向指定资源提交数据进行处理请求（例如提交表单或者上传文件）</td></tr><tr><td style="text-align:center">HEAD</td><td style="text-align:center">向服务器请求与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以再不必传输整个响应内容的情况下，就可以获取包含在响应小消息头中的元信息。</td></tr><tr><td style="text-align:center">PUT</td><td style="text-align:center">向指定资源位置上传其最新内容，覆盖原资源</td></tr><tr><td style="text-align:center">DELETE</td><td style="text-align:center">请求服务器删除URL定位的资源</td></tr><tr><td style="text-align:center">PATCH</td><td style="text-align:center">请求局部更新URL定位的资源，节省网络带宽</td></tr></tbody></table><h2 id="Requests库常用方法入门"><a href="#Requests库常用方法入门" class="headerlink" title="Requests库常用方法入门"></a>Requests库常用方法入门</h2><p>需要知道的7个方法：</p><table><thead><tr><th style="text-align:center">方法名称</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center"><strong>requests.request()</strong></td><td style="text-align:center"><strong>构造一个请求。它是基础方法</strong></td></tr><tr><td style="text-align:center"><strong>requests.get()</strong></td><td style="text-align:center"><strong>发送Get请求获取网页信息， 并返回实体主体，也可以提交数据，包含在url中</strong></td></tr><tr><td style="text-align:center"><strong>requests.post()</strong></td><td style="text-align:center"><strong>向指定资源提交数据进行处理请求（提交表单或者上传文件），数据被包含在请求体中</strong></td></tr><tr><td style="text-align:center">requests.head()</td><td style="text-align:center">类似于get请求，返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td style="text-align:center">requests.put()</td><td style="text-align:center">发送PUT请求的方法， 从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td style="text-align:center">requests.patch()</td><td style="text-align:center">发送PATCH（局部修改）请求的方法</td></tr><tr><td style="text-align:center">requests.delete()</td><td style="text-align:center">发送DELETE（删除）请求的方法， 请求服务器删除指定的资源</td></tr></tbody></table><p>在实际编写爬虫的时候，最最常用的也就是加粗显示的3个方法。下面，我们在<code>ipython</code>中测试使用这几个方法。</p><h3 id="requests-head-使用方法"><a href="#requests-head-使用方法" class="headerlink" title="requests.head()使用方法"></a>requests.head()使用方法</h3><p>获取响应头信息，没有返回内容体。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ipython</span><br><span class="line">Python 3.6.5 (default, Mar 30 2018, 06:42:10)</span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> or <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 6.4.0 -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]: import requests</span><br><span class="line"></span><br><span class="line">In [2]: r = requests.head(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line"></span><br><span class="line">In [3]: r.headers</span><br><span class="line">Out[3]: &#123;<span class="string">'Content-Length'</span>: <span class="string">'208'</span>, <span class="string">'Access-Control-Allow-Credentials'</span>: <span class="string">'true'</span>, <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'*'</span>, <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>, <span class="string">'Date'</span>: <span class="string">'Sat, 16 Jun 2018 10:44:44 GMT'</span>, <span class="string">'Keep-Alive'</span>: <span class="string">'timeout=4'</span>, <span class="string">'Proxy-Connection'</span>: <span class="string">'keep-alive'</span>, <span class="string">'Server'</span>: <span class="string">'gunicorn/19.8.1'</span>, <span class="string">'Via'</span>: <span class="string">'1.1 vegur'</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="requests-post"><a href="#requests-post" class="headerlink" title="requests.post()"></a>requests.post()</h3><p>向URL用POST请求发送一个<strong>字典</strong>，自动编码为form表单数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [4]: payload = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>,<span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [5]: r = requests.post(<span class="string">'http://httpbin.org/post'</span>,data = payload)</span><br><span class="line"></span><br><span class="line">In [6]: <span class="built_in">print</span>(r.text)</span><br><span class="line">&#123;<span class="string">"args"</span>:&#123;&#125;,<span class="string">"data"</span>:<span class="string">""</span>,<span class="string">"files"</span>:&#123;&#125;,<span class="string">"form"</span>:&#123;<span class="string">"key1"</span>:<span class="string">"value1"</span>,<span class="string">"key2"</span>:<span class="string">"value2"</span>&#125;,<span class="string">"headers"</span>:&#123;<span class="string">"Accept"</span>:<span class="string">"*/*"</span>,<span class="string">"Accept-Encoding"</span>:<span class="string">"gzip, deflate"</span>,<span class="string">"Connection"</span>:<span class="string">"close"</span>,<span class="string">"Content-Length"</span>:<span class="string">"23"</span>,<span class="string">"Content-Type"</span>:<span class="string">"application/x-www-form-urlencoded"</span>,<span class="string">"Host"</span>:<span class="string">"httpbin.org"</span>,<span class="string">"User-Agent"</span>:<span class="string">"python-requests/2.18.4"</span>&#125;,<span class="string">"json"</span>:null,<span class="string">"origin"</span>:<span class="string">"45.77.28.136"</span>,<span class="string">"url"</span>:<span class="string">"http://httpbin.org/post"</span>&#125;</span><br></pre></td></tr></table></figure><p>form字段：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"form":&#123;"key1":"value1","key2":"value2"&#125;</span><br></pre></td></tr></table></figure><p>向URL用POST请求发送一个<strong>字符串</strong>，自动编码为data。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">7</span>]: abc = <span class="string">'ABC'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: r = requests.post(<span class="string">'http://httpbin.org/post'</span>,data = abc)</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: print(r.text)</span><br><span class="line">&#123;<span class="string">"args"</span>:&#123;&#125;,<span class="string">"data"</span>:<span class="string">"ABC"</span>,<span class="string">"files"</span>:&#123;&#125;,<span class="string">"form"</span>:&#123;&#125;,<span class="string">"headers"</span>:&#123;<span class="string">"Accept"</span>:<span class="string">"*/*"</span>,<span class="string">"Accept-Encoding"</span>:<span class="string">"gzip, deflate"</span>,<span class="string">"Connection"</span>:<span class="string">"close"</span>,<span class="string">"Content-Length"</span>:<span class="string">"3"</span>,<span class="string">"Host"</span>:<span class="string">"httpbin.org"</span>,<span class="string">"User-Agent"</span>:<span class="string">"python-requests/2.18.4"</span>&#125;,<span class="string">"json"</span>:null,<span class="string">"origin"</span>:<span class="string">"45.77.28.136"</span>,<span class="string">"url"</span>:<span class="string">"http://httpbin.org/post"</span>&#125;</span><br></pre></td></tr></table></figure><p>data字段：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"data":"ABC"</span><br></pre></td></tr></table></figure><h3 id="requests-put"><a href="#requests-put" class="headerlink" title="requests.put()"></a>requests.put()</h3><p>该方法和<code>post()</code>方法的使用类似，只不过它可以将原有的数据覆盖掉。</p><h2 id="Requests库主要方法解析"><a href="#Requests库主要方法解析" class="headerlink" title="Requests库主要方法解析"></a>Requests库主要方法解析</h2><p>requests.request(<code>method,url,**kwargs</code>)</p><ul><li>method：请求方式，对应get/put/post等7种</li><li>url：获取页面的url连接</li><li><strong>kwargs：控制访问的参数，共13个，均为可选项<br>因此，将<code>method</code>改为不同的请求方式，将等同于具体的requests请求方法。<br>例如：`requests.request(“GET”,url,</strong>kwargs)<code>等同于</code>requests.get(url,<strong>kwargs)`。</strong>kwargs：控制访问的参数，13个可用参数的具体使用方法如下：</li></ul><ol><li><p>params：字典或者字节序列，作为参数增加到url中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [10]: kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>,<span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [11]: r = requests.request(<span class="string">'GET'</span>,<span class="string">'http://python123.io/ws'</span>, params = kv)</span><br><span class="line"></span><br><span class="line">In [12]: <span class="built_in">print</span>(r.url)</span><br><span class="line">https://python123.io/ws?key1=value1&amp;key2=value2</span><br></pre></td></tr></table></figure></li><li><p>data：字典、字节序列或者文件对象，作为Request的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">In [21]: kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>,<span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [22]: r = requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>, data = kv)</span><br><span class="line"></span><br><span class="line">In [23]: body = <span class="string">'主体内容'</span></span><br><span class="line"></span><br><span class="line">In [24]: r = requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>, data = body.encode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></li><li><p>json：JSON格式的数据，作为Request的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln [25]: kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>,<span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [26]: r = requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>, json = kv)</span><br></pre></td></tr></table></figure></li><li><p>headers：字典，用来指定请求头。⭐️</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [27]: hd = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Chrome/10'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [28]: r = requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>, headers = hd)</span><br></pre></td></tr></table></figure></li><li><p>cookies：字典或者CookieJar，Request中的cookie。⭐️</p></li><li><p>auth：元祖，支持HTTP认证功能。</p></li><li><p>files：字典类型，传输文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [35]: fs = &#123;<span class="string">'file'</span>: open(<span class="string">'baidu.html'</span>,<span class="string">'rb'</span>)&#125;</span><br><span class="line"></span><br><span class="line">In [36]: r = requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>, files = fs)</span><br></pre></td></tr></table></figure></li><li><p>timeout：设定超时时间，单位，秒。⭐️</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">In [37]: r = requests.request(<span class="string">'GET'</span>,<span class="string">'http://python123.io/ws'</span>, timeout = 10)</span><br></pre></td></tr></table></figure></li><li><p>proxies：字典类型，设定访问代理服务器，可以增加登录认证。⭐️</p><p>使用这个字段，可以隐藏自己的ip，防止服务器识别爬虫。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [40]: pxs = &#123;</span><br><span class="line">    ...: <span class="string">'http'</span>: <span class="string">'http://user:pass@10.10.10.10:1234'</span>,</span><br><span class="line">    ...: <span class="string">'https'</span>: <span class="string">'https://10.10.10.10:4321'</span>&#125;</span><br><span class="line"></span><br><span class="line">In [41]: r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://www.baidu.com'</span>, proxies = pxs)</span><br></pre></td></tr></table></figure></li><li><p>allow_redirects：它的值为True/False，默认为True，重定向开关。表示，是否允许对url进行重定向。</p></li><li><p>stream：True/False，默认值为True，获取的内容是否立即下载。默认是立即下载的。</p></li><li><p>verify：True/False，默认为True，认证SSL证书开关。是否对SSL证书进行认证。</p></li><li><p>cert：本地SSL证书路径。</p></li></ol><h2 id="Response对象的属性"><a href="#Response对象的属性" class="headerlink" title="Response对象的属性"></a>Response对象的属性</h2><p>需要记住的几个属性为：</p><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">response.status_code</td><td style="text-align:center">HTTP响应状态码</td></tr><tr><td style="text-align:center">response.encoding</td><td style="text-align:center">从HTTP中charset推断的网页编码方式，如果charset不存在，返回ISO-8859-1</td></tr><tr><td style="text-align:center">response.apparent_encoding</td><td style="text-align:center">从响应内容中分析出的内容编码方式</td></tr><tr><td style="text-align:center">response.content</td><td style="text-align:center">二进制形式的响应内容，如请求的连接是一个图片等二进制文件，返回的内容用response.content</td></tr><tr><td style="text-align:center">response.text</td><td style="text-align:center">字符串形式的响应内容，如请求的连接是一个网页，其内容为html等字符串形式内容，返回的内容用response.text</td></tr></tbody></table><blockquote><p>在爬虫实践中，如果是反复循环迭代大量信息，不建议使用response.apparent_encoding来推断网页编码，因为这个操作非常耗时。因此，通常的做法是，我们在编写爬虫时，提前确定网页的编码方式，然后设置给response.encoding。</p></blockquote><h2 id="Requests库的异常"><a href="#Requests库的异常" class="headerlink" title="Requests库的异常"></a>Requests库的异常</h2><table><thead><tr><th>异常</th><th>含义</th></tr></thead><tbody><tr><td>requests.ConnectionError</td><td>网络连接出现异常，如拒绝连接等</td></tr><tr><td>requests.HTTPError</td><td>HTTP错误异常</td></tr><tr><td>requests.URLRequired</td><td>URL缺失异常</td></tr><tr><td>requests.TooManyRedirects</td><td>请求超过了设定的最大重定向次数</td></tr><tr><td>requests.ConnectTimeout</td><td>连接远程服务器超时异常</td></tr><tr><td>requests.Timeout</td><td>请求URL超时，产生超时异常</td></tr></tbody></table><p>动手试一试：</p><p>在下面的通用代码中，用Exception这个父类，捕捉了所有可能出现的异常。如果将<code>url = &quot;http://www.baidu.com&quot;</code>中的网址写错了，例如将<code>http://</code>去掉，将会报错<code>requests.exceptions.MissingSchema</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">出现异常，类型为：&lt;class <span class="string">'requests.exceptions.MissingSchema'</span>&gt;，内容为：Invalid URL <span class="string">'www.baidu.com'</span>: No schema supplied. Perhaps you meant http://www.baidu.com?</span><br></pre></td></tr></table></figure><h2 id="爬取网页的通用代码示例"><a href="#爬取网页的通用代码示例" class="headerlink" title="爬取网页的通用代码示例"></a>爬取网页的通用代码示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"出现异常，类型为：&#123;&#125;，内容为：&#123;&#125;"</span>, type(e), str(e))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">"http://www.baidu.com"</span></span><br><span class="line">    result = get_html(url)</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h1 id="实战——获取京东商品页面信息"><a href="#实战——获取京东商品页面信息" class="headerlink" title="实战——获取京东商品页面信息"></a>实战——获取京东商品页面信息</h1><p>该实验在ipython下进行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">In [1]: import requests</span><br><span class="line"></span><br><span class="line">In [2]: r = requests.get(<span class="string">"https://item.jd.com/3446665.html"</span>)</span><br><span class="line"></span><br><span class="line">In [3]: r.status_code</span><br><span class="line">Out[3]: 200</span><br><span class="line"></span><br><span class="line">In [4]: r.encoding</span><br><span class="line">Out[4]: <span class="string">'gbk'</span></span><br><span class="line"></span><br><span class="line">In [5]: r.text[:500]</span><br><span class="line">Out[5]: <span class="string">'&lt;!DOCTYPE HTML&gt;\n&lt;html lang="zh-CN"&gt;\n&lt;head&gt;\n    &lt;!-- shouji --&gt;\n    &lt;meta http-equiv="Content-Type" content="text/html; charset=gbk" /&gt;\n    &lt;title&gt;【LG27UD58】LG 27UD58-B 27英寸4K IPS硬屏 低闪屏滤蓝光LED背光液晶显示器【行情 报价 价格 评测】-京东&lt;/title&gt;\n    &lt;meta name="keywords" content="LG27UD58,LG27UD58,LG27UD58报价,LG27UD58报价"/&gt;\n    &lt;meta name="description" content="【LG27UD58】京东JD.COM提供LG27UD58正品行货，并包括LG27UD58网购指南，以及LG27UD58图片、27UD58参数、27UD58评论、27UD58心得、27UD58技巧等信息，网购LG27UD58上京东,放心又轻松" /&gt;\n    &lt;meta name="format-detection" con'</span></span><br></pre></td></tr></table></figure><h1 id="实战——爬取网络图片并存储在本地"><a href="#实战——爬取网络图片并存储在本地" class="headerlink" title="实战——爬取网络图片并存储在本地"></a>实战——爬取网络图片并存储在本地</h1><p>该实验在pycharm编辑器中编写并执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pic</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment"># Linux、Unix系统路径</span></span><br><span class="line">    <span class="comment"># 如果是Windows系统应该写 file_dir = ".//pics//"</span></span><br><span class="line">    file_dir = <span class="string">'./pics/'</span></span><br><span class="line">    filename = url.split(<span class="string">"/"</span>)[<span class="number">-1</span>]</span><br><span class="line">    file_path = file_dir + filename</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_dir):</span><br><span class="line">            os.mkdir(file_dir)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_path):</span><br><span class="line">            r = requests.get(url, timeout=<span class="number">30</span>)</span><br><span class="line">            r.raise_for_status()</span><br><span class="line">            <span class="keyword">with</span> open(file_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(r.content)</span><br><span class="line">            print(<span class="string">'文件保存成功'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'图片已经存在'</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"出现异常，类型为：&#123;&#125;，内容为：&#123;&#125;"</span>.format(type(e), str(e)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">"http://image.ngchina.com.cn/2018/0616/20180616123038195.jpg"</span></span><br><span class="line">    get_pic(url)</span><br></pre></td></tr></table></figure><h1 id="参考资料推荐"><a href="#参考资料推荐" class="headerlink" title="参考资料推荐"></a>参考资料推荐</h1><ul><li>Requests官方文档：<a href="http://docs.python-requests.org/en/master/" target="_blank" rel="noopener">《Requests: HTTP for Humans》</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程所有源码下载链接：&lt;a href=&quot;https://share.weiyun.com/5xmFeUO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://share.weiyun.com/5xmFeUO&lt;/a&gt; 密
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://blog.sunjiajia.com/tags/Crawler/"/>
    
      <category term="Spider" scheme="https://blog.sunjiajia.com/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>《手把手带你学爬虫──初级篇》第1课 基础知识</title>
    <link href="https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson01-introduce/"/>
    <id>https://blog.sunjiajia.com/2018/09/14/crawler-lessons-lesson01-introduce/</id>
    <published>2018-09-14T04:12:01.000Z</published>
    <updated>2018-10-21T09:31:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程所有源码下载链接：<a href="https://share.weiyun.com/5xmFeUO" target="_blank" rel="noopener">https://share.weiyun.com/5xmFeUO</a> 密码：fzwh6g</p></blockquote><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="Python安装"><a href="#Python安装" class="headerlink" title="Python安装"></a>Python安装</h2><p>平时能接触到的操作系统非Windows、macOS、Linux莫属。其中Windows是我们日常中最常用的OS，它软件更多、办公和游戏可以兼得；macOS由于搭载其的电脑外表漂亮、屏幕优秀、性能均衡，而被很多设计者和程序员所喜爱；Linux在服务器领域是无可匹敌，几乎所有大型应用服务器都部署于Linux系统，常用的Linux服务器系统有CentOS、Ubuntu Server等，但是Linux桌面版也在程序员中应用较广，便捷的终端、稳定的性能是编程的首选。</p><p>由于macOS和Ubuntu系统都自带python环境，因此，我们只讲解Windows下Python的安装和配置。感兴趣的同学，可以自己在虚拟机中测试和熟悉Linux系统，推荐Ubuntu18.04。</p><h3 id="Windows下安装Python"><a href="#Windows下安装Python" class="headerlink" title="Windows下安装Python"></a>Windows下安装Python</h3><p>熟悉一下<a href="https://www.python.org/" target="_blank" rel="noopener">Python的主页</a>：</p><p><img src="/img/crawler/lessons/lesson01_introduce_01.png" alt=""></p><p>下载。官方的最新版已经更新到了3.7.0，但是我们下载的版本是Python3.6.5，因此，我们点击<a href="https://www.python.org/downloads" target="_blank" rel="noopener">View the full list of downloads</a>。</p><p><img src="/img/crawler/lessons/lesson01_introduce_02.png" alt=""></p><p>只需要记住，不同架构的Windows系统，选择不同的安装包下载。</p><p><img src="/img/crawler/lessons/lesson01_introduce_03.png" alt=""></p><p>安装。按图示操作即可。</p><ul><li><p>双击安装包，选择自定义安装，方便以后使用。</p><p><img src="/img/crawler/lessons/lesson01_introduce_04.png" alt=""></p></li><li><p>直接下一步。</p><p><img src="/img/crawler/lessons/lesson01_introduce_05.png" alt=""></p></li><li><p>修改路径，将路径改为<code>c:\Python36</code>。</p><p><img src="/img/crawler/lessons/lesson01_introduce_06.png" alt=""></p></li><li><p>安装成功</p><p><img src="/img/crawler/lessons/lesson01_introduce_07.png" alt=""></p></li></ul><p>环境变量检测与设置。</p><ul><li><p>打开cmd命令行。</p><p><img src="/img/crawler/lessons/lesson01_introduce_08.png" alt=""></p></li><li><p>输入<code>python</code>，提示python版本等信息表示环境变量设置成功。</p><p><img src="/img/crawler/lessons/lesson01_introduce_09.png" alt=""></p></li><li><p>如果输入python后，提示不是内部命令或外部命令，则表示环境变量没有配置好。</p><p><img src="/img/crawler/lessons/lesson01_introduce_10.png" alt=""></p></li></ul><p>设置环境变量。</p><ul><li><p>桌面右击<code>计算机</code>🖥️，选择属性，然后，再次选择<code>高级系统设置</code>。</p><p><img src="/img/crawler/lessons/lesson01_introduce_11.png" alt=""></p></li><li><p>在<code>高级</code>一栏中点击<code>环境变量</code>，打开<code>环境变量</code>设置窗口。</p><p><img src="/img/crawler/lessons/lesson01_introduce_12.png" alt=""></p></li><li><p>点击<code>新建</code>，在变量名中输入<code>PATH</code>（大写），在变量值中输入<code>C:\Python36\Scripts\;C:\Python36\</code>，<code>C:\Python36\Scripts\</code>文件夹下有一些常用工具，例如<code>pip</code>包管理工具，也加入到环境变量中，这样方便以后使用；<code>C:\Python36\</code>就是python的安装目录。</p><p><img src="/img/crawler/lessons/lesson01_introduce_13.png" alt=""></p></li><li><p>将cmd命令行都关闭，重新打开cmd，再次输入<code>python</code>进行验证。</p></li></ul><p>Python环境到这里就安装完毕了。</p><h3 id="包管理工具pip"><a href="#包管理工具pip" class="headerlink" title="包管理工具pip"></a>包管理工具pip</h3><p>pip是Python的一款包管理工具，由于众所周知的原因，用pip安装库的速度简直是“是可忍孰不可忍”。因此，我们有必要加速pip包管理工具的下载速度。</p><h4 id="pip的基本使用"><a href="#pip的基本使用" class="headerlink" title="pip的基本使用"></a>pip的基本使用</h4><p>Windows中，打开cmd命令行，输入<code>pip</code>后，可以看到使用方法：</p><p><img src="/img/crawler/lessons/lesson01_introduce_22.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索requests包</span></span><br><span class="line">pip search requests</span><br><span class="line"><span class="comment"># 升级requests包</span></span><br><span class="line">pip install requests --upgrade</span><br><span class="line"><span class="comment"># 卸载requests包</span></span><br><span class="line">pip uninstall requests</span><br><span class="line"><span class="comment"># 查看待更新包</span></span><br><span class="line">pip list --outdate</span><br></pre></td></tr></table></figure><h4 id="升级pip包管理器"><a href="#升级pip包管理器" class="headerlink" title="升级pip包管理器"></a>升级pip包管理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><h4 id="加速pip下载速度"><a href="#加速pip下载速度" class="headerlink" title="加速pip下载速度"></a>加速pip下载速度</h4><p>在某程序员论坛上，有这样一个软笑话：《安装scrapy快疯了，一个下午没了》😄️</p><p><img src="/img/crawler/lessons/lesson01_introduce_23.png" alt=""></p><p>我们使用清华大学开源软件镜像站的pypi镜像进行pip下载加速。</p><h5 id="临时加速"><a href="#临时加速" class="headerlink" title="临时加速"></a>临时加速</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple requests</span><br></pre></td></tr></table></figure><blockquote><p>注意，<code>simple</code>不能少，是<code>https</code>而不是<code>http</code></p></blockquote><h5 id="永久加速1"><a href="#永久加速1" class="headerlink" title="永久加速1"></a>永久加速1</h5><p>修改 </p><p><code>~/.config/pip/pip.conf</code> (Linux), </p><p><code>%APPDATA%\pip\pip.ini</code> (Windows 10) ,</p><p><code>C:\Users\Administrator\AppData\Roaming\pip\pip.ini</code>（Windows7），</p><p><code>$HOME/Library/Application Support/pip/pip.conf</code> (macOS) (没有就创建一个)，</p><p> 修改 <code>index-url</code>至tuna，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>pip 和 pip3 并存时，只需修改 <code>~/.pip/pip.conf</code>。 </p><h5 id="永久加速2"><a href="#永久加速2" class="headerlink" title="永久加速2"></a>永久加速2</h5><p>使用脚本永久加速，只需用Python执行<code>oh-my-tuna.py</code>文件即可设置好镜像站加速，</p><p>该脚本在我们的源码中有提供，位置为<code>CrawlerLessons/codes/lesson01/oh-my-tuna.py</code>，下载后，直接在命令行中运行即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python on-my-tuna.py</span><br></pre></td></tr></table></figure><h4 id="安装IPython"><a href="#安装IPython" class="headerlink" title="安装IPython"></a>安装IPython</h4><p><code>ipython</code>是一个<code>python</code>的交互式<code>shell</code>，比默认的<code>python shell</code>好用得多，支持变量自动补全，自动缩进，支持<code>bash shell</code>命令，内置了许多很有用的功能和函数。学习<code>ipython</code>将会让我们以一种更高的效率来使用<code>python</code>。同时它也是利用Python进行科学计算和交互可视化的一个最佳的平台。</p><p>使用<code>pip</code>安装<code>IPython</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure><p>使用<code>IPython</code>，再命令行中输入<code>ipython</code>即可进入交互式<code>shell</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">╭─sunjiajia@Mac /Users/sunjiajia  ‹system›</span><br><span class="line">╰─$ ipython</span><br><span class="line">Python 3.6.5 (default, Jul  2 2018, 18:32:34)</span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> or <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 6.4.0 -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]:</span><br></pre></td></tr></table></figure><h2 id="IDE-的选择"><a href="#IDE-的选择" class="headerlink" title="IDE 的选择"></a>IDE 的选择</h2><p>在以后的编程中，我们使用<code>PyCharm</code>这款享誉全球的IDE，开发、调试、支持网页开发和支持数据库，可以满足我们几乎所有的开发需求。</p><p><code>PyCharm</code>是收费软件，但也提供社区免费版本，虽然功能有所减少，但是也够我们后续写爬虫了。</p><p><code>PyCharm</code>下载地址：<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">官方网址</a>。</p><h3 id="PyCharm的基本使用"><a href="#PyCharm的基本使用" class="headerlink" title="PyCharm的基本使用"></a>PyCharm的基本使用</h3><p>创建项目：</p><p><img src="/img/crawler/lessons/lesson01_introduce_14.png" alt=""></p><p>选择项目路径：</p><p><img src="/img/crawler/lessons/lesson01_introduce_15.png" alt=""></p><p>创建Python文件，命名为<code>test01.py</code>：</p><p><img src="/img/crawler/lessons/lesson01_introduce_16.png" alt=""></p><p>在<code>test01.py</code>中输入以下python代码，右击空白处，选择<code>Run test01</code>，运行当前python文件：</p><p><img src="/img/crawler/lessons/lesson01_introduce_17.png" alt=""></p><p>PyCharm常用设置项如图所示：</p><p><img src="/img/crawler/lessons/lesson01_introduce_18.png" alt=""></p><h1 id="HTML和CSS基础知识"><a href="#HTML和CSS基础知识" class="headerlink" title="HTML和CSS基础知识"></a>HTML和CSS基础知识</h1><p>这一节我们学习网页编程的基础知识。这节课目标是，了解网页的基本知识，在写爬虫的时候可以清晰的分析目标数据所在的结构，从而更轻松的拿到自己想要的数据。</p><p>无论是动态加载，还是延迟加载，无论是文字还是多媒体，最终在浏览器中展示给我们，都是以HTML语法来展示；无论是绚丽的动画页面效果，还是表格的样式，都可以用CSS来进行定制。</p><p>下面来一个概念简介，来自百度百科的内容：</p><p><strong>HTML，即超文本标记语言（英语：HyperText Markup Language）</strong>，是标准通用标记语言下的一个应用，也是一种规范，一种标准，它通过标记符号来标记要显示的网页中的各个部分。网页文件本身是一种文本文件，通过在文本文件中添加标记符，可以告诉浏览器如何显示其中的内容（如：文字如何处理，画面如何安排，图片如何显示等）。</p><p><strong>CSS，即层叠样式表(英文全称：Cascading Style Sheets)</strong>，是一种用来表现HTML或XML等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。</p><h2 id="HTML基本标签"><a href="#HTML基本标签" class="headerlink" title="HTML基本标签"></a>HTML基本标签</h2><table><thead><tr><th>标签名</th><th>含义</th></tr></thead><tbody><tr><td><code>&lt;!--...--&gt;</code></td><td>注释标签用于在源代码中插入注释。注释不会显示在浏览器中。</td></tr><tr><td><code>&lt;!DOCTYPE&gt;</code></td><td><code>&lt;!DOCTYPE&gt;</code> 声明必须是 <code>HTML</code> 文档的第一行，位于 <code>&lt;html&gt;</code> 标签之前。<code>&lt;!DOCTYPE&gt;</code> 声明不是 <code>HTML</code> 标签；它是指示 web 浏览器关于页面使用哪个 <code>HTML</code> 版本进行编写的指令。在 <code>HTML5</code> 中只有一种写法<code>&lt;!DOCTYPE html&gt;</code></td></tr><tr><td><code>&lt;html&gt;</code></td><td><code>&lt;html&gt;</code> 与 <code>&lt;/html&gt;</code> 标签限定了文档的开始点和结束点，在它们之间是文档的头部和主体。正如您所了解的那样，文档的头部由 <code>&lt;head&gt;</code>标签定义，而主体由<code>&lt;body&gt;</code>标签定义。</td></tr><tr><td><code>&lt;head&gt;</code></td><td>用于定义文档的头部，它是所有头部元素的容器。<code>&lt;head&gt;</code> 中的元素可以引用脚本、指示浏览器在哪里找到样式表、提供元信息等等。</td></tr><tr><td><code>&lt;meta&gt;</code></td><td>提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。</td></tr><tr><td><code>&lt;title&gt;</code></td><td>定义文档的标题。</td></tr><tr><td><code>&lt;style&gt;</code></td><td>用于为 <code>HTML</code> 文档定义样式信息。<code>type</code> 属性是必需的，定义 <code>style</code> 元素的内容。唯一可能的值是 <code>&quot;text/css&quot;</code>。</td></tr><tr><td><code>&lt;link&gt;</code></td><td>定义文档与外部资源的关系，最常见的用途是链接样式表。</td></tr><tr><td><code>&lt;body&gt;</code></td><td><code>body</code> 元素定义文档的主体，包含文档的所有内容（比如文本、超链接、图像、表格和列表等等。）</td></tr><tr><td></td></tr></tbody></table><h2 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h2><table><thead><tr><th>标签名</th><th>含义</th></tr></thead><tbody><tr><td><code>&lt;a href=&quot;http://news.baidu.com/&quot; target=&quot;_blank&quot;&gt;新闻&lt;/a&gt;</code></td><td>定义超链接</td></tr><tr><td><code>&lt;img src=&quot;images/logo.png&quot; alt=&quot;GitOPEN搜索，最贴心搜索&quot;&gt;</code></td><td>插入图片</td></tr><tr><td><code>&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;th&gt;Month&lt;/th&gt;&lt;th&gt;Savings&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;January&lt;/td&gt;     &lt;td&gt;$100&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></td><td>表格</td></tr><tr><td><code>&lt;div&gt;我是div&lt;/div&gt;</code></td><td>可定义文档中的分区或节</td></tr><tr><td><code>&lt;p&gt;&lt;span&gt;some text.&lt;/span&gt;some other text.&lt;/p&gt;</code></td><td>被用来组合文档中的行内元素。</td></tr><tr><td><code>&lt;ul&gt;&lt;li&gt;Coffee&lt;/li&gt;&lt;li&gt;Milk&lt;/li&gt;&lt;/ul&gt;</code></td><td>无序列表</td></tr><tr><td><code>&lt;ol&gt;&lt;li&gt;Coffee&lt;/li&gt;&lt;li&gt;Milk&lt;/li&gt;&lt;/ol&gt;</code></td><td>有序列表</td></tr><tr><td><code>&lt;input type=&quot;button&quot; value=&quot;搜索一下&quot;/&gt;</code></td><td>用于搜集用户信息。根据不同的 <code>type</code> 属性值，输入字段可以是<code>text</code>、复选框<code>checkbox</code>、单选按钮<code>radio</code>、<code>button</code>、<code>submit</code>等等。</td></tr></tbody></table><h2 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h2><h3 id="HTML整合CSS的方式一"><a href="#HTML整合CSS的方式一" class="headerlink" title="HTML整合CSS的方式一"></a>HTML整合CSS的方式一</h3><p>直接将css写在HTML文件中，代码<code>CrawlerLessons/codes/lesson01/HTMLDemo/demo01.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我是GitOPEN<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #div01 &#123;</span></span><br><span class="line"><span class="undefined">            background-color: #2d78f4;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .div02 &#123;</span></span><br><span class="line"><span class="undefined">            background-color: cadetblue;</span></span><br><span class="line"><span class="undefined">            font-style: oblique;</span></span><br><span class="line"><span class="undefined">            font-weight: bold;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div01"</span>&gt;</span></span><br><span class="line">    我是div01，我的样式使用了id选择器(div01)</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div02"</span>&gt;</span></span><br><span class="line">    我是div02，我的样式使用了类选择器(div02)</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div02"</span>&gt;</span></span><br><span class="line">    我是div03，我的样式使用了类选择器(div02)</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="HTML整合CSS的方式二"><a href="#HTML整合CSS的方式二" class="headerlink" title="HTML整合CSS的方式二"></a>HTML整合CSS的方式二</h3><p>css写在单独的文件中，代码<code>CrawlerLessons/codes/lesson01/HTMLDemo/demo02.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div01</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2d78f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.div02</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: cadetblue;</span><br><span class="line">    <span class="attribute">font-style</span>: oblique;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html也是一个单独的文件，代码<code>CrawlerLessons/codes/lesson01/HTMLDemo/demo02.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我是GitOPEN<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"demo02.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div01"</span>&gt;</span></span><br><span class="line">    我是div01，我的样式使用了id选择器(div01)</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div02"</span>&gt;</span></span><br><span class="line">    我是div02，我的样式使用了类选择器(div02)</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div02"</span>&gt;</span></span><br><span class="line">    我是div03，我的样式使用了类选择器(div02)</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS常用属性"><a href="#CSS常用属性" class="headerlink" title="CSS常用属性"></a>CSS常用属性</h3><table><thead><tr><th>属性名</th><th>作用</th></tr></thead><tbody><tr><td>font-size</td><td>字号大小</td></tr><tr><td>font-style</td><td>字体格式</td></tr><tr><td>font-weight</td><td>字体粗细</td></tr><tr><td>color</td><td>文本颜色</td></tr><tr><td>text-decoration</td><td>超链接设置。line-through添加删除线；blink文字闪动；none不显示上述任何效果</td></tr><tr><td>background-color</td><td>背景颜色</td></tr><tr><td>backgroud-image</td><td>背景图片（地址）</td></tr><tr><td>background-repeat</td><td>是否重复。no-repeat不重复平铺；repeat-x或者y：只在水平或者垂直方向上平铺</td></tr><tr><td>text-align</td><td>文本对齐。left左对齐；right右对齐；center居中对齐；justify：相对左右两端对齐</td></tr><tr><td>display</td><td>显示样式。block块级元素，在对象前后都换行；inline在对象前后都不换行；list-item在对象前后都换行，增加了项目符号</td></tr></tbody></table><h1 id="Python必备知识点"><a href="#Python必备知识点" class="headerlink" title="Python必备知识点"></a>Python必备知识点</h1><h2 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h2><h3 id="变量及其类型的含义"><a href="#变量及其类型的含义" class="headerlink" title="变量及其类型的含义"></a>变量及其类型的含义</h3><p>Python中的变量不需要声明，变量在使用前都必须赋值，在赋值以后，该变量才会被创建。</p><p>Python中的变量就是变量，它本身没有类型，通常所说的“变量类型”，表示的意思是变量所指向的内存中对象的类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'GitOPEN'</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line">salary = <span class="number">99999.99</span></span><br></pre></td></tr></table></figure><p>等号(=)叫做运算符，用来给变量<code>name</code>、<code>age</code>、<code>salary</code>赋值，左边是一个变量名，右边是存储在变量中的值。</p><p>在给变量赋值不同类型的对象，那么，变量就有了类型。</p><p><code>name</code>是字符串变量，<code>age</code>是整型变量，<code>salary</code>是浮点型变量。</p><h3 id="多个变量赋值"><a href="#多个变量赋值" class="headerlink" title="多个变量赋值"></a>多个变量赋值</h3><p>Python中，可以同时为多个变量赋值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa = bb = cc = <span class="number">11</span></span><br></pre></td></tr></table></figure><p>这个例子的含义为，创建一个整型对象，值为11，<strong>从后向前</strong>赋值，3个变量都指向同一个内存地址。</p><p>再看一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd, ee, ff = <span class="number">22</span>, <span class="number">33</span>, <span class="string">"GitOPEN"</span></span><br></pre></td></tr></table></figure><p>这个例子中，将整型对象<code>22</code>和<code>33</code>分别分配给变量<code>dd</code>和<code>ee</code>，字符串对象<code>GitOPEN</code>分配给变量<code>ff</code>。</p><h3 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h3><ul><li>Number（数字）── 不可变数据</li><li>String（字符串）──不可变数据</li><li>List（列表）──可变数据</li><li>Tuple（元组）──不可变数据</li><li>Set（集合）──可变数据</li><li>Dictionary（字典）──可变数据</li></ul><h4 id="Number（数字）"><a href="#Number（数字）" class="headerlink" title="Number（数字）"></a>Number（数字）</h4><p>Python3中的支持<code>int、float、bool、complex（复数）</code>，在Python3中，只有一种整数类型<code>int</code>，表示为长整型，没有python2中的Long。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">3</span>]: aa = <span class="number">1111</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: isinstance(aa, int)</span><br><span class="line">Out[<span class="number">4</span>]: <span class="keyword">True</span></span><br></pre></td></tr></table></figure><h5 id="数值运算"><a href="#数值运算" class="headerlink" title="数值运算"></a>数值运算</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加法运算</span></span><br><span class="line">In [<span class="number">5</span>]: <span class="number">11</span> + <span class="number">11</span></span><br><span class="line">Out[<span class="number">5</span>]: <span class="number">22</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 减法</span></span><br><span class="line">In [<span class="number">6</span>]: <span class="number">5.21</span> - <span class="number">5.20</span></span><br><span class="line">Out[<span class="number">6</span>]: <span class="number">0.009999999999999787</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 减法</span></span><br><span class="line">In [<span class="number">10</span>]: <span class="number">4.3</span> - <span class="number">2</span></span><br><span class="line">Out[<span class="number">10</span>]: <span class="number">2.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取余</span></span><br><span class="line">In [<span class="number">11</span>]: <span class="number">18</span> % <span class="number">4</span></span><br><span class="line">Out[<span class="number">11</span>]: <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘方</span></span><br><span class="line">In [<span class="number">12</span>]: <span class="number">2</span> ** <span class="number">5</span></span><br><span class="line">Out[<span class="number">12</span>]: <span class="number">32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法，得到一个浮点数</span></span><br><span class="line">In [<span class="number">13</span>]: <span class="number">2</span> / <span class="number">4</span></span><br><span class="line">Out[<span class="number">13</span>]: <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法，得到一个整数</span></span><br><span class="line">In [<span class="number">14</span>]: <span class="number">2</span> // <span class="number">4</span></span><br><span class="line">Out[<span class="number">14</span>]: <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法，得到一个整数</span></span><br><span class="line">In [<span class="number">15</span>]: <span class="number">5</span> // <span class="number">2</span></span><br><span class="line">Out[<span class="number">15</span>]: <span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>注意：混合计算时，Python会把整型转换成为浮点数。</li></ul><h5 id="数值类型实例"><a href="#数值类型实例" class="headerlink" title="数值类型实例"></a>数值类型实例</h5><table><thead><tr><th>int</th><th>float</th><th>complex</th></tr></thead><tbody><tr><td>10</td><td>0.0</td><td>3.14j</td></tr><tr><td>100</td><td>15.20</td><td>45.j</td></tr><tr><td>-786</td><td>-21.9</td><td>9.322e-36j</td></tr><tr><td>080</td><td>32.3e+18</td><td>.876j</td></tr><tr><td>-0490</td><td>-90.</td><td>-.6545+0J</td></tr><tr><td>-0x260</td><td>-32.54e100</td><td>3e+26J</td></tr><tr><td>0x69</td><td>70.2E-12</td><td>4.53e-7j</td></tr></tbody></table><h5 id="浮点数误差"><a href="#浮点数误差" class="headerlink" title="浮点数误差"></a>浮点数误差</h5><p>先看一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">24</span>]: x = <span class="number">4.20</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">25</span>]: y = <span class="number">2.10</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">26</span>]: x + y</span><br><span class="line">Out[<span class="number">26</span>]: <span class="number">6.300000000000001</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">27</span>]: (x + y) == <span class="number">6.3</span></span><br><span class="line">Out[<span class="number">27</span>]: <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">28</span>]: x = <span class="number">1.2</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">29</span>]: y = <span class="number">2.3</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">30</span>]: x + y</span><br><span class="line">Out[<span class="number">30</span>]: <span class="number">3.5</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">31</span>]: (x + y) == <span class="number">3.5</span></span><br><span class="line">Out[<span class="number">31</span>]: <span class="keyword">True</span></span><br></pre></td></tr></table></figure><p>产生上述问题的原因，就来自于浮点数计算精度问题。</p><p>浮点数在计算机中表达为二进制（binary）小数，</p><p>例如，<code>0.125</code>是<code>1/10 + 2/100 + 5/100</code>的值；</p><p>又例如<code>0.001</code>是<code>0/2 + 0/4 + 1/8</code>的值。</p><p>这两个数值相同。唯一的实质区别是第一个写为十进制小数记法，第二个是二进制。</p><p><strong>问题就来了，大多数十进制小数不能完全用二进制小数来表示，导致的结果是，一般情况下，你输入的十进制浮点数，由实际存储在计算机中的近似的二进制浮点数表示。</strong></p><p>这个问题可以参见文档<a href="http://www.pythondoc.com/pythontutorial3/floatingpoint.html" target="_blank" rel="noopener">《浮点数算法：争议和限制》</a>进行详细了解。</p><h5 id="浮点数误差的解决方法"><a href="#浮点数误差的解决方法" class="headerlink" title="浮点数误差的解决方法"></a>浮点数误差的解决方法</h5><p>Python中的decimal模块可以解决浮点数误差的烦恼。这个模块可以通过整数、字符串、或者构建decimal.Decimal对象，来解决这个问题。如果是浮点数，因为浮点数本身存在误差，在计算前需要先将浮点数转化为字符串。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">32</span>]: <span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"></span><br><span class="line">In [<span class="number">33</span>]: <span class="keyword">from</span> decimal <span class="keyword">import</span> getcontext</span><br><span class="line"></span><br><span class="line">In [<span class="number">34</span>]: Decimal(<span class="string">'4.20'</span>) + Decimal(<span class="string">'2.10'</span>)</span><br><span class="line">Out[<span class="number">34</span>]: Decimal(<span class="string">'6.30'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">35</span>]: x = <span class="number">4.20</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">36</span>]: y = <span class="number">2.10</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">37</span>]: z = Decimal(str(x)) + Decimal(str(y))</span><br><span class="line"></span><br><span class="line">In [<span class="number">38</span>]: z</span><br><span class="line">Out[<span class="number">38</span>]: Decimal(<span class="string">'6.3'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置精度</span></span><br><span class="line">In [<span class="number">39</span>]: getcontext().prec = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">40</span>]: Decimal(<span class="string">'1.00'</span>) / Decimal(<span class="string">'3.0'</span>)</span><br><span class="line">Out[<span class="number">40</span>]: Decimal(<span class="string">'0.3333'</span>)</span><br></pre></td></tr></table></figure><ul><li>注意，精度提升的同时，会伴随性能的损失。在对数据要求特别高的场景下，例如财务计算等，性能的损失是值得的。</li></ul><h4 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h4><p>在Python中，字符串用单引号<code>&#39;</code>或者双引号<code>&quot;</code>括起来，如果遇到特殊字符，可以用反斜杠<code>\</code>进行转义。</p><p>字符串截取的用法示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">41</span>]: aa = <span class="string">'我爱学习'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">42</span>]: bb = <span class="string">'我是张学友的粉丝'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">44</span>]: aa[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">Out[<span class="number">44</span>]: <span class="string">'爱学'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">45</span>]: aa[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">Out[<span class="number">45</span>]: <span class="string">'爱学习'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">47</span>]: bb[<span class="number">-6</span>:<span class="number">-1</span>]</span><br><span class="line">Out[<span class="number">47</span>]: <span class="string">'张学友的粉'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">48</span>]: bb[<span class="number">-7</span>:<span class="number">-1</span>]</span><br><span class="line">Out[<span class="number">48</span>]: <span class="string">'是张学友的粉'</span></span><br></pre></td></tr></table></figure><p>加号<code>+</code>是字符串的连接符，星号<code>*</code>表示复制当前字符串多少次：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">50</span>]: aa + <span class="string">","</span> + bb</span><br><span class="line">Out[<span class="number">50</span>]: <span class="string">'我爱学习,我是张学友的粉丝'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">51</span>]: (aa + <span class="string">","</span> + bb + <span class="string">"。"</span>) * <span class="number">10</span></span><br><span class="line">Out[<span class="number">51</span>]: <span class="string">'我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。我爱学习,我是张学友的粉丝。'</span></span><br></pre></td></tr></table></figure><p>我们有这样一个字符串<code>GitOPEN\niubi</code>，看一下下面的操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">53</span>]: cc = <span class="string">"GitOPEN\niubi"</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">54</span>]: print(cc)</span><br><span class="line">GitOPEN</span><br><span class="line">iubi</span><br><span class="line"></span><br><span class="line">In [<span class="number">55</span>]: dd = <span class="string">r"GitOPEN\niubi"</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">56</span>]: print(dd)</span><br><span class="line">GitOPEN\niubi</span><br></pre></td></tr></table></figure><p>如果字符串本身有特殊字符，但是想让字符串中的特殊字符不转义，那么在字符串前面加上<code>r</code>，表示按照原始字符串进行输出。</p><h4 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h4><p>List可以说是Python中使用最频繁的数据类型。列表中的元素类型可以不相同，它支持数字，字符串甚至可以列表嵌套。</p><p>下面是列表，列表截取操作，列表排序操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">57</span>]: a_list = [<span class="string">'aa'</span>, <span class="string">'bb'</span>, <span class="string">'cc'</span>, <span class="string">'dd'</span>, <span class="string">'ee'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">58</span>]: b_list = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33.22</span>, <span class="number">44.05</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">59</span>]: print(a_list[<span class="number">1</span>])</span><br><span class="line">bb</span><br><span class="line"></span><br><span class="line">In [<span class="number">60</span>]: print(a_list[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">[<span class="string">'bb'</span>, <span class="string">'cc'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">61</span>]: print(a_list[<span class="number">2</span>:])</span><br><span class="line">[<span class="string">'cc'</span>, <span class="string">'dd'</span>, <span class="string">'ee'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">62</span>]: print(b_list)</span><br><span class="line">[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33.22</span>, <span class="number">44.05</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># reverse = False表示升序，这是默认值</span></span><br><span class="line">In [<span class="number">64</span>]: b_list.sort(reverse=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">65</span>]: print(b_list)</span><br><span class="line">[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33.22</span>, <span class="number">44.05</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># reverse = True表示降序</span></span><br><span class="line">In [<span class="number">66</span>]: b_list.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">67</span>]: print(b_list)</span><br><span class="line">[<span class="number">44.05</span>, <span class="number">33.22</span>, <span class="number">22</span>, <span class="number">11</span>]</span><br></pre></td></tr></table></figure><h4 id="Tuple（元组）"><a href="#Tuple（元组）" class="headerlink" title="Tuple（元组）"></a>Tuple（元组）</h4><p>Python中，元组是用<code>()</code>括起来的，元素不能修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a_tup = (<span class="string">'锄禾'</span>,<span class="string">'日'</span>,<span class="string">'当午'</span>)</span><br><span class="line">b_tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">c_tup = <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建空元组</span></span><br><span class="line">d_tup = ()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 元组中只有一个元素时，需要在元素后面添加逗号</span></span><br><span class="line">e_tup = (<span class="number">50</span>,)</span><br><span class="line"></span><br><span class="line">f_tup = a_tup + b_tup</span><br><span class="line"></span><br><span class="line">print(f_tup)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元组</span></span><br><span class="line"><span class="keyword">del</span> f_tup</span><br><span class="line">print(f_tup)</span><br></pre></td></tr></table></figure><h5 id="元组内置函数"><a href="#元组内置函数" class="headerlink" title="元组内置函数"></a>元组内置函数</h5><p>Python元组包含了以下内置函数：</p><table><thead><tr><th>序号</th><th>方法及描述</th></tr></thead><tbody><tr><td>1</td><td><code>cmp(tuple1, tuple2)</code>比较两个元组元素。</td></tr><tr><td>2</td><td><code>len(tuple)</code> 计算元组元素个数。</td></tr><tr><td>3</td><td><code>max(tuple)</code> 返回元组中元素最大值。</td></tr><tr><td>4</td><td><code>min(tuple)</code>返回元组中元素最小值。</td></tr><tr><td>5</td><td><code>tuple(seq)</code> 将列表转换为元组。</td></tr></tbody></table><h4 id="Dictionary（字典）"><a href="#Dictionary（字典）" class="headerlink" title="Dictionary（字典）"></a>Dictionary（字典）</h4><p>Python中的字典另一种可变容器模型，可以存储任意类型对象。</p><p>键值对的键和值用<code>:</code>冒号分割，每个键值对用<code>,</code>逗号分割；键是唯一的，值不需要唯一，如果键重复，那么最后一个键值对会覆盖前面的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">69</span>]: a_dict = &#123;<span class="string">'a'</span>:<span class="string">'1'</span>, <span class="string">'b'</span>:<span class="string">'2'</span>, <span class="string">'c'</span>:<span class="string">'3'</span>, <span class="string">'b'</span>:<span class="string">'4'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取值</span></span><br><span class="line">In [<span class="number">70</span>]: a_dict[<span class="string">'b'</span>]</span><br><span class="line">Out[<span class="number">70</span>]: <span class="string">'4'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">71</span>]: a_dict</span><br><span class="line">Out[<span class="number">71</span>]: &#123;<span class="string">'a'</span>: <span class="string">'1'</span>, <span class="string">'b'</span>: <span class="string">'4'</span>, <span class="string">'c'</span>: <span class="string">'3'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新值</span></span><br><span class="line">In [<span class="number">72</span>]: a_dict[<span class="string">'a'</span>] = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">73</span>]: a_dict</span><br><span class="line">Out[<span class="number">73</span>]: &#123;<span class="string">'a'</span>: <span class="number">11</span>, <span class="string">'b'</span>: <span class="string">'4'</span>, <span class="string">'c'</span>: <span class="string">'3'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除某个键对应的值</span></span><br><span class="line">In [<span class="number">74</span>]: <span class="keyword">del</span> a_dict[<span class="string">'c'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">75</span>]: a_dict</span><br><span class="line">Out[<span class="number">75</span>]: &#123;<span class="string">'a'</span>: <span class="number">11</span>, <span class="string">'b'</span>: <span class="string">'4'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空字典中所有的值</span></span><br><span class="line">In [<span class="number">76</span>]: a_dict.clear()</span><br><span class="line"></span><br><span class="line">In [<span class="number">77</span>]: a_dict</span><br><span class="line">Out[<span class="number">77</span>]: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字典</span></span><br><span class="line">In [<span class="number">78</span>]: <span class="keyword">del</span> a_dict</span><br><span class="line"></span><br><span class="line">In [<span class="number">79</span>]: a_dict</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">NameError                                 Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input<span class="number">-79</span><span class="number">-374973</span>eefd04&gt; <span class="keyword">in</span> &lt;module&gt;()</span><br><span class="line">----&gt; 1 a_dict</span><br><span class="line"></span><br><span class="line">NameError: name <span class="string">'a_dict'</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><h5 id="字典中键的特性"><a href="#字典中键的特性" class="headerlink" title="字典中键的特性"></a>字典中键的特性</h5><ul><li>同一个键不允许出现两次。创建时如果同一个键被赋值两次，后一个值会被记住。</li><li>键必须是不可变数据类型，可以用数字、字符串、元组，但是列表就不行。</li></ul><h5 id="字典的内置函数"><a href="#字典的内置函数" class="headerlink" title="字典的内置函数"></a>字典的内置函数</h5><table><thead><tr><th>序号</th><th>函数及描述</th></tr></thead><tbody><tr><td>1</td><td><code>cmp(dict1, dict2)</code>比较两个字典元素。</td></tr><tr><td>2</td><td><code>len(dict)</code>计算字典元素个数，即键的总数。</td></tr><tr><td>3</td><td><code>str(dict)</code>输出字典可打印的字符串表示。</td></tr><tr><td>4</td><td><code>type(variable)</code>返回输入的变量类型，如果变量是字典就返回字典类型。</td></tr></tbody></table><h5 id="字典的内置方法"><a href="#字典的内置方法" class="headerlink" title="字典的内置方法"></a>字典的内置方法</h5><table><thead><tr><th>序号</th><th>函数及描述</th></tr></thead><tbody><tr><td>1</td><td><code>dict.clear()</code>删除字典内所有元素</td></tr><tr><td>2</td><td><code>dict.copy()</code>返回一个字典的浅复制</td></tr><tr><td>3</td><td><code>dict.fromkeys(seq[, val])</code>创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值</td></tr><tr><td>4</td><td><code>dict.get(key, default=None)</code>返回指定键的值，如果值不在字典中返回default值</td></tr><tr><td>5</td><td><code>dict.has_key(key)</code> 如果键在字典dict里返回true，否则返回false</td></tr><tr><td>6</td><td><code>dict.items()</code>以列表返回可遍历的(键, 值) 元组数组</td></tr><tr><td>7</td><td><code>dict.keys()</code>以列表返回一个字典所有的键</td></tr><tr><td>8</td><td><code>dict.setdefault(key, default=None)</code>和<code>get()</code>类似, 但如果键不存在于字典中，将会添加键并将值设为default</td></tr><tr><td>9</td><td><code>dict.update(dict2)</code>把字典dict2的键/值对更新到dict里</td></tr><tr><td>10</td><td><code>dict.values()</code>以列表返回字典中的所有值</td></tr><tr><td>11</td><td><code>pop(key[,default])</code>删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</td></tr><tr><td>12</td><td><code>popitem()</code>随机返回并删除字典中的一对键和值。</td></tr></tbody></table><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>函数是组织好的，可重复使用的，用来实现单一或者相关功能的代码段。它能够提高应用的模块性，以及代码的重复利用率。我们已经使用过很多内建函数，比如<code>print()</code>，但是，也可以创建用户自定义函数。</p><h3 id="定义一个函数"><a href="#定义一个函数" class="headerlink" title="定义一个函数"></a>定义一个函数</h3><p>定义一个函数非常简单，它有几个规则：</p><ul><li>函数以<code>def</code>关键字开头，后接函数名称和<code>():</code></li><li>传入参数和自变量必须放在<code>()</code>内</li><li>函数代码块的内部第一行可以使用文档字符串进行函数说明</li><li><code>return [表达式]</code>用来结束函数，选择是否返回值给调用者，不带表达式的<code>return</code>相当于返回<code>None</code></li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayhello</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    这是一个说你好的函数</span></span><br><span class="line"><span class="string">    :param text: 打招呼内容</span></span><br><span class="line"><span class="string">    :return: 返回打招呼内容</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    result = <span class="string">"你好，"</span> + text</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">sayhelllo(<span class="string">'世界'</span>)</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>参数类型：</p><ul><li>必备参数</li><li>关键字参数</li><li>默认参数</li><li>不定长参数</li></ul><h4 id="必备参数"><a href="#必备参数" class="headerlink" title="必备参数"></a>必备参数</h4><p>必备参数必须以正确的顺序传入函数，调用的时候，数量必须和声明的一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printtext</span><span class="params">(text)</span>:</span></span><br><span class="line">    print(text)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">printtext(<span class="string">'你好，世界'</span>)</span><br><span class="line"><span class="comment"># 报错 TypeError: printtext() missing 1 required positional argument: 'text'</span></span><br><span class="line">printtext()</span><br></pre></td></tr></table></figure><h4 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h4><p>使用关键字参数允许函数在调用时参数的顺序与声明时不一致。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printmsg</span><span class="params">(text1, text2)</span>:</span></span><br><span class="line">    print(<span class="string">'text1是：'</span>, text1)</span><br><span class="line">    print(<span class="string">'text2是：'</span>, text2)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printmsg(text2=<span class="string">'世界'</span>, text1=<span class="string">'你好'</span>)</span><br></pre></td></tr></table></figure><h4 id="缺省参数"><a href="#缺省参数" class="headerlink" title="缺省参数"></a>缺省参数</h4><p>调用函数时，如果缺省参数的值没有传入，那么会使用默认值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printemployee</span><span class="params">(uid, name, salary=<span class="number">1000.00</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'Uid:'</span>, uid)</span><br><span class="line">    print(<span class="string">'Name:'</span>, name)</span><br><span class="line">    print(<span class="string">'Salary:'</span>, salary)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printemployee(<span class="string">'001'</span>, <span class="string">'张1'</span>, <span class="number">2000.00</span>)</span><br><span class="line">printemployee(<span class="string">'002'</span>, <span class="string">'张2'</span>)</span><br></pre></td></tr></table></figure><h4 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h4><p>有的时候，我们需要一个函数，它能够处理比当初声明时更多的参数，这些参数叫做不定长参数。加了星号（*）的变量名会存放所有未命名的变量参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span><span class="params">(arg1, *args)</span>:</span></span><br><span class="line">    print(<span class="string">'输出参数：'</span>)</span><br><span class="line">    print(<span class="string">'arg1:'</span>, arg1)</span><br><span class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> args:</span><br><span class="line">        print(<span class="string">'arg'</span>, arg)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printinfo(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">printinfo(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>创建匿名函数的方法是使用<code>lambda</code>。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="keyword">lambda</span> x, y: x + y</span><br><span class="line">print(sum(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><h3 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h3><p>定义在函数内部的是局部变量，拥有局部作用域；定义在函数外的变量是全局变量，拥有全局作用域。调用函数时，所有在函数内声明的变量名称都将被加入到作用域中。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">total = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    total = x + y</span><br><span class="line">    print(<span class="string">'函数内是局部变量：'</span>, total)</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line">sum(<span class="number">11</span>, <span class="number">22</span>)</span><br><span class="line">print(<span class="string">'函数外是全局变量：'</span>, total)</span><br></pre></td></tr></table></figure><h3 id="命名空间和作用域"><a href="#命名空间和作用域" class="headerlink" title="命名空间和作用域"></a>命名空间和作用域</h3><p>变量就是一个名字（标识符），它指向了对象。命名空间是一个字典，它的键是变量名称，对应的值是对象。</p><p>Python表达式可以访问局部命名空间和全局命名空间里面的变量。如果一个局部变量和一个全局变量重名，则局部变量会覆盖全局变量。</p><p>每一个函数都有自己的命名空间，类的方法的作用域的规则和一般的函数一样。Python会智能地猜测变量是局部还是全局的，并且假设在函数内赋值的变量都是局部的。</p><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><p>Python是一门面向对象语言，因此在Python中创建类和对象是轻而易举的事情。</p><h3 id="面向对象简介"><a href="#面向对象简介" class="headerlink" title="面向对象简介"></a>面向对象简介</h3><table><thead><tr><th>概念</th><th>含义</th></tr></thead><tbody><tr><td>类，Class</td><td>类是一个集合，描述了具有相同的属性和方法的对象</td></tr><tr><td>实例化</td><td>就是创建类的实例，类的具体对象</td></tr><tr><td>类变量</td><td>在实例化对象中，类变量是公用的；类变量定义在类内部并且在函数体之外</td></tr><tr><td>数据成员</td><td>类变量或者实例变量，用于处理类及其实例对象的相关的数据</td></tr><tr><td>继承</td><td>派生类继承基类（父类）的字段和方法。允许把一个派生类对象作为父类对象对待。</td></tr><tr><td>方法重写</td><td>子类从父类继承过来的方法，不能满足子类的需求，可以对其进行重写（override）</td></tr><tr><td>方法</td><td>类中的函数</td></tr><tr><td>对象</td><td>类的实例，包括两个数据成员（类变量、实例变量）和方法</td></tr><tr><td>实例变量</td><td>定义在方法中的变量</td></tr></tbody></table><h3 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h3><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span>:</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        Employee.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_count</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"员工总数为：&#123;&#125;"</span>.format(Employee.count))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_info</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Name:&#123;&#125;,Age:&#123;&#125;"</span>.format(self.name, self.age))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prt</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self)</span><br><span class="line">        print(self.__class__)</span><br></pre></td></tr></table></figure><ul><li><code>count</code>是一个类变量，它的值在这个类的实例对象之间共享。</li><li><code>__init__()</code>方法是一个特殊的方法，叫做类的<strong>构造函数或者初始化方法</strong>，当实例化该类的对象时就会调用这个方法</li><li><code>self</code>代表<strong>类的实例</strong>，在定义类的方法时是必须的，但在调用时不必传入相应的参数</li><li>类的方法与普通的函数只有一个区别，它必须有一个额外的第一个参数名称，按照习惯，它的名称是<code>self</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line">emp1 = Employee(<span class="string">'张三'</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># 对象调用方法</span></span><br><span class="line">emp1.print_count()</span><br><span class="line">emp1.show_info()</span><br><span class="line"></span><br><span class="line">emp2 = Employee(<span class="string">'张四'</span>, <span class="number">17</span>)</span><br><span class="line">emp2.print_count()</span><br><span class="line">emp2.show_info()</span><br><span class="line"></span><br><span class="line"><span class="comment"># self是类的实例，代表当前对象的地址；self.__class__指向类。</span></span><br><span class="line">emp1.prt()</span><br></pre></td></tr></table></figure><p>打印的结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">员工总数为：1</span><br><span class="line">Name:张三,Age:18</span><br><span class="line">员工总数为：2</span><br><span class="line">Name:张四,Age:17</span><br><span class="line">&lt;__main__.Employee object at 0x1120564a8&gt;</span><br><span class="line">&lt;class <span class="string">'__main__.Employee'</span>&gt;</span><br></pre></td></tr></table></figure><p>一些访问属性的函数：</p><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td><code>getattr(obj, name[,default])</code></td><td>访问对象的属性</td></tr><tr><td><code>hasattr(obj,name)</code></td><td>检查是否存在一个属性</td></tr><tr><td><code>setattr(obj,name,value)</code></td><td>设置一个属性，如果属性不存在，则创建一个新属性</td></tr><tr><td><code>delattr(obj,name)</code></td><td>删除属性</td></tr></tbody></table><h3 id="内置类属性"><a href="#内置类属性" class="headerlink" title="内置类属性"></a>内置类属性</h3><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td><code>__dict__</code></td><td>类的属性，包含一个字典，由类的数据属性组成</td></tr><tr><td><code>__doc__</code></td><td>类的文档字符串</td></tr><tr><td><code>__name__</code></td><td>类名</td></tr><tr><td><code>__module__</code></td><td>类所在的模块，全名为<code>__main__className</code></td></tr><tr><td><code>__bases__</code></td><td>类的所有父类构成元素，包含一个由所有父类组成的元组</td></tr></tbody></table><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Employee.__doc__:"</span>, Employee.__doc__)</span><br><span class="line">print(<span class="string">"Employee.__name__:"</span>, Employee.__name__)</span><br><span class="line">print(<span class="string">"Employee.__module__:"</span>, Employee.__module__)</span><br><span class="line">print(<span class="string">"Employee.__bases__:"</span>, Employee.__bases__)</span><br><span class="line">print(<span class="string">"Employee.__dict__:"</span>, Employee.__dict__)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Employee.__doc__: </span><br><span class="line">    员工基类</span><br><span class="line">    </span><br><span class="line">Employee.__name__: Employee</span><br><span class="line">Employee.__module__: __main__</span><br><span class="line">Employee.__bases__: (&lt;class <span class="string">'object'</span>&gt;,)</span><br><span class="line">Employee.__dict__: &#123;<span class="string">'__module__'</span>: <span class="string">'__main__'</span>, <span class="string">'__doc__'</span>: <span class="string">'\n    员工基类\n    '</span>, <span class="string">'count'</span>: 2, <span class="string">'__init__'</span>: &lt;<span class="keyword">function</span> Employee.__init__ at 0x105180268&gt;, <span class="string">'print_count'</span>: &lt;<span class="keyword">function</span> Employee.print_count at 0x1051802f0&gt;, <span class="string">'show_info'</span>: &lt;<span class="keyword">function</span> Employee.show_info at 0x105180378&gt;, <span class="string">'prt'</span>: &lt;<span class="keyword">function</span> Employee.prt at 0x105180400&gt;, <span class="string">'__dict__'</span>: &lt;attribute <span class="string">'__dict__'</span> of <span class="string">'Employee'</span> objects&gt;, <span class="string">'__weakref__'</span>: &lt;attribute <span class="string">'__weakref__'</span> of <span class="string">'Employee'</span> objects&gt;&#125;</span><br></pre></td></tr></table></figure><h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><p>代码重用是面向对象编程带来的主要好处之一，实现重用的方法之一就是<strong>继承机制</strong>。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span>:</span></span><br><span class="line">    parent_attr = <span class="number">123</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Parent构造函数"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parentMethod</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Parent方法"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setAttr</span><span class="params">(self, attr)</span>:</span></span><br><span class="line">        Parent.parent_attr = attr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getAttr</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"父类属性："</span>, Parent.parent_attr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span><span class="params">(Parent)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"子类构造函数"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">childMethod</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Child方法"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">child1 = Child()</span><br><span class="line">child1.childMethod()</span><br><span class="line">child1.parentMethod()</span><br><span class="line">child1.setAttr(<span class="number">456</span>)</span><br><span class="line">child1.getAttr()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">子类构造函数</span><br><span class="line">Child方法</span><br><span class="line">Parent方法</span><br><span class="line">父类属性： 456</span><br></pre></td></tr></table></figure><h4 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h4><p>如果父类的方法的功能不能满足你的需求，在子类中可以重写父类的方法。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myMethod</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"父类方法"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myMethod</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"子类方法"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b = B()</span><br><span class="line">b.myMethod()</span><br></pre></td></tr></table></figure><h2 id="time模块、datetime模块、json模块、csv模块使用方法"><a href="#time模块、datetime模块、json模块、csv模块使用方法" class="headerlink" title="time模块、datetime模块、json模块、csv模块使用方法"></a>time模块、datetime模块、json模块、csv模块使用方法</h2><h3 id="time-模块"><a href="#time-模块" class="headerlink" title="time 模块"></a>time 模块</h3><p>在编写Python程序时，转换日期时间是一个常见的功能。时间间隔是以秒为单位的浮点小数。每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示。</p><p>获取当前时间戳：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">ticks = time.time()</span><br><span class="line">print(<span class="string">"当前的时间戳为：&#123;&#125;"</span>.format(ticks))</span><br></pre></td></tr></table></figure><h4 id="时间元组"><a href="#时间元组" class="headerlink" title="时间元组"></a>时间元组</h4><p>struct_time元组，具有如下属性：</p><table><thead><tr><th>序号</th><th>字段</th><th>属性</th><th>值</th></tr></thead><tbody><tr><td>0</td><td>4位年</td><td>tm_year</td><td>2018</td></tr><tr><td>1</td><td>月</td><td>tm_mon</td><td>1到12</td></tr><tr><td>2</td><td>日</td><td>tm_mday</td><td>1到31</td></tr><tr><td>3</td><td>小时</td><td>tm_hour</td><td>0到23</td></tr><tr><td>4</td><td>分钟</td><td>tm_min</td><td>0到59</td></tr><tr><td>5</td><td>秒</td><td>tm_sec</td><td>0到61（60或61是润秒）</td></tr><tr><td>6</td><td>一周的第几日</td><td>tm_wday</td><td>0到6（0是周一）</td></tr><tr><td>7</td><td>一年的第几日</td><td>tm_yday</td><td>1到366</td></tr><tr><td>8</td><td>夏令时</td><td>tm_isdst</td><td>-1, 0, 1, -1是决定是否为夏令时的旗帜</td></tr></tbody></table><h4 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">localtime = time.localtime(time.time())</span><br><span class="line">print(<span class="string">"当前本地时间为：&#123;&#125;"</span>.format(localtime))</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当前本地时间为：time.struct_time(tm_year=2018, tm_mon=8, tm_mday=13, tm_hour=21, tm_min=49, tm_sec=53, tm_wday=0, tm_yday=225, tm_isdst=0)</span><br></pre></td></tr></table></figure><h4 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">localtime = time.asctime(time.localtime(time.time()))</span><br><span class="line">print(<span class="string">"格式化后的时间为：&#123;&#125;"</span>.format(localtime))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式化后的时间为：Mon Aug 13 21:52:20 2018</span><br></pre></td></tr></table></figure><h4 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成2018-08-13 21:55:46形式</span></span><br><span class="line">print(time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成Mon Aug 13 21:52:20 2018形式</span></span><br><span class="line">print(time.strftime(<span class="string">"%a %b %d %H:%M:%S %Y"</span>, time.localtime()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将格式字符串转换为时间戳</span></span><br><span class="line">a = <span class="string">"Mon Aug 13 21:52:20 2018"</span></span><br><span class="line">print(time.mktime(time.strptime(a, <span class="string">"%a %b %d %H:%M:%S %Y"</span>)))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2018</span><span class="number">-08</span><span class="number">-13</span> <span class="number">21</span>:<span class="number">56</span>:<span class="number">49</span></span><br><span class="line">Mon Aug <span class="number">13</span> <span class="number">21</span>:<span class="number">56</span>:<span class="number">49</span> <span class="number">2018</span></span><br><span class="line"><span class="number">1534168340.0</span></span><br></pre></td></tr></table></figure><h3 id="datetime模块"><a href="#datetime模块" class="headerlink" title="datetime模块"></a>datetime模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">i = datetime.datetime.now()</span><br><span class="line">print(<span class="string">"当前的日期和时间是 %s"</span> % i)</span><br><span class="line">print(<span class="string">"ISO格式的日期和时间是 %s"</span> % i.isoformat())</span><br><span class="line">print(<span class="string">"当前的年份是 %s"</span> % i.year)</span><br><span class="line">print(<span class="string">"当前的月份是 %s"</span> % i.month)</span><br><span class="line">print(<span class="string">"当前的日期是  %s"</span> % i.day)</span><br><span class="line">print(<span class="string">"dd/mm/yyyy 格式是  %s/%s/%s"</span> % (i.day, i.month, i.year))</span><br><span class="line">print(<span class="string">"当前小时是 %s"</span> % i.hour)</span><br><span class="line">print(<span class="string">"当前分钟是 %s"</span> % i.minute)</span><br><span class="line">print(<span class="string">"当前秒是  %s"</span> % i.second)</span><br></pre></td></tr></table></figure><h3 id="json模块"><a href="#json模块" class="headerlink" title="json模块"></a>json模块</h3><p>在使用Python进行数据处理的过程中，我们经常和json数据打交道。</p><p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。</p><p>json模块的两个常用函数为：</p><table><thead><tr><th>函数名</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td><code>json.dumps</code></td><td style="text-align:left">将Python对象编码成JSON字符串</td></tr><tr><td><code>json.loads</code></td><td style="text-align:left">将已编码的JSON字符串解码为Python对象</td></tr></tbody></table><h4 id="json-dumps"><a href="#json-dumps" class="headerlink" title="json.dumps"></a>json.dumps</h4><p>示例：</p><p>将Python对象（数组）编码为JSON格式数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">data = [&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'d'</span>: <span class="number">4</span>, <span class="string">'e'</span>: <span class="number">5</span>&#125;]</span><br><span class="line"></span><br><span class="line">json_str = json.dumps(data)</span><br><span class="line">print(json_str)</span><br><span class="line">print(type(json_str))</span><br></pre></td></tr></table></figure><p>格式化输出JSON数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;<span class="string">'name'</span>: <span class="string">'GitOPEN'</span>, <span class="string">'salary'</span>: <span class="number">70000.01</span>&#125;</span><br><span class="line">json_str = json.dumps(data, sort_keys=<span class="keyword">True</span>, indent=<span class="number">4</span>, separators=(<span class="string">', '</span>, <span class="string">': '</span>))</span><br><span class="line">print(json_str)</span><br></pre></td></tr></table></figure><p>python 原始类型向 json 类型的转化对照表：</p><table><thead><tr><th>Python</th><th>JSON</th></tr></thead><tbody><tr><td>dict</td><td>object</td></tr><tr><td>list, tuple</td><td>array</td></tr><tr><td>str, unicode</td><td>string</td></tr><tr><td>int, long, float</td><td>number</td></tr><tr><td>True</td><td>true</td></tr><tr><td>False</td><td>false</td></tr><tr><td>None</td><td>null</td></tr></tbody></table><h4 id="json-loads"><a href="#json-loads" class="headerlink" title="json.loads"></a>json.loads</h4><p>用于解码JSON数据，返回Python字段的数据类型。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">json_str = <span class="string">'&#123;"a":1,"b":2,"c":3,"d":4,"e":5&#125;'</span></span><br><span class="line"></span><br><span class="line">text = json.loads(json_str)</span><br><span class="line">print(type(text))</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><h3 id="csv模块"><a href="#csv模块" class="headerlink" title="csv模块"></a>csv模块</h3><p>csv库可以帮助我们解决大多数CSV格式的数据读写问题。</p><h4 id="读数据"><a href="#读数据" class="headerlink" title="读数据"></a>读数据</h4><p>准备一个csv格式的文件，命名为<code>data.csv</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Uid,Name,Age,Score</span><br><span class="line">1000,&quot;张1&quot;,18,99.99</span><br><span class="line">1001,&quot;张2&quot;,19,89.99</span><br><span class="line">1002,&quot;张3&quot;,20,79.99</span><br><span class="line">1003,&quot;张4&quot;,21,69.99</span><br></pre></td></tr></table></figure><p>示例：将这个数据文件读取为一个元组序列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data.csv'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.reader(f)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> f_csv:</span><br><span class="line">        print(row)</span><br></pre></td></tr></table></figure><blockquote><p>注意：data.csv和py文件的编码格式应当统一为utf-8。</p></blockquote><p>输出为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'Uid'</span>, <span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Score'</span>]</span><br><span class="line">[<span class="string">'1000'</span>, <span class="string">'张1'</span>, <span class="string">'18'</span>, <span class="string">'99.99'</span>]</span><br><span class="line">[<span class="string">'1001'</span>, <span class="string">'张2'</span>, <span class="string">'19'</span>, <span class="string">'89.99'</span>]</span><br><span class="line">[<span class="string">'1002'</span>, <span class="string">'张3'</span>, <span class="string">'20'</span>, <span class="string">'79.99'</span>]</span><br><span class="line">[<span class="string">'1003'</span>, <span class="string">'张4'</span>, <span class="string">'21'</span>, <span class="string">'69.99'</span>]</span><br></pre></td></tr></table></figure><p>示例：将这个数据读取为一个字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data.csv'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.DictReader(f)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> f_csv:</span><br><span class="line">        print(type(row))</span><br><span class="line">        print(row)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'collections.OrderedDict'</span>&gt;</span><br><span class="line">OrderedDict([(<span class="string">'Uid'</span>, <span class="string">'1000'</span>), (<span class="string">'Name'</span>, <span class="string">'张1'</span>), (<span class="string">'Age'</span>, <span class="string">'18'</span>), (<span class="string">'Score'</span>, <span class="string">'99.99'</span>)])</span><br><span class="line">&lt;class <span class="string">'collections.OrderedDict'</span>&gt;</span><br><span class="line">OrderedDict([(<span class="string">'Uid'</span>, <span class="string">'1001'</span>), (<span class="string">'Name'</span>, <span class="string">'张2'</span>), (<span class="string">'Age'</span>, <span class="string">'19'</span>), (<span class="string">'Score'</span>, <span class="string">'89.99'</span>)])</span><br><span class="line">&lt;class <span class="string">'collections.OrderedDict'</span>&gt;</span><br><span class="line">OrderedDict([(<span class="string">'Uid'</span>, <span class="string">'1002'</span>), (<span class="string">'Name'</span>, <span class="string">'张3'</span>), (<span class="string">'Age'</span>, <span class="string">'20'</span>), (<span class="string">'Score'</span>, <span class="string">'79.99'</span>)])</span><br><span class="line">&lt;class <span class="string">'collections.OrderedDict'</span>&gt;</span><br><span class="line">OrderedDict([(<span class="string">'Uid'</span>, <span class="string">'1003'</span>), (<span class="string">'Name'</span>, <span class="string">'张4'</span>), (<span class="string">'Age'</span>, <span class="string">'21'</span>), (<span class="string">'Score'</span>, <span class="string">'69.99'</span>)])</span><br></pre></td></tr></table></figure><h4 id="写数据"><a href="#写数据" class="headerlink" title="写数据"></a>写数据</h4><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">headers = [<span class="string">'Uid'</span>, <span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Score'</span>]</span><br><span class="line">rows = [</span><br><span class="line">    (<span class="string">'1000'</span>, <span class="string">'张1'</span>, <span class="string">'18'</span>, <span class="string">'99.99'</span>),</span><br><span class="line">    (<span class="string">'1001'</span>, <span class="string">'张2'</span>, <span class="string">'19'</span>, <span class="string">'89.99'</span>),</span><br><span class="line">    (<span class="string">'1002'</span>, <span class="string">'张3'</span>, <span class="string">'20'</span>, <span class="string">'79.99'</span>),</span><br><span class="line">    (<span class="string">'1003'</span>, <span class="string">'张4'</span>, <span class="string">'21'</span>, <span class="string">'69.99'</span>)</span><br><span class="line">]</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data1.csv'</span>, <span class="string">'w'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.writer(f)</span><br><span class="line">    f_csv.writerow(headers)</span><br><span class="line">    f_csv.writerows(rows)</span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>newline=&#39;&#39;</code>这个参数，你会发现，如果不加，生成的csv文件中每一行下面总是会多一行空白行。</p></blockquote><p>示例：</p><p>写入字典序列数据到csv文件中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">headers = [<span class="string">'Uid'</span>, <span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Score'</span>]</span><br><span class="line">rows = [</span><br><span class="line">    &#123;<span class="string">'Uid'</span>: <span class="number">1000</span>, <span class="string">'Name'</span>: <span class="string">'张1'</span>, <span class="string">'Age'</span>: <span class="number">18</span>, <span class="string">'Score'</span>: <span class="number">99.99</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'Uid'</span>: <span class="number">1001</span>, <span class="string">'Name'</span>: <span class="string">'张2'</span>, <span class="string">'Age'</span>: <span class="number">19</span>, <span class="string">'Score'</span>: <span class="number">89.99</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'Uid'</span>: <span class="number">1002</span>, <span class="string">'Name'</span>: <span class="string">'张3'</span>, <span class="string">'Age'</span>: <span class="number">20</span>, <span class="string">'Score'</span>: <span class="number">79.99</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'Uid'</span>: <span class="number">1003</span>, <span class="string">'Name'</span>: <span class="string">'张4'</span>, <span class="string">'Age'</span>: <span class="number">21</span>, <span class="string">'Score'</span>: <span class="number">69.99</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data2.csv'</span>, <span class="string">'w'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.DictWriter(f, headers)</span><br><span class="line">    f_csv.writeheader()</span><br><span class="line">    f_csv.writerows(rows)</span><br></pre></td></tr></table></figure><h1 id="实战──搜索引擎首页实战"><a href="#实战──搜索引擎首页实战" class="headerlink" title="实战──搜索引擎首页实战"></a>实战──搜索引擎首页实战</h1><p>写好的<strong>GitOPEN搜索</strong>首页如图所示：</p><p><img src="/img/crawler/lessons/lesson01_introduce_19.png" alt=""></p><p>整个项目的结构如图所示，项目源码位置<code>CrawlerLessons/codes/lesson01/SearchDemo</code>：</p><p><img src="/img/crawler/lessons/lesson01_introduce_20.png" alt=""></p><p><code>index.html</code>源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>GitOPEN搜索，最贴心搜索<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"index.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"links"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://news.baidu.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.hao123.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>hao123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://map.baidu.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>地图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://v.baidu.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"table.html"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>员工<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"list.html"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/logo.png"</span> <span class="attr">alt</span>=<span class="string">"GitOPEN搜索，最贴心搜索"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.so.com/s?"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"input_search"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"q"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn_search"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"搜索一下"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">        Powered by GitOPEN ® Hosted by <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.vultr.com/?ref=7147564"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Vultr<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>index.css</code>源码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#root</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: fit-content;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-id">#links</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-id">#links</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-id">#btn_search</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">34px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3D5984</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-id">#input_search</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">34px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#3D5984</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-style</span>: oblique;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>list.html</code>源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表示例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>无序列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>有序列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>张4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>table.html</code>源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工信息<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        table, th, td &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-id">#2d78f4</span> <span class="selector-tag">dashed</span>;</span></span><br><span class="line"><span class="undefined">            border-collapse: collapse;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        table &#123;</span></span><br><span class="line"><span class="undefined">            width: auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        th, td &#123;</span></span><br><span class="line"><span class="undefined">            width: 90px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        th &#123;</span></span><br><span class="line"><span class="undefined">            color: crimson;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#total</span> &#123;</span></span><br><span class="line"><span class="undefined">            color: blueviolet;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>月薪<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>0001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>张1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>20000.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>0002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>张2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>10000.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>0003<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>张3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>8000.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>总计<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"total"</span>&gt;</span>38000.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="实战──简易学生管理系统"><a href="#实战──简易学生管理系统" class="headerlink" title="实战──简易学生管理系统"></a>实战──简易学生管理系统</h1><p>这是一个玩具代码项目，用来练习刚刚学会的Python基础知识。</p><p>这个实战例子我们不再做代码演示，请大家自行运行代码，找出代码的不足之处，写出自己的《简易学生管理系统》，要求具有的功能如下图所示：</p><p><img src="/img/crawler/lessons/lesson01_introduce_21.png" alt=""></p><p>参考代码位置：<code>CrawlerLessons/codes/lesson01/StudentSystem</code>。</p><h1 id="参考资料推荐"><a href="#参考资料推荐" class="headerlink" title="参考资料推荐"></a>参考资料推荐</h1><ul><li><p><a href="http://www.w3school.com.cn/index.html" target="_blank" rel="noopener">《w3school在线教程》</a></p></li><li><p><a href="http://www.runoob.com/html/html-tutorial.html" target="_blank" rel="noopener">《菜鸟教程｜HTML教程》</a></p></li><li><p><a href="http://python3-cookbook-personal.readthedocs.io/zh_CN/latest/index.html#python-cookbook-3rd-edition-documentation" target="_blank" rel="noopener">《Python Cookbook 3rd Edition Documentation》</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程所有源码下载链接：&lt;a href=&quot;https://share.weiyun.com/5xmFeUO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://share.weiyun.com/5xmFeUO&lt;/a&gt; 密
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://blog.sunjiajia.com/tags/Crawler/"/>
    
      <category term="Spider" scheme="https://blog.sunjiajia.com/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>VPS上部署maven私服</title>
    <link href="https://blog.sunjiajia.com/2018/04/01/vps-install-nexus-maven/"/>
    <id>https://blog.sunjiajia.com/2018/04/01/vps-install-nexus-maven/</id>
    <published>2018-04-01T12:11:11.000Z</published>
    <updated>2018-09-14T07:18:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>“明明我挂了梯子，可gradle build还是卡住不动，过会儿就干脆error了”，小明如是说。Android Studio的gradle下载依赖过慢是广大Android程序员的<code>痛点</code>。于是有很多公司都构建了内网的<code>Nexus Repository Manager OSS</code>私服，来解决<code>痛点</code>，缩短该司程序员等待的闲暇时间，提高压榨的效率。但是，对于各位码神来说，离开公司还是要做独立项目的，于是<code>痛点</code>又回来。将maven部署在自己的VPS，彻底解决gradle各种慢，供自己享用，随时随地无痛码起来，不枉码神的名号。</p><h1 id="其实过程很简单"><a href="#其实过程很简单" class="headerlink" title="其实过程很简单"></a>其实过程很简单</h1><ol><li><p>首先，有自己的vps，最好在境外，哦不，是必须在境外（没有篱笆的地方），例如，万恶的米国🇺🇸。<a href="https://www.vultr.com/?ref=7147564" target="_blank" rel="noopener">我的vps用的是vultr，相信各位都有所耳闻，于是，我恬不知耻地邀请你点击我的连接注册购买，这样，你可以得到10💵的优惠。相信我，如果你能在vultr上开到<code>144</code>开头的ip，速度和稳定性一定不会让你失望</a>。</p></li><li><p>其次，就是安装过程，听我娓娓道来。如果你是新手，请自行Google一下<code>如何用ssh连接到VPS</code>，然后继续。</p></li><li><p>配置jdk环境：</p><p> 下载jdk</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-cookies --no-check-certificate --header <span class="string">"Cookie: oraclelicense=accept-securebackup-cookie"</span> http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p> 解压jdk</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u162-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p> 创建<code>/usr/local/java</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/java</span><br></pre></td></tr></table></figure><p> 移动jdk到创建的文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv jdk1.8.0_162 /usr/<span class="built_in">local</span>/java</span><br></pre></td></tr></table></figure><p> 设置环境变量，<code>vim /etc/profile</code>填入以下内容</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_162</span><br><span class="line">JRE_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_162/jre</span><br><span class="line">CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$JRE_HOME</span>/lib</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JRE_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure><p> 生效环境变量</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>安装<code>Nexus Repository Manager OSS</code></p><p>下载 Nexus Repository Manager OSS</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://sonatype-download.global.ssl.fastly.net/repository/repositoryManager/oss/nexus-2.14.8-01-bundle.tar.gz</span><br></pre></td></tr></table></figure><p>解压nexus</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget nexus-2.14.8-01-bundle.tar.gz</span><br></pre></td></tr></table></figure><p>创建<code>/usr/local/nexus</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/nexus</span><br></pre></td></tr></table></figure><p>移动nexus到创建的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv nexus-2.14.8-01 /usr/<span class="built_in">local</span>/nexus</span><br></pre></td></tr></table></figure><p>修改配置，先<code>cd /usr/local/nexus/nexus-2.14.8-01</code>，然后<code>vim bin/nexus</code>，在<code>NEXUS_HOME=&quot;..&quot;</code>上面一行，加入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUN_AS_USER=root</span><br></pre></td></tr></table></figure><p>启动nexus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/nexus start</span><br></pre></td></tr></table></figure><p>访问nexus，默认登录账户名<code>admin</code>，默认密码<code>admin123</code>。<code>xxx.xxx.xxx.xxx</code>是vps的ip地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx:8081/nexus/</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>设置<code>Nexus Repository Manager OSS</code></p><p>登录后的界面预览，进入用户管理</p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-1.jpg" alt="nexus-1"></p><p>重新设置admin密码</p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-2.jpg" alt="nexus-2"></p><p>禁用<code>匿名账户</code>，防止全网可用，节省vps流量和空间</p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-3.jpg" alt="nexus-3"></p><p>同样的方法，禁用<code>development</code>账户，或者修改密码<br>进入<code>Repositories</code>，这是我新建的三个<code>proxy  repositories</code>，设置方法往后看</p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-4.jpg" alt="nexus-4"></p><p>点击<code>Add...</code>，选择<code>Proxy Repositories</code>，按照图中的信息设置<code>google</code>repositories</p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-5.jpg" alt="nexus-5"></p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-6.jpg" alt="nexus-6"></p><p> 同样的方法，新建和设置<code>Jcenter</code>和<code>jitpack</code></p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-7.jpg" alt="nexus-7"></p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-8.jpg" alt="nexus-8"></p><p>新建一个<code>Repositories Group</code> ，并设置信息，如图所示</p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-9.jpg" alt="nexus-9"></p><p><img src="http://blog.sunjiajia.com/img/2018/nexus/nexus-10.jpg" alt="nexus-10"></p><p>到这里，设置就完毕了。</p></li><li><p>在Android Studio中使用的时候，<code>maven url</code>地址为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx:8081/nexus/content/groups/private/</span><br></pre></td></tr></table></figure><p>具体使用，在项目根目录下的<code>build.gradle</code>中添加maven url，格式如下</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">maven &#123;</span><br><span class="line">           url <span class="string">'http://xxx.xxx.xxx.xxx:8081/nexus/content/groups/private/'</span></span><br><span class="line">           credentials &#123;</span><br><span class="line">               username <span class="string">'admin'</span></span><br><span class="line">               password <span class="string">'admin123'</span></span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>整个<code>build.gradle</code>看起来是这个样子</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://xxx.xxx.xxx.xxx:8081/nexus/content/groups/private/'</span></span><br><span class="line">            credentials &#123;</span><br><span class="line">                <span class="comment">// 此处为nexus users中设置的有权限的账户，例如你的admin账户和密码</span></span><br><span class="line">                <span class="comment">// 修改为自己的账户和密码</span></span><br><span class="line">                username <span class="string">'admin'</span></span><br><span class="line">                password <span class="string">'admin123'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//       google()</span></span><br><span class="line"><span class="comment">//       jcenter()</span></span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:3.1.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://xxx.xxx.xxx.xxx:8081/nexus/content/groups/private/'</span></span><br><span class="line">            credentials &#123;</span><br><span class="line">                username <span class="string">'admin'</span></span><br><span class="line">                password <span class="string">'admin123'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        google()</span></span><br><span class="line"><span class="comment">//        jcenter()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(<span class="string">type:</span> Delete) &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，我们就解决掉<code>痛点</code>了。gradle在构建的时候，我们的nexus私服中没有的依赖，将由私服自动到仓库中去拉取，并保存到私服中，于是，我们的gradle下载依赖再也不会被蔷了，相当于给gradle部署了一个跳板。</p></li></ol><h1 id="再次邀请您"><a href="#再次邀请您" class="headerlink" title="再次邀请您"></a>再次邀请您</h1><p>在总结了长期使用VPS的经验后，我向您隆重推荐两家VPS服务商，vultr和Digital Ocean。这两家的服务非常友好，用我的连接注册并购买，可以得到💲10的免费使用额度。</p><blockquote><p> 使用经验：vultr建议，多开几个，截止本稿发布为止，144段比较流畅；DO家的建议用sfo或者new york，速度都很好。观看油管可4k，下载油管可跑满带宽，我100MB联通，能下载8MB/s。</p></blockquote><p>优惠链接：</p><p><a href="https://m.do.co/c/fd128f8ba9e8" target="_blank" rel="noopener">Digital Ocean优惠链接</a></p><p><a href="https://www.vultr.com/?ref=7147564" target="_blank" rel="noopener">vultr优惠10美元链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;“明明我挂了梯子，可gradle build还是卡住不动，过会儿就干脆error了”，小明如是说。Android Studio的gradle
      
    
    </summary>
    
      <category term="CentOS" scheme="https://blog.sunjiajia.com/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.sunjiajia.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>在自己的VPS上搭建Hexo博客</title>
    <link href="https://blog.sunjiajia.com/2017/08/16/vps-install-hexo-blog/"/>
    <id>https://blog.sunjiajia.com/2017/08/16/vps-install-hexo-blog/</id>
    <published>2017-08-16T03:11:11.000Z</published>
    <updated>2018-12-29T14:34:12.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在大家都玩推特、非死不可、印死、微博、微信的时代，博客已经被冷落了。但是作为一枚 coder，仍然需要一个安分守己的寸土，去记录自己学习的点点滴滴。从之前的新浪博客、网易博客，到专门用于技术分享的 CSDN，再到属于自己的 WordPress，最终进化到 Hexo 或者 Jelly 静态页面，博客已经从“繁杂缤纷”逐步简化到“大道至简”。之前我一直使用<code>github pages</code>加<code>hexo</code>的方式来写博客，但是 github pages 有一个最大的问题就是“拒绝搜索引擎和速度太慢”。因此，在自己的 VPS 上搭建 Hexo，可以so easy 的达到我们的随心所欲。</p><h2 id="选择-VPS"><a href="#选择-VPS" class="headerlink" title="选择 VPS"></a>选择 VPS</h2><p>之前我一直用 Linode 和 vultr 的日本节点，但是电信网络走 ntt，丢包实在是严重。因此，我选择了 vultr 的洛杉矶节点。实测ping 虽然不算快，平均250左右，但是不丢包还算稳定。我在它上面安装 LNMP 和 ss，一直很不错哟。</p><p>大家可以用下面的链接来购买 Vultr：</p><p><a href="http://www.vultr.com/?ref=7147564" target="_blank" rel="noopener">购买 Vultr链接</a></p><h2 id="更新-CentOS-的-git"><a href="#更新-CentOS-的-git" class="headerlink" title="更新 CentOS 的 git"></a>更新 CentOS 的 git</h2><p>我的 VPS 的系统是<code>CentOS 7 x64</code>，它自带的 git 版本太低，因此将它更新到最新的 git。</p><p>关于如何更新git，请参考我之前的博文：<br><a href="http://blog.sunjiajia.com/2017/07/10/virtualbox-centos-ssh-git-server/#配置和安装git服务器">配置和安装git服务器</a></p><h2 id="创建git用户组和添加用户"><a href="#创建git用户组和添加用户" class="headerlink" title="创建git用户组和添加用户"></a>创建git用户组和添加用户</h2><p>参考之前写的步骤：<br><a href="http://blog.sunjiajia.com/2017/07/10/virtualbox-centos-ssh-git-server/#创建git用户组和添加用户">创建git用户组和添加用户</a></p><h2 id="初始化用于存放博客静态文件的仓库"><a href="#初始化用于存放博客静态文件的仓库" class="headerlink" title="初始化用于存放博客静态文件的仓库"></a>初始化用于存放博客静态文件的仓库</h2><p>切换到 git 用户：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure></p><p>创建仓库：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare blog.sunjiajia.com.git</span><br></pre></td></tr></table></figure></p><h2 id="配置-hooks"><a href="#配置-hooks" class="headerlink" title="配置 hooks"></a>配置 hooks</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/blog.sunjiajia.com.git/hooks</span><br><span class="line">vi post-receive</span><br></pre></td></tr></table></figure><p>添加下面的代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash -l</span></span><br><span class="line">GIT_REPO=/home/git/blog.sunjiajia.com.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/blog.sunjiajia.com</span><br><span class="line">PUBLIC_WWW=/home/wwwroot/blog.sunjiajia.com</span><br><span class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></span><br></pre></td></tr></table></figure></p><blockquote><p><code>/home/wwwroot/blog.sunjiajia.com</code>是后面 lnmp 绑定的网站根目录。</p></blockquote><h2 id="切换到-root-用户"><a href="#切换到-root-用户" class="headerlink" title="切换到 root 用户"></a>切换到 root 用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure><h2 id="安装LNMP"><a href="#安装LNMP" class="headerlink" title="安装LNMP"></a>安装LNMP</h2><p>这里我们使用的是<a href="https://lnmp.org/install.html" target="_blank" rel="noopener">lnmp 一键安装包</a>，请参考该页面的安装步骤。</p><h2 id="添加-host-并绑定域名"><a href="#添加-host-并绑定域名" class="headerlink" title="添加 host 并绑定域名"></a>添加 host 并绑定域名</h2><p>安装 lnmp 之后，添加主机和绑定域名：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br></pre></td></tr></table></figure></p><p>安装提示绑定域名等操作即可。</p><h2 id="赋予-git-用户操作网站根目录的权限"><a href="#赋予-git-用户操作网站根目录的权限" class="headerlink" title="赋予 git 用户操作网站根目录的权限"></a>赋予 git 用户操作网站根目录的权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown git:git /home/wwwroot/blog.sunjiajia.com</span><br></pre></td></tr></table></figure><p>这样git 就可以操作网站根目录了。</p><h2 id="配置完毕"><a href="#配置完毕" class="headerlink" title="配置完毕"></a>配置完毕</h2><p>在 hexo 的 <code>_config.yml</code> 中配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  message: &quot;安卓猴写了新博文&quot;</span><br><span class="line">  repo: git@blog.sunjiajia.com:blog.sunjiajia.com.git</span><br></pre></td></tr></table></figure></p><p>生成hexo 静态文件并部署到 VPS：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>在配置好自己的 VPS+Hexo 博客以后，今后写博客就比较方便了，速度还可以，而且也有利于搜索引擎收录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在大家都玩推特、非死不可、印死、微博、微信的时代，博客已经被冷落了。但是作为一枚 coder，仍然需要一个安分守己的寸土，去记录自己学习的点
      
    
    </summary>
    
      <category term="CentOS" scheme="https://blog.sunjiajia.com/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://blog.sunjiajia.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox中CentOS配置git服务器</title>
    <link href="https://blog.sunjiajia.com/2017/07/10/virtualbox-centos-ssh-git-server/"/>
    <id>https://blog.sunjiajia.com/2017/07/10/virtualbox-centos-ssh-git-server/</id>
    <published>2017-07-10T04:11:52.000Z</published>
    <updated>2018-08-02T04:10:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在管理自己的代码的时候，我一直使用github。有的时候，私有项目不想公开，如果还要放到GitHub上，那就必须要花钱。解决这个问题的方法其实也很简单：在自己电脑上用虚拟机（VirtualBox）跑一个服务器（CentOS），配置好ssh和git server。正所谓：史上距离你最近的服务器。</p><h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><p>SSH是程序员链接服务器的居家必备之花露水啊！因此在VirtualBox中安装好CentOS（最小化安装）后，首要工作就是配置它的SSH。</p><h3 id="安装SSH"><a href="#安装SSH" class="headerlink" title="安装SSH"></a>安装SSH</h3><ol><li><p>更新系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure></li><li><p>安装openssh-server：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssh-server</span><br></pre></td></tr></table></figure></li><li><p>启动SSH服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sshd.service</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动ssh服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd.service</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h3><p>1.在客户端系统（我的是Mac）终端中生成密钥：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;gitopen@gmail.com&quot;</span><br></pre></td></tr></table></figure></p><blockquote><p>注意输入自己的邮箱</p></blockquote><p>2.会提示输入密码，但也可以留空（至少我是留空，输入密码太麻烦）。</p><p>3.完成后会在<code>.ssh</code>目录下生成<code>id_rsa</code>和<code>id_rsa.pub</code>两个密钥文件。</p><blockquote><p>注意保存这两个文件，哪怕你换了电脑，重做了系统，也要记得备份。</p></blockquote><p>4.查看VirtualBox中CentOS的ip地址：<br>运行CentOS，root用户登录后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure></p><p>如图所示：<img src="/img/2017_all/centos_ip.png" alt="CentOS ip地址"></p><p>5.在客户端中用ssh连接CentOS：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@xxx.xxx.xxx.xxx -p 22</span><br></pre></td></tr></table></figure></p><blockquote><p>xxx.xxx.xxx.xxx是CentOS的ip地址，此时还需要输入CentOS的root账户密码。此时之所用SSH登录，是为了方便拷贝密钥到authorized_keys。</p></blockquote><p>6.在VirtualBox中的<code>CentOS</code>服务器中进行配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//创建.ssh文件夹：</span><br><span class="line">mkdir .ssh</span><br><span class="line">//创建authorized_keys文件：</span><br><span class="line">touch .ssh/authorized_keys</span><br><span class="line">//修改authorized_keys的权限：</span><br><span class="line">chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>7.在客户端（Mac）中查看id_rsa.pub，并复制其中的密钥。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>8.在CentOS中打开authorized_keys，将刚才复制的密钥粘贴进去。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi .ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>9.配置完毕了。</p><h3 id="客户端（Mac）配置CentOS别名"><a href="#客户端（Mac）配置CentOS别名" class="headerlink" title="客户端（Mac）配置CentOS别名"></a>客户端（Mac）配置CentOS别名</h3><p>1.为VirtualBox中CentOS的网络设置端口转发<br>设置网络类型为NAT，如图所示：<br><img src="/img/2017_all/centos_nat.png" alt="CentOS NAT网络"></p><p>设置端口转发，如图所示：<br><img src="/img/2017_all/centos_port.png" alt="CentOS 端口转发"></p><blockquote><p>以上操作是为了在客户端（Mac）中设置别名登录的时候，将ip地址写为127.0.0.1，避免每次启动CentOS自动获取ip的变化，需要修改太麻烦。</p></blockquote><p>2.客户端（Mac）配置CentOS的别名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi .ssh/config</span><br></pre></td></tr></table></figure></p><p>输入以下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host cent</span><br><span class="line">HostName 127.0.0.1</span><br><span class="line">User root</span><br><span class="line">Port 4444</span><br></pre></td></tr></table></figure></p><blockquote><p>cent为别名，可以自由设置。</p></blockquote><h3 id="很方便的连接CentOS"><a href="#很方便的连接CentOS" class="headerlink" title="很方便的连接CentOS"></a>很方便的连接CentOS</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh cent</span><br></pre></td></tr></table></figure><h2 id="配置和安装git服务器"><a href="#配置和安装git服务器" class="headerlink" title="配置和安装git服务器"></a>配置和安装git服务器</h2><blockquote><p>所有操作可在客户机（Mac）上用SSH连接CentOS进行</p></blockquote><p>1.CentOS安装最新git，依赖库安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">yum install gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure></p><p>2.卸载低版本Git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove git</span><br></pre></td></tr></table></figure></p><p>3.创建git目录并进入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">mkdir git</span><br><span class="line">cd git</span><br></pre></td></tr></table></figure></p><p>4.下载最新版Git 2.13.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/git/git/archive/v2.13.2.tar.gz</span><br></pre></td></tr></table></figure></p><blockquote><p>截至目前最新版是2.13.2，可以到<a href="https://github.com/git/git/releases" target="_blank" rel="noopener">https://github.com/git/git/releases</a> 复制最新版链接进行下载。</p></blockquote><p>5.解压到git目录中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf v2.13.2.tar.gz</span><br></pre></td></tr></table></figure></p><p>6.安装v2.13.2版Git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.13.2</span><br><span class="line">make prefix=/usr/local/git all</span><br><span class="line">make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure></p><blockquote><p>编译过程稍微较长，耐心等待</p></blockquote><p>7.添加到环境变量中<br>打开/etc/profile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></p><p>加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/usr/local/git/bin:$PATH&quot;</span><br></pre></td></tr></table></figure></p><p>使配置立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>8.查看git版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></p><p>9.将最新版git设置为系统默认，避免克隆时出错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/git/bin/git-upload-pack /usr/bin/git-upload-pack </span><br><span class="line">ln -s /usr/local/git/bin/git-receive-pack /usr/bin/git-receive-pack</span><br></pre></td></tr></table></figure></p><p>10.最新版v2.13.2 Git安装成功</p><h2 id="创建git用户组和添加用户"><a href="#创建git用户组和添加用户" class="headerlink" title="创建git用户组和添加用户"></a>创建git用户组和添加用户</h2><p>1.添加用户组合用户，并设置密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd git</span><br><span class="line">useradd git -g git</span><br><span class="line">passwd git</span><br></pre></td></tr></table></figure></p><p>切换到git账户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -git</span><br></pre></td></tr></table></figure></p><p>2.证书登录，免密码使用git</p><blockquote><p>创建<code>.ssh</code>目录和<code>.ssh/authorized_keys</code>文件，将客户端（Mac）的id_rsa.pub中的密钥添加到<code>authorized_keys</code>文件中</p></blockquote><p>修改目录和文件的权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 .ssh</span><br><span class="line">chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><h2 id="初始化Git仓库"><a href="#初始化Git仓库" class="headerlink" title="初始化Git仓库"></a>初始化Git仓库</h2><p>1.我的所有仓库都放在gitrepos目录下，因此我创建了这个目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">mkdir gitrepos</span><br><span class="line">cd gitrepos</span><br></pre></td></tr></table></figure></p><p>2.初始化第一个test仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare test.git</span><br></pre></td></tr></table></figure></p><h2 id="本地客户端克隆仓库"><a href="#本地客户端克隆仓库" class="headerlink" title="本地客户端克隆仓库"></a>本地客户端克隆仓库</h2><p>在客户端（Mac）上克隆CentOS上的test.git库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@cent:/gitrepos/test.git</span><br></pre></td></tr></table></figure></p><blockquote><p><code>cent</code>是章节2.3中设置的CentOS的SSH连接别名，也可以换成相应的ip地址</p></blockquote><h2 id="禁止Shell登录"><a href="#禁止Shell登录" class="headerlink" title="禁止Shell登录"></a>禁止Shell登录</h2><blockquote><p>如果你是在远程的VPS服务器上配置git服务器，那么为了安全考虑，可以禁止Shell登录；如果像本文的初衷那样，是为了构建<code>史上距离你最近的服务器</code>，那么这一步就可以不做。</p></blockquote><p>切换到root账户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure></p><p>编辑<code>/etc/passwd</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/passwd</span><br></pre></td></tr></table></figure></p><p>将这一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:502:502::/home/git:/bin/bash</span><br></pre></td></tr></table></figure></p><p>替换为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:502:502::/home/git:/usr/local/git/bin/git-shell</span><br></pre></td></tr></table></figure></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>通过用Virtualbox在本机上构建CentOS，方便于开发人员进行测试；通过在CentOS上搭建自己的Git服务器，可以将自己独立开发的代码很好的管理与备份。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在管理自己的代码的时候，我一直使用github。有的时候，私有项目不想公开，如果还要放到GitHub上，那就必须要花钱。解决这个问题的方法其
      
    
    </summary>
    
      <category term="Python" scheme="https://blog.sunjiajia.com/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="CentOS" scheme="https://blog.sunjiajia.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>淘宝商品信息定向爬虫</title>
    <link href="https://blog.sunjiajia.com/2017/03/07/taobao-spider/"/>
    <id>https://blog.sunjiajia.com/2017/03/07/taobao-spider/</id>
    <published>2017-03-07T04:11:52.000Z</published>
    <updated>2018-08-02T04:10:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在学习数据分析的时候，提前学习了爬虫，其实在很早之前就学习过Python了，但是后来学习Android了，没有将Python很好的实践。但是学习了爬虫之后，我觉得自己写爬虫收集数据，放在自己的服务器上，然后再用自己的App展示出来，就不用再苦于没有数据了。但是，要想写出好的爬虫，也是一件不容易的事情，需要多加练习。</p><p>这次写这个<code>淘宝商品信息定向爬虫</code>仅仅是为了练习一下一些爬虫的常用方法，这里它涉及了如下的知识点：</p><ol><li>爬虫的一个常用思路；</li><li>Python的requests库和正则表达式的用法；</li><li>pymongo以及mongoDB的用法；</li><li>tkinter的用法；</li><li>xlsxwriter库以及导出数据到Excel文件的用法；</li><li>matplotlib库画出统计图表的用法。</li></ol><p>此外，还需要有一台自己的VPS，并且会用Linux，配置好MongoDB服务器。<br>这里推荐我在用的VPS服务商，使用下面的连接购买他家的服务，会得到一定的价钱优惠：<br><a href="http://www.vultr.com/?ref=7147564" target="_blank" rel="noopener">强推本站VPS！优惠</a></p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="/img/201705/tb_spider1.png" alt="淘宝定向爬虫图1"></p><blockquote><p>这个是界面，提供了数据库服务器的一些必填参数，用于连接MongoDB服务器；还有数据的保存方式，提供了保存到数据库和导出到Excel文件两种方式；同时，还提供了画出简单的数据图表的功能。</p></blockquote><p><img src="/img/201705/tb_spider2.png" alt="淘宝定向爬虫图2"></p><blockquote><p>图2展示了Excel文件的命名规则。</p></blockquote><p><img src="/img/201705/tb_spider3.png" alt="淘宝定向爬虫图3"></p><blockquote><p>图3是使用Robomongo这个工具来看一下MongoDB中我们爬取到的数据。</p></blockquote><p><img src="/img/201705/tb_spider4.png" alt="淘宝定向爬虫图4"></p><blockquote><p>一共4400条数据。</p></blockquote><p><img src="/img/201705/tb_spider5.png" alt="淘宝定向爬虫图5"></p><blockquote><p>Excel文件中的数据展示。</p></blockquote><p><img src="/img/201705/tb_spider_linear.png" alt="Matplolib线性图"></p><blockquote><p>将数据用<code>Matplolib线性图</code>来表示。</p></blockquote><p><img src="/img/201705/tb_spider_bar.png" alt="Matplolib柱状图"></p><blockquote><p>将数据用<code>Matplolib柱状图</code>来表示。</p></blockquote><p><img src="/img/201705/tb_spider_scatter.png" alt="Matplolib散点图"></p><blockquote><p>将数据用<code>Matplolib散点图</code>来表示。</p></blockquote><h3 id="思路过程"><a href="#思路过程" class="headerlink" title="思路过程"></a>思路过程</h3><h4 id="明确需求"><a href="#明确需求" class="headerlink" title="明确需求"></a>明确需求</h4><p>我们的目标就是，在淘宝中用关键词搜索商品，然后将结果列表中的所有单个项的信息爬取出来，存储到MongoDB或者Excel文件中，最终画出数据图表。</p><blockquote><p>例如，我们在淘宝中搜索<code>美食</code>，会得到100页数据，每个页面中的单个商品项一共是44个。</p></blockquote><h4 id="获取目标链接"><a href="#获取目标链接" class="headerlink" title="获取目标链接"></a>获取目标链接</h4><p>我们需要获取到淘宝的搜索页面的连接，用来作为Python爬虫的入口。当我们在淘宝主页中输入<code>美食</code>搜索后，得到一个链接：</p><p><a href="https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;imgfile=&amp;commend=all&amp;ssid=s5-e&amp;search_type=item&amp;sourceId=tb.index&amp;spm=a21bo.50862.201856-taobao-item.1&amp;ie=utf8&amp;initiative_id=tbindexz_20170505" target="_blank" rel="noopener">https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;imgfile=&amp;commend=all&amp;ssid=s5-e&amp;search_type=item&amp;sourceId=tb.index&amp;spm=a21bo.50862.201856-taobao-item.1&amp;ie=utf8&amp;initiative_id=tbindexz_20170505</a></p><p>如图：</p><p><img src="/img/201705/tb_spider6.png" alt="淘宝定向爬虫图6"></p><p>但是这个链接我们可以这样来分析：<br>将其中的一系列参数逐个去除，看看结果页面是否有变化，如果没有变化，那么说明这个参数是多余的，可以去除。</p><p>去除多余后的连接，并访问它：<br><a href="https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F" target="_blank" rel="noopener">https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F</a></p><p>其实，<code>%E7%BE%8E%E9%A3%9F</code>就是<code>美食</code>被编码后的字符串。</p><p>接着，我们来看一下，当我们选择了第3页后，链接有什么变化：<br><a href="https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;bcoffset=3&amp;ntoffset=0&amp;p4ppushleft=1%2C48&amp;s=88" target="_blank" rel="noopener">https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;bcoffset=3&amp;ntoffset=0&amp;p4ppushleft=1%2C48&amp;s=88</a></p><p>如图操作：<br><img src="/img/201705/tb_spider7.png" alt="淘宝定向爬虫图7"></p><p>同样的方法，我们把其中的参数逐个去除，得到了一个最简的连接：<br><a href="https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;s=88" target="_blank" rel="noopener">https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;s=88</a></p><p>其中，<code>s=88</code>表示第3页，那么我们推测，<code>s=44</code>表示第2页，<code>s=0</code>表示第1页。在浏览器中访问这几个链接：<br><a href="https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;s=0" target="_blank" rel="noopener">https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;s=0</a><br><a href="https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;s=44" target="_blank" rel="noopener">https://s.taobao.com/search?q=%E7%BE%8E%E9%A3%9F&amp;s=44</a></p><p>我们发现，正如我们推测的那样。</p><p>到这里，我们得到了入口链接的基本形式：<br><a href="https://s.taobao.com/search?q=`关键词`&amp;s=`页面商品个数`" target="_blank" rel="noopener">https://s.taobao.com/search?q=`关键词`&amp;s=`页面商品个数`</a></p><p>更进一步，我们想到，可以用Python的Requests库来访问这个链接，得到我们想要的页面信息。</p><h4 id="明确需要哪些数据"><a href="#明确需要哪些数据" class="headerlink" title="明确需要哪些数据"></a>明确需要哪些数据</h4><p>如图，途中的一个Item中，包含了我们要提取的信息：<br><img src="/img/201705/tb_spider8.png" alt="淘宝定向爬虫图8"></p><h4 id="如何拿到数据"><a href="#如何拿到数据" class="headerlink" title="如何拿到数据"></a>如何拿到数据</h4><p>当我们访问到页面的时候，在页面空白处单击右键，进行<code>查看源代码</code>。然后，我们得到了这样的信息：</p><p><img src="/img/201705/tb_spider9.png" alt="淘宝定向爬虫图9"></p><p>我们可以从中看到，淘宝是通过<code>js解析json数据</code>来展示页面的。于是，我们把下面的json字符串拿来格式化以下，如下图：</p><p><img src="/img/201705/tb_spider10.png" alt="淘宝定向爬虫图10"></p><p>从中，我们看到了我们想要的数据的字段。哈哈，这样数据就很容易获取到了。</p><h4 id="拿到数据"><a href="#拿到数据" class="headerlink" title="拿到数据"></a>拿到数据</h4><p>这里，由于数据是以json字符串的形式返回的，我们用正则表达式匹配出来想要的信息，岂不是可以提高获取数据的速度~~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">titles = re.findall(<span class="string">r'\"raw_title\":\".*?\"'</span>, html)</span><br><span class="line">prices = re.findall(<span class="string">r'\"view_price\":\"[\d.]*\"'</span>, html)</span><br><span class="line">deals = re.findall(<span class="string">r'\"view_sales\":\"[0-9]*[1-9][0-9]*[\u4e00-\u9fa5]+\"'</span>, html)</span><br><span class="line">pics = re.findall(<span class="string">r'\"pic_url\":\".*?"'</span>, html)</span><br><span class="line">detailurls = re.findall(<span class="string">r'\"detail_url":\".*?\"'</span>, html)</span><br><span class="line">locations = re.findall(<span class="string">r'\"item_loc\":\"\D*?\"'</span>, html)</span><br><span class="line">shops = re.findall(<span class="string">r'\"nick\":\".*?\"'</span>, html)</span><br><span class="line">shopurls = re.findall(<span class="string">r'\"shopLink\":\".*?\"'</span>, html)</span><br></pre></td></tr></table></figure><h4 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h4><p>思路已经分析完毕，这里给出源代码，代码中有必要的注释，可以参考。如果看不太明白，可以动手敲一敲代码。源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># from pylab import *</span></span><br><span class="line"></span><br><span class="line">is_running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    访问url链接，取得html源码并返回</span></span><br><span class="line"><span class="string">    :param url: url链接地址</span></span><br><span class="line"><span class="string">    :return: 获取正常，返回html源码；出现异常，返回None</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_agent = <span class="string">'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36'</span></span><br><span class="line">        headers = &#123;<span class="string">'User_agent'</span>: user_agent&#125;</span><br><span class="line">        r = requests.get(url, headers=headers)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        info = <span class="string">"获取html出现异常：\n"</span> + str(e)</span><br><span class="line">        print(info)</span><br><span class="line">        print_info(info)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_data</span><span class="params">(result, html)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    从html中提取每个信息，并格式化为字典，存储在result这个列表中的同时，保存到数据库中去</span></span><br><span class="line"><span class="string">    :param result: 结果列表</span></span><br><span class="line"><span class="string">    :param html: html源码</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        titles = re.findall(<span class="string">r'\"raw_title\":\".*?\"'</span>, html)</span><br><span class="line">        prices = re.findall(<span class="string">r'\"view_price\":\"[\d.]*\"'</span>, html)</span><br><span class="line">        deals = re.findall(</span><br><span class="line">            <span class="string">r'\"view_sales\":\"[0-9]*[1-9][0-9]*[\u4e00-\u9fa5]+\"'</span>, html)</span><br><span class="line">        pics = re.findall(<span class="string">r'\"pic_url\":\".*?"'</span>, html)</span><br><span class="line">        detailurls = re.findall(<span class="string">r'\"detail_url":\".*?\"'</span>, html)</span><br><span class="line">        locations = re.findall(<span class="string">r'\"item_loc\":\"\D*?\"'</span>, html)</span><br><span class="line">        shops = re.findall(<span class="string">r'\"nick\":\".*?\"'</span>, html)</span><br><span class="line">        shopurls = re.findall(<span class="string">r'\"shopLink\":\".*?\"'</span>, html)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(titles)):</span><br><span class="line">            product = &#123;</span><br><span class="line">                <span class="string">'title'</span>:</span><br><span class="line">                    eval(str(titles[i].split(<span class="string">":"</span>)[<span class="number">1</span>])),</span><br><span class="line">                <span class="string">'price'</span>:</span><br><span class="line">                    eval(str(prices[i].split(<span class="string">":"</span>)[<span class="number">1</span>])),</span><br><span class="line">                <span class="string">'deal'</span>:</span><br><span class="line">                    eval(str(deals[i].split(<span class="string">":"</span>)[<span class="number">1</span>]))[:<span class="number">-3</span>],</span><br><span class="line">                <span class="string">'pic'</span>:</span><br><span class="line">                    <span class="string">"https:"</span> + eval(str(pics[i].split(<span class="string">":"</span>)[<span class="number">1</span>])),</span><br><span class="line">                <span class="string">'detailurl'</span>:</span><br><span class="line">                    (<span class="string">"https:"</span> + eval(str(detailurls[i].split(<span class="string">":"</span>)[<span class="number">1</span>]))</span><br><span class="line">                     ).encode(<span class="string">"unicode_escape"</span>).decode(<span class="string">"unicode_escape"</span>),</span><br><span class="line">                <span class="string">'location'</span>:</span><br><span class="line">                    eval(str(locations[i].split(<span class="string">":"</span>)[<span class="number">1</span>])),</span><br><span class="line">                <span class="string">'shop'</span>:</span><br><span class="line">                    eval(str(shops[i].split(<span class="string">":"</span>)[<span class="number">1</span>])),</span><br><span class="line">                <span class="string">'shopurl'</span>:</span><br><span class="line">                    <span class="string">"https:"</span> + eval(str(shopurls[i].split(<span class="string">":"</span>)[<span class="number">1</span>])).encode(</span><br><span class="line">                        <span class="string">"unicode_escape"</span>).decode(<span class="string">"unicode_escape"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            print(product)</span><br><span class="line">            result.append(product)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        info = <span class="string">"提取信息出现异常：\n"</span> + str(e)</span><br><span class="line">        print(info)</span><br><span class="line">        print_info(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_db</span><span class="params">(dburl, dbport, dbname, dbuser, dbpwd, dbtable, products)</span>:</span></span><br><span class="line">    info = <span class="string">"正在保存数据到数据库。"</span></span><br><span class="line">    print_info(info)</span><br><span class="line">    print(info)</span><br><span class="line"></span><br><span class="line">    client = pymongo.MongoClient(host=dburl, port=int(dbport))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dbuser <span class="keyword">and</span> dbpwd:</span><br><span class="line">        client[<span class="string">'admin'</span>].authenticate(dbuser, dbpwd, dbname, <span class="string">'DEFAULT'</span>)</span><br><span class="line"></span><br><span class="line">    db = client[dbname]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        db[dbtable].insert_many(products)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        info = <span class="string">"保存到数据库出现异常：\n"</span> + str(e) + <span class="string">"\n"</span></span><br><span class="line">        print_info(info)</span><br><span class="line">        print(info)</span><br><span class="line"></span><br><span class="line">    info = <span class="string">"保存到数据库成功。"</span></span><br><span class="line">    print_info(info)</span><br><span class="line">    print(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spider_crawl</span><span class="params">(dburl, dbport, dbname, dbuser, dbpwd, dbtable, keyword, depth, mode)</span>:</span></span><br><span class="line">    link = <span class="string">"https://s.taobao.com/search?q="</span> + keyword + <span class="string">"&amp;sort=sale-desc"</span></span><br><span class="line">    products = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(depth)):</span><br><span class="line">        info = <span class="string">"正在读取第 "</span> + str(i + <span class="number">1</span>) + <span class="string">" 页。"</span></span><br><span class="line">        print_info(info)</span><br><span class="line">        print(info)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = link + <span class="string">"&amp;s="</span> + str(<span class="number">44</span> * i)</span><br><span class="line">            html = get_html(url)</span><br><span class="line">            parse_data(products, html)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            info = <span class="string">"spider_crawl出现异常：\n"</span> + str(e)</span><br><span class="line">            print_info(info)</span><br><span class="line">            print(info)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    result_info = <span class="string">"爬取完毕，共获取到 "</span> + str(len(products)) + <span class="string">" 条商品信息。"</span></span><br><span class="line">    print_info(result_info)</span><br><span class="line">    print(result_info)</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="number">1</span>:</span><br><span class="line">        save_to_db(dburl, dbport, dbname, dbuser, dbpwd, dbtable, products)</span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="number">2</span>:</span><br><span class="line">        write_to_excel(keyword, dbname, dbtable, products)</span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="number">3</span>:</span><br><span class="line">        save_to_db(dburl, dbport, dbname, dbuser, dbpwd, dbtable, products)</span><br><span class="line">        write_to_excel(keyword, dbname, dbtable, products)</span><br><span class="line"></span><br><span class="line">    info = <span class="string">"提示：此次爬取信息过程完整结束。"</span></span><br><span class="line">    print_info(info)</span><br><span class="line">    print(info)</span><br><span class="line">    is_running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_excel</span><span class="params">(keyword, dbname, dbtable, products)</span>:</span></span><br><span class="line">    <span class="comment"># time.strftime('%Y-%m-%d_%H:%M:%S', time.localtime(time.time())</span></span><br><span class="line">    info = <span class="string">"正在保存数据到Excel文件。"</span></span><br><span class="line">    print_info(info)</span><br><span class="line">    print(info)</span><br><span class="line"></span><br><span class="line">    filename = keyword + <span class="string">'_'</span> + dbname + <span class="string">'_'</span> + dbtable + <span class="string">'_'</span> + time.strftime(</span><br><span class="line">        <span class="string">"%Y-%m-%d_%H-%M-%S"</span>,</span><br><span class="line">        time.localtime(time.time())) + <span class="string">'_'</span> + str(len(products)) + <span class="string">'.xlsx'</span></span><br><span class="line">    workbook = xlsxwriter.Workbook(filename)</span><br><span class="line">    worksheet = workbook.add_worksheet()</span><br><span class="line"></span><br><span class="line">    headers = [</span><br><span class="line">        <span class="string">'_id'</span>, <span class="string">'title'</span>, <span class="string">'price'</span>, <span class="string">'deal'</span>, <span class="string">'shop'</span>, <span class="string">'location'</span>, <span class="string">'pic'</span>,</span><br><span class="line">        <span class="string">'detailurl'</span>, <span class="string">'shopurl'</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="comment"># headers = ['title', 'price', 'deal', 'shop', 'location']</span></span><br><span class="line">    header_row = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> header <span class="keyword">in</span> headers:</span><br><span class="line">        col = headers.index(header)</span><br><span class="line">        worksheet.write(header_row, col, header)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># worksheet.write_rich_string(data_row, col, str(_value))</span></span><br><span class="line">    data_row = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> product <span class="keyword">in</span> products:</span><br><span class="line">        <span class="keyword">for</span> _key, _value <span class="keyword">in</span> product.items():</span><br><span class="line">            col = headers.index(_key)</span><br><span class="line">            <span class="keyword">if</span> _key == <span class="string">'_id'</span> <span class="keyword">or</span> _key == <span class="string">'pic'</span> <span class="keyword">or</span> _key == <span class="string">'detailurl'</span> <span class="keyword">or</span> _key == <span class="string">'shopurl'</span>:</span><br><span class="line">                worksheet.write_rich_string(data_row, col, str(_value))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                worksheet.write(data_row, col, str(_value))</span><br><span class="line">        data_row += <span class="number">1</span></span><br><span class="line">    workbook.close()</span><br><span class="line">    info = <span class="string">"成功保存数据到Excel文件。"</span></span><br><span class="line">    print_info(info)</span><br><span class="line">    print(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawl</span><span class="params">()</span>:</span></span><br><span class="line">    is_running = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    db_url = entry_db_url.get()</span><br><span class="line">    db_port = entry_db_port.get()</span><br><span class="line">    db_name = entry_db_name.get()</span><br><span class="line">    db_user = entry_db_user.get()</span><br><span class="line">    db_pwd = entry_db_pwd.get()</span><br><span class="line">    db_table = entry_db_table.get()</span><br><span class="line">    keyword = entry_keyword.get()</span><br><span class="line">    depth = entry_depth.get()</span><br><span class="line"></span><br><span class="line">    mode = var_radio.get()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> mode == <span class="number">0</span>:</span><br><span class="line">        messagebox.showerror(title=<span class="string">'错误！'</span>, message=<span class="string">'没有选择数据保存方式！'</span>)</span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="number">1</span> <span class="keyword">or</span> mode == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> db_url <span class="keyword">and</span> db_port <span class="keyword">and</span> db_name <span class="keyword">and</span> db_table <span class="keyword">and</span> keyword <span class="keyword">and</span> depth:</span><br><span class="line">            <span class="keyword">if</span> int(depth) &gt; <span class="number">100</span>:</span><br><span class="line">                depth = <span class="number">100</span></span><br><span class="line">            <span class="keyword">elif</span> int(depth) &lt;= <span class="number">0</span>:</span><br><span class="line">                depth = <span class="number">1</span></span><br><span class="line">            run_in_thread(spider_crawl, db_url, db_port, db_name, db_user, db_pwd, db_table,</span><br><span class="line">                          keyword, depth, mode)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            messagebox.showerror(title=<span class="string">'错误！'</span>, message=<span class="string">'如果您的数据库不需要登录，则④⑤两项可以不填；否则，①~⑧项必须全部填写！'</span>)</span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">if</span> keyword <span class="keyword">and</span> depth:</span><br><span class="line">            run_in_thread(spider_crawl, db_url, db_port, db_name, db_table,</span><br><span class="line">                          keyword, depth, mode)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            messagebox.showerror(title=<span class="string">'错误！'</span>, message=<span class="string">'⑦⑧项必须全部填写！'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_in_thread</span><span class="params">(func, *args)</span>:</span></span><br><span class="line">    t = threading.Thread(target=func, args=args)</span><br><span class="line">    t.setDaemon(<span class="keyword">True</span>)</span><br><span class="line">    t.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exit_app</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> is_running:</span><br><span class="line">        messagebox.showerror(title=<span class="string">'不能退出！'</span>, message=<span class="string">'程序还在运行，请等待程序运行完毕后再退出。'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        root.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_info</span><span class="params">(info)</span>:</span></span><br><span class="line">    result_text.insert(<span class="string">'end'</span>,</span><br><span class="line">                       <span class="string">"\n"</span> + info + <span class="string">"\n------------------------------------"</span>)</span><br><span class="line">    result_text.see(<span class="string">"end"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">radio_selector</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> var_radio.get()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_from_db</span><span class="params">()</span>:</span></span><br><span class="line">    dburl = entry_db_url.get()</span><br><span class="line">    dbport = entry_db_port.get()</span><br><span class="line">    dbname = entry_db_name.get()</span><br><span class="line">    dbuser = entry_db_user.get()</span><br><span class="line">    dbpwd = entry_db_pwd.get()</span><br><span class="line">    dbtable = entry_db_table.get()</span><br><span class="line"></span><br><span class="line">    client = pymongo.MongoClient(host=dburl, port=int(dbport))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dbuser <span class="keyword">and</span> dbpwd:</span><br><span class="line">        client[<span class="string">'admin'</span>].authenticate(dbuser, dbpwd, <span class="string">'admin'</span>, <span class="string">'DEFAULT'</span>)</span><br><span class="line"></span><br><span class="line">    db = client[dbname]</span><br><span class="line"></span><br><span class="line">    items = db[dbtable].find(&#123;&#125;, &#123;<span class="string">'price'</span>: <span class="number">1</span>, <span class="string">'deal'</span>: <span class="number">1</span>, <span class="string">'_id'</span>: <span class="number">0</span>&#125;)</span><br><span class="line"></span><br><span class="line">    results = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        results[item[<span class="string">'deal'</span>]] = item[<span class="string">'price'</span>]</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_linear_chart</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mpl.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签</span></span><br><span class="line">    <span class="comment"># mpl.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号</span></span><br><span class="line"></span><br><span class="line">    datas = read_from_db()</span><br><span class="line"></span><br><span class="line">    max_deal = max(datas.keys(), key=<span class="keyword">lambda</span> x: int(x))</span><br><span class="line">    min_deal = min(datas.keys(), key=<span class="keyword">lambda</span> x: int(x))</span><br><span class="line">    max_price = max(datas.values(), key=<span class="keyword">lambda</span> x: float(x))</span><br><span class="line">    min_price = min(datas.values(), key=<span class="keyword">lambda</span> x: float(x))</span><br><span class="line"></span><br><span class="line">    y_ticks = np.linspace(int(min_deal), int(max_deal), <span class="number">10</span>, endpoint=<span class="keyword">False</span>)</span><br><span class="line">    x_ticks = np.linspace(float(min_price), float(max_price), <span class="number">10</span>, endpoint=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.title(<span class="string">"线性图表"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">20</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">"商品价格（元）"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">15</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">"商品销量（件）"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">15</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    ax.set_xticks(x_ticks)</span><br><span class="line">    ax.set_yticks(y_ticks)</span><br><span class="line">    <span class="comment"># y, x = zip(*sorted(datas.items()))</span></span><br><span class="line">    <span class="comment"># plt.plot(x, y)</span></span><br><span class="line">    <span class="comment"># plt.plot(*zip(*sorted(datas.items())))</span></span><br><span class="line">    new_list = zip(datas.values(), datas.keys())</span><br><span class="line">    new_datas = sorted(new_list, key=<span class="keyword">lambda</span> x: float(x[<span class="number">0</span>]))</span><br><span class="line">    <span class="comment"># print(new_datas)</span></span><br><span class="line">    x, y = zip(*new_datas)</span><br><span class="line">    plt.plot(x, y)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_scatter_chart</span><span class="params">()</span>:</span></span><br><span class="line">    datas = read_from_db()</span><br><span class="line"></span><br><span class="line">    max_deal = max(datas.keys(), key=<span class="keyword">lambda</span> x: int(x))</span><br><span class="line">    min_deal = min(datas.keys(), key=<span class="keyword">lambda</span> x: int(x))</span><br><span class="line">    max_price = max(datas.values(), key=<span class="keyword">lambda</span> x: float(x))</span><br><span class="line">    min_price = min(datas.values(), key=<span class="keyword">lambda</span> x: float(x))</span><br><span class="line"></span><br><span class="line">    y_ticks = np.linspace(int(min_deal), int(max_deal), <span class="number">10</span>, endpoint=<span class="keyword">False</span>)</span><br><span class="line">    x_ticks = np.linspace(float(min_price), float(max_price), <span class="number">10</span>, endpoint=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.title(<span class="string">"散点图表"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">20</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">"商品价格（元）"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">15</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">"商品销量（件）"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">15</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    ax.set_xticks(x_ticks)</span><br><span class="line">    ax.set_yticks(y_ticks)</span><br><span class="line"></span><br><span class="line">    new_list = zip(datas.values(), datas.keys())</span><br><span class="line">    new_datas = sorted(new_list, key=<span class="keyword">lambda</span> x: float(x[<span class="number">0</span>]))</span><br><span class="line">    <span class="comment"># print(new_datas)</span></span><br><span class="line">    <span class="comment"># y, x = zip(*sorted(datas.items()))</span></span><br><span class="line">    x, y = zip(*new_datas)</span><br><span class="line">    plt.scatter(x, y, c=<span class="string">'r'</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_bar_chart</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 随着价格的升高，销量的变化</span></span><br><span class="line">    datas = read_from_db()</span><br><span class="line"></span><br><span class="line">    max_deal = max(datas.keys(), key=<span class="keyword">lambda</span> x: int(x))</span><br><span class="line">    min_deal = min(datas.keys(), key=<span class="keyword">lambda</span> x: int(x))</span><br><span class="line">    max_price = max(datas.values(), key=<span class="keyword">lambda</span> x: float(x))</span><br><span class="line">    min_price = min(datas.values(), key=<span class="keyword">lambda</span> x: float(x))</span><br><span class="line"></span><br><span class="line">    y_ticks = np.linspace(int(min_deal), int(max_deal), <span class="number">10</span>, endpoint=<span class="keyword">False</span>)</span><br><span class="line">    x_ticks = np.linspace(float(min_price), float(max_price), <span class="number">10</span>, endpoint=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.title(<span class="string">"柱状图表"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">20</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">"商品价格（元）"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">15</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">"商品销量（件）"</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">15</span>,color=<span class="string">'green'</span>)</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    ax.set_xticks(x_ticks)</span><br><span class="line">    ax.set_yticks(y_ticks)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># new_list = zip(datas.values(), datas.keys())</span></span><br><span class="line">    new_list = sorted(zip(datas.values(), datas.keys()), key=<span class="keyword">lambda</span> x: float(x[<span class="number">0</span>]))</span><br><span class="line">    sample = random.sample(new_list, int(len(new_list) * <span class="number">0.3</span>))</span><br><span class="line">    sorted_sample = sorted(sample, key=<span class="keyword">lambda</span> x: float(x[<span class="number">0</span>]))</span><br><span class="line">    print(sorted_sample)</span><br><span class="line"></span><br><span class="line">    x_list = []</span><br><span class="line">    y_list = []</span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> sorted_sample:</span><br><span class="line">        x_list.append(float(x))</span><br><span class="line">        y_list.append(int(y))</span><br><span class="line">    plt.bar(x_list, y_list, width=<span class="number">5.0</span>, facecolor=<span class="string">'blue'</span>, edgecolor=<span class="string">''</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title = <span class="string">'淘宝商品定向爬虫'</span></span><br><span class="line">author = <span class="string">'Powered by 孙佳佳'</span></span><br><span class="line">font_normal_size = <span class="number">14</span></span><br><span class="line"></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(title)</span><br><span class="line">root.geometry(<span class="string">'820x700'</span>)</span><br><span class="line">root.anchor(<span class="string">'center'</span>)</span><br><span class="line">root.resizable(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">label_title = tk.Label(root, text=title, font=(<span class="string">''</span>, <span class="number">26</span>))</span><br><span class="line">label_title.pack(anchor=<span class="string">'center'</span>)</span><br><span class="line"></span><br><span class="line">label_author = tk.Label(root, text=author, font=(<span class="string">''</span>, <span class="number">14</span>), fg=<span class="string">'blue'</span>)</span><br><span class="line">label_author.place(x=<span class="number">300</span>, y=<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">label_db_url = tk.Label(root, text=<span class="string">'①数据库地址：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_db_url.place(x=<span class="number">100</span>, y=<span class="number">100</span>)</span><br><span class="line">entry_db_url = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_db_url.insert(<span class="string">'end'</span>, <span class="string">'108.61.162.201'</span>)</span><br><span class="line">entry_db_url.place(x=<span class="number">250</span>, y=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">label_db_port = tk.Label(root, text=<span class="string">'②数据库端口：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_db_port.place(x=<span class="number">100</span>, y=<span class="number">150</span>)</span><br><span class="line">entry_db_port = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_db_port.insert(<span class="string">'end'</span>, <span class="string">'10000'</span>)</span><br><span class="line">entry_db_port.place(x=<span class="number">250</span>, y=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">label_db_name = tk.Label(root, text=<span class="string">'③数据库名称：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_db_name.place(x=<span class="number">100</span>, y=<span class="number">200</span>)</span><br><span class="line">entry_db_name = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_db_name.insert(<span class="string">'end'</span>, <span class="string">'jack'</span>)</span><br><span class="line">entry_db_name.place(x=<span class="number">250</span>, y=<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">label_db_user = tk.Label(root, text=<span class="string">'④数据库用户：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_db_user.place(x=<span class="number">100</span>, y=<span class="number">250</span>)</span><br><span class="line">entry_db_user = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_db_user.insert(<span class="string">'end'</span>, <span class="string">'jack'</span>)</span><br><span class="line">entry_db_user.place(x=<span class="number">250</span>, y=<span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">label_db_pwd = tk.Label(root, text=<span class="string">'⑤数据库密码：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_db_pwd.place(x=<span class="number">100</span>, y=<span class="number">300</span>)</span><br><span class="line">entry_db_pwd = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_db_pwd.insert(<span class="string">'end'</span>, <span class="string">'1238912389'</span>)</span><br><span class="line">entry_db_pwd.place(x=<span class="number">250</span>, y=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">label_db_table = tk.Label(root, text=<span class="string">'⑥数据库表名：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_db_table.place(x=<span class="number">100</span>, y=<span class="number">350</span>)</span><br><span class="line">entry_db_table = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_db_table.insert(<span class="string">'end'</span>, <span class="string">'coffee'</span>)</span><br><span class="line">entry_db_table.place(x=<span class="number">250</span>, y=<span class="number">350</span>)</span><br><span class="line"></span><br><span class="line">label_keyword = tk.Label(root, text=<span class="string">'⑦商品关键词：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_keyword.place(x=<span class="number">100</span>, y=<span class="number">400</span>)</span><br><span class="line">entry_keyword = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_keyword.insert(<span class="string">'end'</span>, <span class="string">'黑咖啡'</span>)</span><br><span class="line">entry_keyword.place(x=<span class="number">250</span>, y=<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">label_depth = tk.Label(root, text=<span class="string">'⑧深度≤100：'</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">label_depth.place(x=<span class="number">100</span>, y=<span class="number">450</span>)</span><br><span class="line">entry_depth = tk.Entry(root, show=<span class="keyword">None</span>, font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">entry_depth.insert(<span class="string">'end'</span>, <span class="string">'10'</span>)</span><br><span class="line">entry_depth.place(x=<span class="number">250</span>, y=<span class="number">450</span>)</span><br><span class="line"></span><br><span class="line">result_text = tk.Text(root, font=(<span class="string">''</span>, font_normal_size), width=<span class="number">53</span>, height=<span class="number">8</span>)</span><br><span class="line">result_text.place(x=<span class="number">100</span>, y=<span class="number">500</span>)</span><br><span class="line"></span><br><span class="line">button_run = tk.Button(</span><br><span class="line">    root, text=<span class="string">'开始爬取'</span>, font=(<span class="string">''</span>, font_normal_size), command=crawl)</span><br><span class="line">button_run.place(x=<span class="number">520</span>, y=<span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">button_exit = tk.Button(</span><br><span class="line">    root, text=<span class="string">'退出程序'</span>, font=(<span class="string">''</span>, font_normal_size), command=exit_app)</span><br><span class="line">button_exit.place(x=<span class="number">640</span>, y=<span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">button_tu_1 = tk.Button(</span><br><span class="line">    root, text=<span class="string">'线性图表'</span>, font=(<span class="string">''</span>, font_normal_size), command=show_linear_chart)</span><br><span class="line">button_tu_1.place(x=<span class="number">520</span>, y=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">button_tu_2 = tk.Button(</span><br><span class="line">    root, text=<span class="string">'散点图表'</span>, font=(<span class="string">''</span>, font_normal_size), command=show_scatter_chart)</span><br><span class="line">button_tu_2.place(x=<span class="number">640</span>, y=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">button_tu_3 = tk.Button(</span><br><span class="line">    root, text=<span class="string">'柱状图表'</span>, font=(<span class="string">''</span>, font_normal_size), command=show_bar_chart)</span><br><span class="line">button_tu_3.place(x=<span class="number">520</span>, y=<span class="number">350</span>)</span><br><span class="line"></span><br><span class="line">var_radio = tk.IntVar()</span><br><span class="line">radio_db = tk.Radiobutton(</span><br><span class="line">    root,</span><br><span class="line">    text=<span class="string">'保存到数据库'</span>,</span><br><span class="line">    variable=var_radio,</span><br><span class="line">    value=<span class="number">1</span>,</span><br><span class="line">    font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">radio_db.place(x=<span class="number">520</span>, y=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">radio_excel = tk.Radiobutton(</span><br><span class="line">    root,</span><br><span class="line">    text=<span class="string">'导出到Excel文件'</span>,</span><br><span class="line">    variable=var_radio,</span><br><span class="line">    value=<span class="number">2</span>,</span><br><span class="line">    font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">radio_excel.place(x=<span class="number">520</span>, y=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">radio_both = tk.Radiobutton(</span><br><span class="line">    root,</span><br><span class="line">    text=<span class="string">'两种方式同时执行'</span>,</span><br><span class="line">    variable=var_radio,</span><br><span class="line">    value=<span class="number">3</span>,</span><br><span class="line">    font=(<span class="string">''</span>, font_normal_size))</span><br><span class="line">radio_both.place(x=<span class="number">520</span>, y=<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="淘宝定向爬虫源码下载"><a href="#淘宝定向爬虫源码下载" class="headerlink" title="淘宝定向爬虫源码下载"></a>淘宝定向爬虫源码下载</h3><blockquote><p><a href="https://github.com/opengit/PyDemos" target="_blank" rel="noopener">Github上源码下载</a><br>谢谢star一下啊~ <code>^#^</code>~~</p></blockquote><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>代码非常简单，用起来也很方便。大家有问题的话，可以看下面的联系方式找到我，我们一起讨论。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在学习数据分析的时候，提前学习了爬虫，其实在很早之前就学习过Python了，但是后来学习Android了，没有将Python很好的实践。
      
    
    </summary>
    
      <category term="Python" scheme="https://blog.sunjiajia.com/categories/Python/"/>
    
    
      <category term="Python" scheme="https://blog.sunjiajia.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://blog.sunjiajia.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>自定义Toolbar添加双击事件</title>
    <link href="https://blog.sunjiajia.com/2017/01/07/double-tap-toolbar/"/>
    <id>https://blog.sunjiajia.com/2017/01/07/double-tap-toolbar/</id>
    <published>2017-01-07T13:11:52.000Z</published>
    <updated>2018-08-02T04:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天在播放器中，突然想到了如果列表项过多，那么用户手指连续滑着回到顶部未免太累！类似微信朋友圈的<strong>双击</strong>TitleBar<strong>返回顶部</strong>，既然微信这超级App都实现了，那还等什么呢？动手做起来吧。我们这里是<strong>双击Toolbar返回顶部</strong>，不仅如此，其实在回调方法中可以做自己想做的事情。</p><h3 id="预览图"><a href="#预览图" class="headerlink" title="预览图"></a>预览图</h3><p><img src="/img/201701/double-tap-toolbar.gif" alt="自定义Toolbar添加双击事件"></p><h3 id="SuperToolbar-java代码："><a href="#SuperToolbar-java代码：" class="headerlink" title="SuperToolbar.java代码："></a>SuperToolbar.java代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuperToolbar</span> <span class="keyword">extends</span> <span class="title">Toolbar</span> <span class="keyword">implements</span> <span class="title">TapListener</span>.<span class="title">OnDoubleTapListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnTwoTapListener mOnTwoTapListener;</span><br><span class="line">    <span class="keyword">private</span> GestureDetector mDetector;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnTwoTapListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onTwoTap</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnTwoTapListener</span><span class="params">(OnTwoTapListener onTwoTapListener)</span> </span>&#123;</span><br><span class="line">        mOnTwoTapListener = onTwoTapListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperToolbar</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperToolbar</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, android.support.v7.appcompat.R.attr.toolbarStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperToolbar</span><span class="params">(Context context, @Nullable AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line"></span><br><span class="line">        TapListener tapListener = <span class="keyword">new</span> TapListener(<span class="keyword">this</span>);</span><br><span class="line">        mDetector = <span class="keyword">new</span> GestureDetector(context, tapListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDouble</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mOnTwoTapListener.onTwoTap();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onTouchEvent(ev);</span><br><span class="line">        mDetector.onTouchEvent(ev);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><em>TapListener</em> 是 <em>GestureDetector.SimpleOnGestureListener</em> 的子类，我们需要它的 <em>onDoubleTap(MotionEvent e)</em> 方法 , <em>SuperToolbar</em> 实现了TapListener.OnDoubleTapListener这个接口，用于触发 <em>onDoubleTap</em> 这个双击方法。</p></blockquote><h3 id="TapListener-java源码："><a href="#TapListener-java源码：" class="headerlink" title="TapListener.java源码："></a>TapListener.java源码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TapListener</span> <span class="keyword">extends</span> <span class="title">GestureDetector</span>.<span class="title">SimpleOnGestureListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnDoubleTapListener mDoubleTapListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TapListener</span><span class="params">(OnDoubleTapListener onDoubleTapListener)</span> </span>&#123;</span><br><span class="line">        mDoubleTapListener = onDoubleTapListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnDoubleTapListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onDouble</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDoubleTap</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        mDoubleTapListener.onDouble();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SuperToolbar toolbar = (SuperToolbar) actView.findViewById(R.id.tool_bar);</span><br><span class="line">toolbar.setOnTwoTapListener(<span class="keyword">new</span> SuperToolbar.OnTwoTapListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTwoTap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//我的一个工具显示Toast，在双击后让RecyclerView返回列表顶部</span></span><br><span class="line">        <span class="comment">// 在这里可以干你自己想干的事情，whatever，who care！</span></span><br><span class="line">        mUtils.sToast(<span class="string">"双击！双击！Toolbar！"</span>);</span><br><span class="line">        mRecycler.smoothScrollToPosition(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>今天写的这两篇博文记录的代码都是非常简单实用，用起来也很方便。大家有问题的话，可以看下面的联系方式找到我，我们一起讨论。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天在播放器中，突然想到了如果列表项过多，那么用户手指连续滑着回到顶部未免太累！类似微信朋友圈的&lt;strong&gt;双击&lt;/strong&gt;Tit
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>自定义RecyclerView监听滑动到底部Bottom</title>
    <link href="https://blog.sunjiajia.com/2017/01/07/recycler-bottom/"/>
    <id>https://blog.sunjiajia.com/2017/01/07/recycler-bottom/</id>
    <published>2017-01-07T04:11:52.000Z</published>
    <updated>2018-08-02T04:10:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在做一个本地的万能播放器，需要监听RecyclerView滑动到底部，向用户提示已经滑动到最底部；看了网上其他童鞋的写法，比较繁琐。现在给出我的实现方法，非常简单实用，在监听回调方法中，可以做很多想做的事情：</p><p>  1.提示用户已经到达底部（Snack或者Toast）；<br>  2.可以加载更多（我最讨厌格外加一个item来显示加载更多，于是当到达底部后直接给Adapter添加数据就好）；<br>  3.可以额外再添加一个控件，来实现快速返回顶部（由你自己实现）；<br>  4.等等。。。。（只要你判断好了到达底部，就可以在底部做自己想干的事情）。</p><h3 id="预览图"><a href="#预览图" class="headerlink" title="预览图"></a>预览图</h3><p><img src="/img/201701/recycler-bottom.gif" alt="自定义RecyclerView监听滑动到底部Bottom"></p><h3 id="SuperRecycler-java代码："><a href="#SuperRecycler-java代码：" class="headerlink" title="SuperRecycler.java代码："></a>SuperRecycler.java代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuperRecycler</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnBottomCallback mOnBottomCallback;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnBottomCallback</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onBottom</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnBottomCallback</span><span class="params">(OnBottomCallback onBottomCallback)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mOnBottomCallback = onBottomCallback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperRecycler</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperRecycler</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperRecycler</span><span class="params">(Context context, @Nullable AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrolled</span><span class="params">(<span class="keyword">int</span> dx, <span class="keyword">int</span> dy)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isSlideToBottom()) &#123;</span><br><span class="line">            mOnBottomCallback.onBottom();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 其实就是它在起作用。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSlideToBottom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span> != <span class="keyword">null</span></span><br><span class="line">                &amp;&amp; <span class="keyword">this</span>.computeVerticalScrollExtent() + <span class="keyword">this</span>.computeVerticalScrollOffset()</span><br><span class="line">                &gt;= <span class="keyword">this</span>.computeVerticalScrollRange();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SuperRecycler recycler = (SuperRecycler) mFraView.findViewById(R.id.recycler);</span><br><span class="line">GridLayoutManager manager = <span class="keyword">new</span> GridLayoutManager(getActivity(), <span class="number">2</span>, GridLayoutManager.VERTICAL, <span class="keyword">false</span>);</span><br><span class="line">recycler.setLayoutManager(manager);</span><br><span class="line">recycler.setAdapter(mAdt);</span><br><span class="line">recycler.setOnBottomCallback(<span class="keyword">new</span> SuperRecycler.OnBottomCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBottom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Snackbar.make(recycler, <span class="string">"滚动到了底部"</span>, Snackbar.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>代码非常简单，用起来也很方便。大家有问题的话，可以看下面的联系方式找到我，我们一起讨论。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在做一个本地的万能播放器，需要监听RecyclerView滑动到底部，向用户提示已经滑动到最底部；看了网上其他童鞋的写法，比较繁琐。现在
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Daily Tips（Updated）</title>
    <link href="https://blog.sunjiajia.com/2016/05/07/daily-tips/"/>
    <id>https://blog.sunjiajia.com/2016/05/07/daily-tips/</id>
    <published>2016-05-07T05:30:37.000Z</published>
    <updated>2018-08-02T04:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="意欲如何？"><a href="#意欲如何？" class="headerlink" title="意欲如何？"></a>意欲如何？</h2><ul><li>这篇博文取名为<code>“Daily Tips”</code>，意为<code>日常技巧</code>、<code>小技巧</code>，意在记录<code>开发中或者与电脑打交道</code>过程中遇到的一些小问题及解决途径，这些小问题是值得记录但又无须长篇大论、深究的。</li><li>记录方式将以<code>三级标题是问题，其下内容为答案</code>的模式，简单明了。</li><li>本篇博文将不定时更新，每次更新会将博文时间提到修改之时。</li><li>如若各位有任何问题和看法，请<code>及时评论</code>或者<code>[at]我微博</code>讨论交流。</li><li>您的问题和答案采取后也可以出现在本篇微博中，会注明您的<code>姓名和链接</code>，为您带来流量。</li></ul><hr><h2 id="正文开始"><a href="#正文开始" class="headerlink" title="正文开始"></a>正文开始</h2><hr><h3 id="No-001-ubuntu-linux-下查看Gtk版本（version）信息？"><a href="#No-001-ubuntu-linux-下查看Gtk版本（version）信息？" class="headerlink" title="[No.001] ubuntu(linux)下查看Gtk版本（version）信息？"></a><em>[No.001]</em> ubuntu(linux)下查看Gtk版本（version）信息？</h3><ul><li><p>打开终端输入以下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l libgtk2.0-0 libgtk-3-0</span><br></pre></td></tr></table></figure></li><li><p>得到如下反馈：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">||/ Name           Version      Architecture Description</span><br><span class="line">+++-==============-============-============-=================================</span><br><span class="line">ii  libgtk-3-0:amd 3.10.8-0ubun amd64        GTK+ graphical user interface lib</span><br><span class="line">ii  libgtk2.0-0:am 2.24.23-0ubu amd64        GTK+ graphical user interface lib</span><br></pre></td></tr></table></figure></li><li><p>其中<code>3.10.8</code>、<code>2.24.23</code>分别为<code>gtk3</code>、<code>gtk2</code>的版本信息。</p></li></ul><hr><h3 id="No-002-重装ubuntu后终端terminal的Tab键无法自动补全！"><a href="#No-002-重装ubuntu后终端terminal的Tab键无法自动补全！" class="headerlink" title="[No.002] 重装ubuntu后终端terminal的Tab键无法自动补全！"></a><em>[No.002]</em> 重装ubuntu后终端terminal的Tab键无法自动补全！</h3><ul><li><p>打开终端，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/bash.bashrc</span><br></pre></td></tr></table></figure></li><li><p>(ubuntu13.04以上版本)在打开的文件中搜索以下代码，并修改为以下样子（就是将之前每行开头的#删除），保存退出问题解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ! <span class="built_in">shopt</span> -oq posix; <span class="keyword">then</span></span><br><span class="line">     <span class="keyword">if</span> [-f  /usr/share/bash-completion/bash_completion ]; <span class="keyword">then</span></span><br><span class="line">          . /usr/share/bash-completion/bash_completion</span><br><span class="line">      <span class="keyword">elif</span> [ -f /etc/bash_completion]; <span class="keyword">then</span></span><br><span class="line">           . /etc/bash_completion</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>(ubuntu12.04及老版本)将以下代码前的#去掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -f /etc/bash_completion ] &amp;&amp; ! <span class="built_in">shopt</span> -oq posix; <span class="keyword">then</span></span><br><span class="line">    . /etc/bash_completion</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="No-003-老版本Ubuntu（12-04）中安装新nodejs！"><a href="#No-003-老版本Ubuntu（12-04）中安装新nodejs！" class="headerlink" title="[No.003] 老版本Ubuntu（12.04）中安装新nodejs！"></a><em>[No.003]</em> 老版本Ubuntu（12.04）中安装新nodejs！</h3><blockquote><p>还有问题再看 <a href="https://nodesource.com/blog/chris-lea-joins-forces-with-nodesource" target="_blank" rel="noopener">作者链接</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl</span><br><span class="line">curl -sL https://deb.nodesource.com/setup | sudo bash -</span><br><span class="line">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure><hr><h3 id="No-004-Android-Studio启动后提示External-file-changes-sync-may-be-slow-The-current-inotify-7-watch-limit-is-too-low"><a href="#No-004-Android-Studio启动后提示External-file-changes-sync-may-be-slow-The-current-inotify-7-watch-limit-is-too-low" class="headerlink" title="[No.004] Android Studio启动后提示External file changes sync may be slow The current inotify(7) watch limit is too low."></a><em>[No.004]</em> Android Studio启动后提示External file changes sync may be slow The current inotify(7) watch limit is too low.</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>在文件中加入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Inotify Watches Limit</span></span><br><span class="line">fs.inotify.max_user_watches = 524288</span><br></pre></td></tr></table></figure></p><p>参考官方网页：<a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit" target="_blank" rel="noopener">点击打开</a></p><hr><h3 id="No-005-Ubuntu16-04下打开Eclipse后各种按钮太大"><a href="#No-005-Ubuntu16-04下打开Eclipse后各种按钮太大" class="headerlink" title="[No.005] Ubuntu16.04下打开Eclipse后各种按钮太大"></a><em>[No.005]</em> Ubuntu16.04下打开Eclipse后各种按钮太大</h3><ul><li>这个问题是由与Ubuntu16.04中，eclipse默认使用了gtk3的原因，解决问题如下：<blockquote><p>在eclipse根目录的<code>eclipse.ini</code>配置文件中，添加如下配置：</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--launcher.GTK_version</span><br><span class="line">2</span><br></pre></td></tr></table></figure><hr><h3 id="No-006-Ubuntu16-04下编译Android源码的jdk问题"><a href="#No-006-Ubuntu16-04下编译Android源码的jdk问题" class="headerlink" title="[No.006] Ubuntu16.04下编译Android源码的jdk问题"></a><em>[No.006]</em> Ubuntu16.04下编译Android源码的jdk问题</h3><ul><li>在最新版本的Ubuntu下编译Android源码，由于Ubuntu16.04默认舍弃了openjdk-7-jdk，所以在编译的时候会提示如下错误：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Checking build tools versions...</span><br><span class="line">************************************************************</span><br><span class="line">You asked <span class="keyword">for</span> an OpenJDK 7 build but your version is</span><br><span class="line">java version <span class="string">"1.7.0_80"</span> Java(TM) SE Runtime Environment (build 1.7.0_80-b15) Java HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode).</span><br><span class="line">************************************************************</span><br><span class="line">build/core/main.mk:191: *** stop.  Stop.</span><br></pre></td></tr></table></figure><ul><li>解决的办法就是，利用ppa在Ubuntu16.04下安装openjdk-7-jdk：</li></ul><ol><li><p>删除系统中所有与java有关的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove openjdk-* icedtea-* icedtea6-*</span><br></pre></td></tr></table></figure></li><li><p>给Xenial添加OpenJDK7的PPA，并更新包索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r/ppa &amp;&amp; sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装所有当前可用的更新，以确保需要的包准备就绪：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade &amp;&amp; sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure></li><li><p>安装openjdk7，以及所有Android构建所依赖的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install adb fastboot openjdk-7-jdk git ccache automake lzop bison gperf build-essential zip curl zlib1g-dev zlib1g-dev:i386 g++-multilib python-networkx libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven python-mako python3-mako python python3 syslinux-utils google-android-build-tools-installer</span><br></pre></td></tr></table></figure></li><li><p>更新一下java的环境变量，选择里面有openjdk-7的那一项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure></li><li><p>这样再次编译源码，就不会出现jdk的version错误了。</p></li><li><p>关于如何编译Android源码（AOSP），请参考博文：</p><blockquote><p><a href="http://sunjiajia.com/2015/08/16/make-android-open-source/" target="_blank" rel="noopener">《编译Android5.1.1源码》</a></p></blockquote></li><li><p>关于国内下载AOSP源码速度太慢，请参考博文：</p><blockquote><p><a href="http://sunjiajia.com/2015/08/14/download-android-open-source-projects/" target="_blank" rel="noopener">《国内镜像加速Android源码下载》</a></p></blockquote><hr><h3 id="No-007-解决Ubuntu16-04-字体太细发虚（表现在Chrome中浏览中文）"><a href="#No-007-解决Ubuntu16-04-字体太细发虚（表现在Chrome中浏览中文）" class="headerlink" title="[No.007] 解决Ubuntu16.04 字体太细发虚（表现在Chrome中浏览中文）"></a><em>[No.007]</em> 解决Ubuntu16.04 字体太细发虚（表现在Chrome中浏览中文）</h3><blockquote><p>这个问题产生是由于Ubuntu 16.04 LTS 的默认中日韩字体package<code>fonts-noto-cjk</code>有一个bug，如果网页没有把其页面语言指定为中日韩字体，那么会用细的字体来显示。解决方法如下：</p></blockquote></li></ol><ol><li><p>删除系统自带的<code>fonts-noto-cjk</code>包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove fonts-noto-cjk</span><br></pre></td></tr></table></figure></li><li><p>使用Ubuntu 开发团队的 Gunnar Hjalmarsson 制作的<code>fonts-noto-cjk</code>个人PPA，它修复了这个bug：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:gunnarhj/fonts-noto-cjk</span><br></pre></td></tr></table></figure></li><li><p>刷新一下包索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装修复了bug的<code>fonts-noto-cjk</code>包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fonts-noto-cjk</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="No-008-Android-emulator-启动失败，提示错误：libGL-error-unable-to-load-driver-i965-dri-so"><a href="#No-008-Android-emulator-启动失败，提示错误：libGL-error-unable-to-load-driver-i965-dri-so" class="headerlink" title="[No.008] Android emulator 启动失败，提示错误：libGL error: unable to load driver: i965_dri.so"></a><em>[No.008]</em> Android emulator 启动失败，提示错误：libGL error: unable to load driver: i965_dri.so</h3><ol><li>具体的错误详细信息是：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Cannot launch AVD <span class="keyword">in</span> emulator.</span><br><span class="line">Output:</span><br><span class="line">libGL error: unable to load driver: i965_dri.so</span><br><span class="line">libGL error: driver pointer missing</span><br><span class="line">libGL error: failed to load driver: i965</span><br><span class="line">libGL error: unable to load driver: i965_dri.so</span><br><span class="line">libGL error: driver pointer missing</span><br><span class="line">libGL error: failed to load driver: i965</span><br><span class="line">libGL error: unable to load driver: swrast_dri.so</span><br><span class="line">libGL error: failed to load driver: swrast</span><br><span class="line">X Error of failed request:  GLXBadContext</span><br><span class="line">  Major opcode of failed request:  155 (GLX)</span><br><span class="line">  Minor opcode of failed request:  6 (X_GLXIsDirect)</span><br><span class="line">  Serial number of failed request:  55</span><br><span class="line">  Current serial number <span class="keyword">in</span> output stream:  54</span><br><span class="line">libGL error: unable to load driver: i965_dri.so</span><br><span class="line">libGL error: driver pointer missing</span><br><span class="line">libGL error: failed to load driver: i965</span><br><span class="line">libGL error: unable to load driver: i965_dri.so</span><br><span class="line">libGL error: driver pointer missing</span><br><span class="line">libGL error: failed to load driver: i965</span><br><span class="line">libGL error: unable to load driver: swrast_dri.so</span><br><span class="line">libGL error: failed to load driver: swrast</span><br><span class="line">X Error of failed request:  GLXBadContext</span><br><span class="line">  Major opcode of failed request:  155 (GLX)</span><br><span class="line">  Minor opcode of failed r</span><br></pre></td></tr></table></figure><p>2.解决方法如下：（Linux）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Android/Sdk/tools/lib64/libstdc++/</span><br><span class="line">mv libstdc++.so.6 libstdc++.so.6.bak</span><br><span class="line">ln -s /usr/lib64/libstdc++.so.6</span><br></pre></td></tr></table></figure><hr><h3 id="未完待续～～"><a href="#未完待续～～" class="headerlink" title="未完待续～～"></a>未完待续～～</h3><ul><li>该博文会持续更新，记录遇到的问题与解决问题的方法，希望能够帮到大家。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;意欲如何？&quot;&gt;&lt;a href=&quot;#意欲如何？&quot; class=&quot;headerlink&quot; title=&quot;意欲如何？&quot;&gt;&lt;/a&gt;意欲如何？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;这篇博文取名为&lt;code&gt;“Daily Tips”&lt;/code&gt;，意为&lt;code&gt;日常技巧&lt;/code&gt;
      
    
    </summary>
    
      <category term="技术相关" scheme="https://blog.sunjiajia.com/categories/%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="技巧" scheme="https://blog.sunjiajia.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Android M (API23) 中对权限的授权处理</title>
    <link href="https://blog.sunjiajia.com/2016/04/19/android-m-permissions/"/>
    <id>https://blog.sunjiajia.com/2016/04/19/android-m-permissions/</id>
    <published>2016-04-19T08:16:27.000Z</published>
    <updated>2018-08-02T04:10:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Android M的发布，最重要的提升就是权限的控制，这么多年来Android App的权限滥用状况将逐步得到改善。</p><p>在API 23中，如果我们将<code>compileSdkVersion</code>和<code>targetSdkVersion</code>同时指定为<code>23</code>，而且我们没有显式的提醒用户去授予权限，</p><p>那么将导致App运行的崩溃。</p><p>因此，接下来，就写一个原生的PermissionsUtil工具类，来解决这个问题。</p><hr><h2 id="重要权限列表"><a href="#重要权限列表" class="headerlink" title="重要权限列表"></a>重要权限列表</h2><p><img src="/img/201604/permissions_group.png" alt="API 23提醒用户授予权限"></p><blockquote><p>另外，Android官方手册中也有描述，可以详细阅读：<a href="http://androiddoc.qiniudn.com/preview/features/runtime-permissions.html" target="_blank" rel="noopener">Permissions</a></p></blockquote><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><blockquote><p>我喜欢用Gif动图来直观的展示效果！</p></blockquote><p><img src="/img/201604/android_permissions.gif" alt="API 23提醒用户授予权限"></p><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>ActivityCompat.checkSelfPermission(Activity,String)</li></ul><blockquote><p>检查相应权限是否被授权，被授权返回PERMISSION_GRANTED，否则返回PERMISSION_DENIED。</p></blockquote><ul><li>ActivityCompat.shouldShowRequestPermissionRationale(Activity,String)</li></ul><blockquote><p>该函数的用法，请参看下面代码中的注释。</p></blockquote><ul><li>ActivityCompat.requestPermissions(Activity,String[],int)</li></ul><blockquote><p>对权限字符串数组中的所有权限进行申请授权，如果用户选择了“never ask again”，则不会弹出系统的Permission申请授权对话框。</p></blockquote><ul><li>上面requestPermissions的回调ActivityCompat.OnRequestPermissionsResultCallback</li></ul><blockquote><p>这个回掉的作用，就是根据requestPermissions之后的授权结果，来控制授权。例如，对没有授权的权限进行再次申请授权等等。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>PermissionsUtil工具类</li></ul><blockquote><p>它的源码地址，谢谢star一下： <a href="https://github.com/opengit/MonkeyAndroid/blob/master/app/src/main/java/com/sunjiajia/monkeyandroid/utils/PermissionsUtil.java" target="_blank" rel="noopener"> PermissionsUtil工具类</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  *</span></span><br><span class="line"><span class="comment"> *  *  * ===================================</span></span><br><span class="line"><span class="comment"> *  *  * Copyright (c) 2016.</span></span><br><span class="line"><span class="comment"> *  *  * 作者：安卓猴</span></span><br><span class="line"><span class="comment"> *  *  * 微博：@安卓猴</span></span><br><span class="line"><span class="comment"> *  *  * 博客：http://sunjiajia.com</span></span><br><span class="line"><span class="comment"> *  *  * Github：https://github.com/opengit</span></span><br><span class="line"><span class="comment"> *  *  *</span></span><br><span class="line"><span class="comment"> *  *  * 注意**：如果您使用或者修改该代码，请务必保留此版权信息。</span></span><br><span class="line"><span class="comment"> *  *  * ===================================</span></span><br><span class="line"><span class="comment"> *  *</span></span><br><span class="line"><span class="comment"> *  *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sunjiajia.monkeyandroid.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.provider.Settings;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.Snackbar;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> com.sunjiajia.monkeyandroid.R;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 权限控制工具类：</span></span><br><span class="line"><span class="comment"> * 为了适配API23，即Android M 在清单文件中配置use permissions后，还要在程序运行的时候进行申请。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ***整个权限的申请与处理的过程是这样的：</span></span><br><span class="line"><span class="comment"> * *****1.进入主Activity，首先申请所有的权限；</span></span><br><span class="line"><span class="comment"> * *****2.用户对权限进行授权，有2种情况：</span></span><br><span class="line"><span class="comment"> * ********1).用户Allow了权限，则表示该权限已经被授权，无须其它操作；</span></span><br><span class="line"><span class="comment"> * ********2).用户Deny了权限，则下次启动Activity会再次弹出系统的Permisssions申请授权对话框。</span></span><br><span class="line"><span class="comment"> * *****3.如果用户Deny了权限，那么下次再次进入Activity，会再次申请权限，这次的权限对话框上，会有一个选项“never ask again”：</span></span><br><span class="line"><span class="comment"> * ********1).如果用户勾选了“never ask again”的checkbox，下次启动时就必须自己写Dialog或者Snackbar引导用户到应用设置里面去手动授予权限；</span></span><br><span class="line"><span class="comment"> * ********2).如果用户未勾选上面的选项，若选择了Allow，则表示该权限已经被授权，无须其它操作；</span></span><br><span class="line"><span class="comment"> * ********3).如果用户未勾选上面的选项，若选择了Deny，则下次启动Activity会再次弹出系统的Permisssions申请授权对话框。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionsUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 状态码、标志位</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_STATUS_CODE = <span class="number">0x001</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_PERMISSION_SETTING = <span class="number">0x002</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//常量字符串数组，将需要申请的权限写进去，同时必须要在Androidmanifest.xml中声明。</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String[] PERMISSIONS_GROUP = &#123;</span><br><span class="line">      Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE,</span><br><span class="line">      Manifest.permission.INTERNET, Manifest.permission.CAMERA,</span><br><span class="line">      Manifest.permission.ACCESS_NETWORK_STATE, Manifest.permission.ACCESS_WIFI_STATE,</span><br><span class="line">      Manifest.permission.RECORD_AUDIO, Manifest.permission.WRITE_CONTACTS</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkAndRequestPermissions</span><span class="params">(<span class="keyword">final</span> Activity activity)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个list，用来存放没有被授权的权限</span></span><br><span class="line">    ArrayList&lt;String&gt; denidArray = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历PERMISSIONS_GROUP，将没有被授权的权限存放进denidArray</span></span><br><span class="line">    <span class="keyword">for</span> (String permission : PERMISSIONS_GROUP) &#123;</span><br><span class="line">      <span class="keyword">int</span> grantCode = ActivityCompat.checkSelfPermission(activity, permission);</span><br><span class="line">      <span class="keyword">if</span> (grantCode == PackageManager.PERMISSION_DENIED) &#123;</span><br><span class="line">        denidArray.add(permission);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将denidArray转化为字符串数组，方便下面调用requestPermissions来请求授权</span></span><br><span class="line">    String[] denidPermissions = denidArray.toArray(<span class="keyword">new</span> String[denidArray.size()]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果该字符串数组长度大于0，说明有未被授权的权限</span></span><br><span class="line">    <span class="keyword">if</span> (denidPermissions.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 遍历denidArray，用showRationaleUI来判断，每一个没有得到授权的权限是否是用户手动拒绝的</span></span><br><span class="line">      <span class="keyword">for</span> (String permission : denidArray) &#123;</span><br><span class="line">        <span class="comment">// 如果permission是用户手动拒绝的，则用SnackBar来引导用户进入App设置页面，手动授予权限</span></span><br><span class="line">        <span class="keyword">if</span> (!showRationaleUI(activity, permission)) &#123;</span><br><span class="line">          <span class="comment">// 判断App是否是首次启动</span></span><br><span class="line">          <span class="keyword">if</span> (!isAppFirstRun(activity)) &#123;</span><br><span class="line">            Snackbar snackbar =</span><br><span class="line">                Snackbar.make(activity.findViewById(R.id.btn_sdcard_avail), <span class="string">"这次是真的需要去授权了"</span>,</span><br><span class="line">                    Snackbar.LENGTH_INDEFINITE);</span><br><span class="line">            snackbar.setAction(<span class="string">"前往设置"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">              <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 进入App设置页面</span></span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);</span><br><span class="line">                Uri uri = Uri.fromParts(<span class="string">"package"</span>, activity.getPackageName(), <span class="keyword">null</span>);</span><br><span class="line">                intent.setData(uri);</span><br><span class="line">                activity.startActivityForResult(intent, REQUEST_PERMISSION_SETTING);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            snackbar.show();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      requestPermissions(activity, denidPermissions);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关于shouldShowRequestPermissionRationale函数的一点儿注意事项：</span></span><br><span class="line"><span class="comment">   * ***1).应用安装后第一次访问，则直接返回false；</span></span><br><span class="line"><span class="comment">   * ***2).第一次请求权限时，用户Deny了，再次调用shouldShowRequestPermissionRationale()，则返回true；</span></span><br><span class="line"><span class="comment">   * ***3).第二次请求权限时，用户Deny了，并选择了“never ask again”的选项时，再次调用shouldShowRequestPermissionRationale()时，返回false；</span></span><br><span class="line"><span class="comment">   * ***4).设备的系统设置中，禁止了应用获取这个权限的授权，则调用shouldShowRequestPermissionRationale()，返回false。</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">showRationaleUI</span><span class="params">(Activity activity, String permission)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ActivityCompat.shouldShowRequestPermissionRationale(activity, permission);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 对权限字符串数组中的所有权限进行申请授权，如果用户选择了“never ask again”，则不会弹出系统的Permission申请授权对话框</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requestPermissions</span><span class="params">(Activity activity, String[] permissions)</span> </span>&#123;</span><br><span class="line">    ActivityCompat.requestPermissions(activity, permissions, REQUEST_STATUS_CODE);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 用来判断，App是否是首次启动：</span></span><br><span class="line"><span class="comment">   * ***由于每次调用shouldShowRequestPermissionRationale得到的结果因情况而变，因此必须判断一下App是否首次启动，才能控制好出现Dialog和SnackBar的时机</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isAppFirstRun</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">    SharedPreferences sp = activity.getSharedPreferences(<span class="string">"config"</span>, Context.MODE_PRIVATE);</span><br><span class="line">    SharedPreferences.Editor editor = sp.edit();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sp.getBoolean(<span class="string">"first_run"</span>, <span class="keyword">true</span>)) &#123;</span><br><span class="line">      editor.putBoolean(<span class="string">"first_run"</span>, <span class="keyword">false</span>);</span><br><span class="line">      editor.commit();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      editor.putBoolean(<span class="string">"first_run"</span>, <span class="keyword">false</span>);</span><br><span class="line">      editor.commit();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>AndroidManifest.xml中也要声明之前指定的权限</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECORD_AUDIO"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span>/&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>这个工具类的用法非常简单，在SplashActivity中或者MainActivity中调用即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermissionsUtil.checkAndRequestPermissions(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="OvEr…"><a href="#OvEr…" class="headerlink" title="OvEr…"></a>OvEr…</h2><p>最近一直在忙，博文更新较慢。。。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Android M的发布，最重要的提升就是权限的控制，这么多年来Android App的权限滥用状况将逐步得到改善。&lt;/p&gt;
&lt;p&gt;在API
      
    
    </summary>
    
      <category term="Android新手" scheme="https://blog.sunjiajia.com/categories/Android%E6%96%B0%E6%89%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第15课Spinner和AutoCompleteTextView</title>
    <link href="https://blog.sunjiajia.com/2016/04/11/monkey-android-15/"/>
    <id>https://blog.sunjiajia.com/2016/04/11/monkey-android-15/</id>
    <published>2016-04-11T13:50:27.000Z</published>
    <updated>2018-08-02T04:09:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>Spinner的用法</li><li>AutoCompleteTextView的用法</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/opengit/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/opengit/MonkeyAndroid</a></p></blockquote><hr><h2 id="Spinner的用法"><a href="#Spinner的用法" class="headerlink" title="Spinner的用法"></a>Spinner的用法</h2><p><code>Spinner</code>，俗称下拉列表，它提供了一组固定的值或选项，允许用户从中选择一个作为默认的状态。</p><h2 id="AutoCompleteTextView的用法"><a href="#AutoCompleteTextView的用法" class="headerlink" title="AutoCompleteTextView的用法"></a>AutoCompleteTextView的用法</h2><p><code>AutoCompleteTextView</code>，自动完成文本框，用户在输入时给予补全提醒。</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/img/201604/spinner_autocompletetextview_01.png" alt="Spinner和AutoCompleteTextView"><br><img src="/img/201604/spinner_autocompletetextview_02.png" alt="Spinner和AutoCompleteTextView"></p><h2 id="Activity的源码"><a href="#Activity的源码" class="headerlink" title="Activity的源码"></a>Activity的源码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunjiajia.monkeyandroid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.AutoCompleteTextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Spinner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by monkey on 1/3/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpinnerAutoCompleteTextViewActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">giveViewResId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> R.layout.activity_spinner_autocompletetextview;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Spinner mSpinnerCity;</span><br><span class="line">  <span class="keyword">private</span> String[] mDatas;</span><br><span class="line">  <span class="keyword">private</span> AutoCompleteTextView tvAc;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    intViews();</span><br><span class="line">    initData();</span><br><span class="line">    confingViews();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">confingViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    setSpinner();</span><br><span class="line">    setAutoCompleteTextView();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setAutoCompleteTextView</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ArrayAdapter&lt;CharSequence&gt; adapter03 =</span><br><span class="line">        ArrayAdapter.createFromResource(<span class="keyword">this</span>, R.array.av_male, android.R.layout.simple_list_item_1);</span><br><span class="line">    tvAc.setAdapter(adapter03);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setSpinner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//通过适配器来进行动态的数据填充</span></span><br><span class="line">    <span class="comment">// 第一种：</span></span><br><span class="line"><span class="comment">/*    ArrayAdapter&lt;String&gt; adapter01 =</span></span><br><span class="line"><span class="comment">        new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_spinner_dropdown_item, mDatas);</span></span><br><span class="line"><span class="comment">    mSpinnerCity.setAdapter(adapter01);*/</span></span><br><span class="line"></span><br><span class="line">    ArrayAdapter&lt;CharSequence&gt; adapter02 = ArrayAdapter.createFromResource(<span class="keyword">this</span>, R.array.city,</span><br><span class="line">        android.R.layout.simple_list_item_1);</span><br><span class="line">    mSpinnerCity.setAdapter(adapter02);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">intViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mSpinnerCity = (Spinner) findViewById(R.id.spinner_city);</span><br><span class="line">    tvAc = (AutoCompleteTextView) findViewById(R.id.tv_autocomplete);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mDatas = <span class="keyword">new</span> String[] &#123; <span class="string">"动态数据Spinner"</span>, <span class="string">"北京"</span>, <span class="string">"上海"</span>, <span class="string">"深圳"</span>, <span class="string">"广州"</span>, <span class="string">"洛杉矶"</span>, <span class="string">"纽约"</span>, <span class="string">"华盛顿"</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="布局文件XML的源码"><a href="#布局文件XML的源码" class="headerlink" title="布局文件XML的源码"></a>布局文件XML的源码</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       android:entries="@array/av_male"</span></span><br><span class="line"><span class="comment">          用来绑定静态的array数据。</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Spinner</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/spinner_male"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:entries</span>=<span class="string">"@array/av_male"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Spinner</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/spinner_city"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      android:completionThreshold="1"</span></span><br><span class="line"><span class="comment">        用来设置第几个字符开始提示；</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">AutoCompleteTextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/tv_autocomplete"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:completionThreshold</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:hint</span>=<span class="string">"请输入侍寝的女优名字"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="values-arrays-xml源码"><a href="#values-arrays-xml源码" class="headerlink" title="values/arrays.xml源码"></a>values/arrays.xml源码</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">array</span> <span class="attr">name</span>=<span class="string">"av_male"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>静态数据Spinner<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>苍井空<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>苍小妹<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>苍二妹<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>朝桐光<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>朝小姐<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>朝美女<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>小泽玛利亚<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>小仓美女<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>西翔野<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>西门庆<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>孙静雅<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>波多野结衣<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>菠萝菠萝蜜<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">array</span> <span class="attr">name</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>动态填充数据2<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>洛杉矶<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>纽约<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>华盛顿<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们主要学习了Spinner和AutoCompleteTextView，希望能够在实际中加以运用！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Spinner的用法&lt;/li&gt;
&lt;li&gt;AutoCompleteTextView的用法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;blockquo
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第14课ToggleButton和RatingBar</title>
    <link href="https://blog.sunjiajia.com/2016/04/11/monkey-android-14/"/>
    <id>https://blog.sunjiajia.com/2016/04/11/monkey-android-14/</id>
    <published>2016-04-11T12:50:27.000Z</published>
    <updated>2018-08-02T04:09:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>ToggleButton的用法</li><li>RatingBar的用法</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/opengit/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/opengit/MonkeyAndroid</a></p></blockquote><hr><h2 id="ToggleButton的用法"><a href="#ToggleButton的用法" class="headerlink" title="ToggleButton的用法"></a>ToggleButton的用法</h2><p><code>ToggleButton</code>，状态开关按钮，例如ON/OFF，它允许用户在两者之间进行切换。<br><code>Switch</code>，开关，类似于生活中的白色墙壁开关。</p><h2 id="RatingBar的用法"><a href="#RatingBar的用法" class="headerlink" title="RatingBar的用法"></a>RatingBar的用法</h2><p><code>RatingBar</code>，它是SeekBar和ProgressBar的扩展，用星型来显示等级评定。</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="/img/201604/togglebutton_radiobar.png" alt="ToggleButton和RatingBar"></p><h2 id="Activity源码"><a href="#Activity源码" class="headerlink" title="Activity源码"></a>Activity源码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunjiajia.monkeyandroid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.widget.CompoundButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.RatingBar;</span><br><span class="line"><span class="keyword">import</span> android.widget.Switch;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.ToggleButton;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by monkey on 1/2/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToggleButtonRadioBarActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">CompoundButton</span>.<span class="title">OnCheckedChangeListener</span>, <span class="title">RatingBar</span>.<span class="title">OnRatingBarChangeListener</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">giveViewResId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> R.layout.activity_togglebutton_radiobar;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> ToggleButton mTb;</span><br><span class="line">  <span class="keyword">private</span> Switch mSwitch;</span><br><span class="line">  <span class="keyword">private</span> RatingBar mRb;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    mTb = (ToggleButton) findViewById(R.id.toggle_button);</span><br><span class="line">    mSwitch = (Switch) findViewById(R.id.switch_button);</span><br><span class="line">    mRb = (RatingBar) findViewById(R.id.rating_bar);</span><br><span class="line"></span><br><span class="line">    mTb.setOnCheckedChangeListener(<span class="keyword">this</span>);</span><br><span class="line">    mSwitch.setOnCheckedChangeListener(<span class="keyword">this</span>);</span><br><span class="line">    mRb.setOnRatingBarChangeListener(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ToggleButton和Switch的事件监听</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (buttonView.getId()) &#123;</span><br><span class="line">      <span class="keyword">case</span> R.id.toggle_button:</span><br><span class="line">        showToast(isChecked);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> R.id.switch_button:</span><br><span class="line">        showToast(isChecked);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(<span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isChecked) &#123;</span><br><span class="line">      Toast.makeText(ToggleButtonRadioBarActivity.<span class="keyword">this</span>, <span class="string">"开"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Toast.makeText(ToggleButtonRadioBarActivity.<span class="keyword">this</span>, <span class="string">"关"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * RatingBar的事件监听方法</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRatingChanged</span><span class="params">(RatingBar ratingBar, <span class="keyword">float</span> rating, <span class="keyword">boolean</span> fromUser)</span> </span>&#123;</span><br><span class="line">    Toast.makeText(ToggleButtonRadioBarActivity.<span class="keyword">this</span>, <span class="string">"获得了#"</span> + rating + <span class="string">"#星好评！"</span>, Toast.LENGTH_SHORT)</span><br><span class="line">        .show();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="布局文件xml源码"><a href="#布局文件xml源码" class="headerlink" title="布局文件xml源码"></a>布局文件xml源码</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      android:textOff="关闭"</span></span><br><span class="line"><span class="comment">        用来设置关闭状态时的文字显示；</span></span><br><span class="line"><span class="comment">      android:textOn="打开"</span></span><br><span class="line"><span class="comment">        用来设置打开状态时的文字显示；</span></span><br><span class="line"><span class="comment">      android:checked="true"</span></span><br><span class="line"><span class="comment">        true表示默认状态为打开，false表示默认状态为关闭。</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ToggleButton</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/toggle_button"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"ToggleButton"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textOff</span>=<span class="string">"关闭"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textOn</span>=<span class="string">"打开"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Switch</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/switch_button"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"Switch"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      android:numStars="5"</span></span><br><span class="line"><span class="comment">        用来设置星型的个数；</span></span><br><span class="line"><span class="comment">      android:rating="1.5"</span></span><br><span class="line"><span class="comment">        默认选定的星型个数，可为小数；</span></span><br><span class="line"><span class="comment">      android:stepSize="0.5"</span></span><br><span class="line"><span class="comment">        用来设置星型改变时的步频。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      注意：</span></span><br><span class="line"><span class="comment">          如果设置了android:numStars，那么android:layout_width必须设置为wrap_content</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">RatingBar</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/rating_bar"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:numStars</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:rating</span>=<span class="string">"1.5"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:stepSize</span>=<span class="string">"0.5"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们主要学习了ToggleButton和RatingBar，前者在App的设置页面，后者在商店商品的评分方面，应用都是十分广泛的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ToggleButton的用法&lt;/li&gt;
&lt;li&gt;RatingBar的用法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第13课CheckBox和RadioButton</title>
    <link href="https://blog.sunjiajia.com/2016/04/11/monkey-android-13/"/>
    <id>https://blog.sunjiajia.com/2016/04/11/monkey-android-13/</id>
    <published>2016-04-11T11:50:27.000Z</published>
    <updated>2018-08-02T04:09:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>CheckBox的用法</li><li>RadioButton的用法</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/opengit/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/opengit/MonkeyAndroid</a></p></blockquote><hr><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/img/201604/checkbox_radiobbutton.png" alt="CheckBox和RadioButton"></p><h2 id="CheckBox和RadioButton的用法"><a href="#CheckBox和RadioButton的用法" class="headerlink" title="CheckBox和RadioButton的用法"></a>CheckBox和RadioButton的用法</h2><p><code>CheckBox</code>，复选框，它允许用户选择一个或者多个。<br><code>RadioButton</code>，单选按钮，只能选取一个选项。</p><h2 id="xml文件源码："><a href="#xml文件源码：" class="headerlink" title="xml文件源码："></a>xml文件源码：</h2><blockquote><p>一些用到的xml属性的含义已经在注释中给出。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/checkbox_xiaoshuo"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"小说"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/checkbox_youxi"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"游戏"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/checkbox_dianying"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"电影"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      这里是一个1dp高度view，用做一个分割线</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"1dp"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      android:checkedButton="@+id/radiobutton_apple"</span></span><br><span class="line"><span class="comment">          表示默认选中的RadioButton；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      android:orientation="horizontal"</span></span><br><span class="line"><span class="comment">          表示RadioGroup中的RadioButton的是竖直排列还是水平排列</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/radio_group"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:checkedButton</span>=<span class="string">"@+id/radiobutton_apple"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/radiobutton_banana"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"香蕉"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/radiobutton_apple"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"苹果"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/radiobutton_orange"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"橘子"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Activity中的源码："><a href="#Activity中的源码：" class="headerlink" title="Activity中的源码："></a>Activity中的源码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunjiajia.monkeyandroid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.widget.CheckBox;</span><br><span class="line"><span class="keyword">import</span> android.widget.CompoundButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.RadioButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.RadioGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by monkey on 1/1/16.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 实现了CheckButton的接口CompoundButton.OnCheckedChangeListener</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 实现了RadioGroup的接口RadioGroup.OnCheckedChangeListener</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckBoxRadioButtonActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">CompoundButton</span>.<span class="title">OnCheckedChangeListener</span>, <span class="title">RadioGroup</span>.<span class="title">OnCheckedChangeListener</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">giveViewResId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> R.layout.activity_checkbox_radiobutton;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> CheckBox mCbXs, mCbYx, mCbDy;</span><br><span class="line">  <span class="keyword">private</span> RadioGroup mRg;</span><br><span class="line">  <span class="keyword">private</span> RadioButton mRbBanana, mRbApple, mRbOrange;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">    initViews();</span><br><span class="line"></span><br><span class="line">    configViews();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 配置各种控件，在这里只是设置了绑定了监听事件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">configViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mCbXs.setOnCheckedChangeListener(<span class="keyword">this</span>);</span><br><span class="line">    mCbYx.setOnCheckedChangeListener(<span class="keyword">this</span>);</span><br><span class="line">    mCbDy.setOnCheckedChangeListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    mRg.setOnCheckedChangeListener(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * init各种控件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mCbXs = (CheckBox) findViewById(R.id.checkbox_xiaoshuo);</span><br><span class="line">    mCbYx = (CheckBox) findViewById(R.id.checkbox_youxi);</span><br><span class="line">    mCbDy = (CheckBox) findViewById(R.id.checkbox_dianying);</span><br><span class="line"></span><br><span class="line">    mRg = (RadioGroup) findViewById(R.id.radio_group);</span><br><span class="line"></span><br><span class="line">    mRbBanana = (RadioButton) findViewById(R.id.radiobutton_banana);</span><br><span class="line">    mRbApple = (RadioButton) findViewById(R.id.radiobutton_apple);</span><br><span class="line">    mRbOrange = (RadioButton) findViewById(R.id.radiobutton_orange);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * CheckBox的监听事件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (buttonView.getId()) &#123;</span><br><span class="line">      <span class="keyword">case</span> R.id.checkbox_xiaoshuo:</span><br><span class="line">        checkedShowToast(buttonView, isChecked);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> R.id.checkbox_youxi:</span><br><span class="line">        checkedShowToast(buttonView, isChecked);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> R.id.checkbox_dianying:</span><br><span class="line">        checkedShowToast(buttonView, isChecked);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * RadioGroup的监听事件</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (checkedId) &#123;</span><br><span class="line">      <span class="keyword">case</span> R.id.radiobutton_banana:</span><br><span class="line">        radioGroupChecked(mRbBanana);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> R.id.radiobutton_apple:</span><br><span class="line">        radioGroupChecked(mRbApple);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> R.id.radiobutton_orange:</span><br><span class="line">        radioGroupChecked(mRbOrange);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">radioGroupChecked</span><span class="params">(RadioButton button)</span> </span>&#123;</span><br><span class="line">    Toast.makeText(CheckBoxRadioButtonActivity.<span class="keyword">this</span>, <span class="string">"您选中了#"</span> + button.getText().toString() + <span class="string">"#"</span>,</span><br><span class="line">        Toast.LENGTH_SHORT).show();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkedShowToast</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isChecked) &#123;</span><br><span class="line">      Toast.makeText(CheckBoxRadioButtonActivity.<span class="keyword">this</span>,</span><br><span class="line">          <span class="string">"您选中了#"</span> + buttonView.getText().toString() + <span class="string">"#"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Toast.makeText(CheckBoxRadioButtonActivity.<span class="keyword">this</span>,</span><br><span class="line">          <span class="string">"您取消了#"</span> + buttonView.getText().toString() + <span class="string">"#"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们主要学习了CheckBox和RadioButton的用法，CheckBox主要用于多选或者全选的场景，RadioButton主要用于有限选项而且仅允许单选的场景。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;CheckBox的用法&lt;/li&gt;
&lt;li&gt;RadioButton的用法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;运
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第12课ImageView</title>
    <link href="https://blog.sunjiajia.com/2016/04/11/monkey-android-12/"/>
    <id>https://blog.sunjiajia.com/2016/04/11/monkey-android-12/</id>
    <published>2016-04-11T10:50:27.000Z</published>
    <updated>2018-08-02T04:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>ImageView的用法</li><li>ImageView的XML属性</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/opengit/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/opengit/MonkeyAndroid</a></p></blockquote><hr><h2 id="ImageView的用法"><a href="#ImageView的用法" class="headerlink" title="ImageView的用法"></a>ImageView的用法</h2><p><code>ImageView</code>顾名思义，就是<code>图片视图</code>，用来显示静态图片。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/imageview_normal"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:background</span>=<span class="string">"@android:color/black"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:onClick</span>=<span class="string">"ivClicked"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:src</span>=<span class="string">"@mipmap/super_dog"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/imageview_super"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:adjustViewBounds</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:background</span>=<span class="string">"@android:color/black"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:maxHeight</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:maxWidth</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:onClick</span>=<span class="string">"ivClicked"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:src</span>=<span class="string">"@mipmap/super_dog"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure><p>效果图如下：</p><p><img src="/img/201604/imageview.png" alt="ImageView效果图"></p><h2 id="ImageView的XML属性"><a href="#ImageView的XML属性" class="headerlink" title="ImageView的XML属性"></a>ImageView的XML属性</h2><ul><li><code>android:src</code>，设置ImageView要显示的图片；</li><li><code>android:adjustViewBounds</code>，是否保持宽高比，需要和maxWidth、maxHeight一起使用，否则单独使用没有效果；</li><li><code>android:maxWidth</code>，设置View的最大宽度；</li><li><code>android:maxHeight</code>，设置View的最大高度；</li></ul><blockquote><p>如果想设置图片固定大小，又想保持图片宽高比，需要这样设置：</p></blockquote><ol><li><code>android:adjustViewBounds</code>设置为<code>true</code>；</li><li><code>android:maxWidth</code>和<code>android:maxHeight</code>要设置；</li><li><code>android:layout_width</code>和<code>android:layout_height</code>设置为<code>wrap_content</code>。</li></ol><ul><li><code>android:scaleType</code>是设置<code>图片的填充方式</code>，有以下用法：</li></ul><ol><li>android:scaleType=”center”，按图片的原来size居中显示，当图片长/宽超过View的长/宽，则截取图片的居中部分显示</li><li>android:scaleType=”centerCrop”，按比例扩大图片的size居中显示，使得图片长(宽)等于或大于View的长(宽)</li><li>android:scaleType=”centerInside”，将图片的内容完整居中显示，通过按比例缩小或原来的size使得图片长(宽)等于或小于View的长(宽)</li><li>android:scaleType=”fitCenter”，把图片按比例扩大(缩小)到View的宽度，居中显示</li><li>android:scaleType=”fitEnd”，把图片按比例扩大(缩小)到View的宽度，显示在View的下部分位置</li><li>android:scaleType=”fitStart”，把图片按比例扩大(缩小)到View的宽度，显示在View的上部分位置</li><li>android:scaleType=”fitXY”，把图片按照指定的大小在View中显示</li><li>android:scaleType=”matrix”，用matrix来绘制</li></ol><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们主要学习了ImageView，不过它的功能有限，只能显示静态图片。在实际需求中，我们可能会用到更高级的用法，如显示圆形头像，或者动态的gif，又或者图片的缩放与缩略图等等，这些就需要我们自己取实现ImageView了，后面都会讲到。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ImageView的用法&lt;/li&gt;
&lt;li&gt;ImageView的XML属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第11课Button和ImageButton</title>
    <link href="https://blog.sunjiajia.com/2015/12/09/monkey-android-11/"/>
    <id>https://blog.sunjiajia.com/2015/12/09/monkey-android-11/</id>
    <published>2015-12-09T10:50:27.000Z</published>
    <updated>2018-08-02T04:08:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>Button的用法</li><li>Button的样式</li><li>ImageButton的用法</li><li>点击事件的写法（之前已经讲过，不知还会否？）</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/opengit/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/opengit/MonkeyAndroid</a></p></blockquote><hr><h2 id="Button的用法"><a href="#Button的用法" class="headerlink" title="Button的用法"></a>Button的用法</h2><blockquote><p>按钮，可以按下它，或者点击，由用户来执行一个动作或者操作。</p></blockquote><p>Button的xml写法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/btn_btn"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:drawableLeft</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:onClick</span>=<span class="string">"btnClicked"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:text</span>=<span class="string">"安卓猴是Button"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:textSize</span>=<span class="string">"26sp"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure><p>上面使用的Button的xml属性介绍：</p><ul><li>android:layout_gravity=”center_horizontal”</li></ul><p>代表当前Button的位置要<code>水平居中</code>；</p><ul><li>android:drawableLeft=”@mipmap/ic_launcher”</li></ul><p>表示当前的Button中文字左边的一个小图标；</p><ul><li>android:onClick=”btnClicked”</li></ul><p>点击事件的其中一个写法。</p><h2 id="Button的样式"><a href="#Button的样式" class="headerlink" title="Button的样式"></a>Button的样式</h2><p>这里用selector选择器来定义Button的样式，实现自定义的点击响应效果。</p><ol><li>在<code>res</code>目录下新建一个<code>drawable</code>文件夹；</li><li><p>在<code>drawable</code>文件夹上右击鼠标，选择<code>New</code>，再选择<code>Drawable Resource file</code>，弹出对话框，输入文件名字为<code>bg_btn</code>，如图：</p></li><li><p>打开<code>bg_btn.xml</code>文件，里面的内容为，实现的效果为默认状态下是<code>holo_blue_bright</code>颜色，按下状态的颜色是<code>holo_red_light</code>：</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@android:color/holo_red_light"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@android:color/holo_blue_bright"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中的<code>item</code>标签，用来定义Button的不同状态下显示的<code>drawable</code>，它可以是<code>图片或者颜色值</code>，关于状态有如下几个：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;   </span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 默认时的背景图片--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@drawable/image1"</span> /&gt;</span>    </span><br><span class="line"><span class="comment">&lt;!-- 没有焦点时的背景图片 --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_window_focused</span>=<span class="string">"false"</span>   </span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawable</span>=<span class="string">"@drawable/image2"</span> /&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!-- 非触摸模式下获得焦点并单击时的背景图片 --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_focused</span>=<span class="string">"true"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>   <span class="attr">android:drawable</span>= <span class="string">"@drawable/image3"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 触摸模式下单击时的背景图片--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_focused</span>=<span class="string">"false"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>   <span class="attr">android:drawable</span>=<span class="string">"@drawable/image4"</span> /&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--选中时的图片背景--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_selected</span>=<span class="string">"true"</span>   <span class="attr">android:drawable</span>=<span class="string">"@drawable/image5"</span> /&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!--获得焦点时的图片背景--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_focused</span>=<span class="string">"true"</span>   <span class="attr">android:drawable</span>=<span class="string">"@drawable/image6"</span> /&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ImageButton的用法"><a href="#ImageButton的用法" class="headerlink" title="ImageButton的用法"></a>ImageButton的用法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageButton</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:onClick</span>=<span class="string">"btnClicked"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/imagebtn"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>android:src=&quot;@mipmap/ic_launcher&quot;</code>用来设定ImageButton中的图片。</li></ul><h2 id="效果Gif"><a href="#效果Gif" class="headerlink" title="效果Gif"></a>效果Gif</h2><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们主要学习了Button和Button的样式以及ImageButton的简单用法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Button的用法&lt;/li&gt;
&lt;li&gt;Button的样式&lt;/li&gt;
&lt;li&gt;ImageButton的用法&lt;/li&gt;
&lt;li&gt;点击事件的写法（之前已经讲过，不知还会否？）&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第10课TextView和EditText</title>
    <link href="https://blog.sunjiajia.com/2015/12/08/monkey-android-10/"/>
    <id>https://blog.sunjiajia.com/2015/12/08/monkey-android-10/</id>
    <published>2015-12-08T13:50:27.000Z</published>
    <updated>2018-08-02T04:08:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>TextView的用法</li><li>EditText的用法</li><li>登陆框实例</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/git0pen/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/git0pen/MonkeyAndroid</a></p></blockquote><hr><h2 id="TextView的用法"><a href="#TextView的用法" class="headerlink" title="TextView的用法"></a>TextView的用法</h2><blockquote><p>顾名思义，TextView就是文字视图，即显示文字的控件。</p></blockquote><p>TextView的xml写法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">"@+id/tv_login"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:autoLink</span>=<span class="string">"all"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:background</span>=<span class="string">"@android:color/holo_green_dark"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:text</span>=<span class="string">"登陆Login"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:textAllCaps</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:textColor</span>=<span class="string">"@android:color/holo_red_dark"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure><p>在Activity中的onCreate方法中使用它：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TextView mTextView = (TextView) findViewById(R.id.tv_login);</span><br><span class="line">mTextView.setText(<span class="string">"我是登陆框"</span>);</span><br></pre></td></tr></table></figure><h2 id="EditText的用法"><a href="#EditText的用法" class="headerlink" title="EditText的用法"></a>EditText的用法</h2><blockquote><p>输入文本框，它是用户和Android系统进行数据交换的窗口。</p></blockquote><p>EditText有几个特点：</p><ul><li><p>EditText是TextView的之类，所以TextView的方法和特性同样存在于EditText中；</p></li><li><p>有两个常用的监听事件：<code>addTextChangedListener</code> 和  <code>setOnEditorActionListener</code>;</p></li></ul><p>下面的代码，实现了一个只有界面的登陆框：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:weightSum</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/tv_login"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:autoLink</span>=<span class="string">"all"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@android:color/holo_green_dark"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"登陆Login"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textAllCaps</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"@android:color/holo_red_dark"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">TableLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_below</span>=<span class="string">"@id/image_view"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:stretchColumns</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/text_view_uname"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"用户名："</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"16sp"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/et_uname"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"不能为空"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/text_view_pwd"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"密码："</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"16sp"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/et_pwd"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">"不能为空"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"right"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_span</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">"@+id/btn_login"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">"登陆"</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">"注册"</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们学习了TextView和EditText，它们的xml属性和函数方法还有很多，还需要你在练习的时候，耐心琢磨。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;TextView的用法&lt;/li&gt;
&lt;li&gt;EditText的用法&lt;/li&gt;
&lt;li&gt;登陆框实例&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;bloc
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第9课Toast土司</title>
    <link href="https://blog.sunjiajia.com/2015/12/06/monkey-android-9/"/>
    <id>https://blog.sunjiajia.com/2015/12/06/monkey-android-9/</id>
    <published>2015-12-06T11:50:27.000Z</published>
    <updated>2018-08-02T04:08:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>Toast显示普通文本</li><li>Toast显示图片</li><li>Toast显示图片和文字</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/git0pen/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/git0pen/MonkeyAndroid</a></p></blockquote><hr><h2 id="Toast显示普通文本"><a href="#Toast显示普通文本" class="headerlink" title="Toast显示普通文本"></a>Toast显示普通文本</h2><blockquote><p>简称土司，它用来在当前app的界面上弹出一个提示信息，并且会自动消失。</p></blockquote><p>看下Toast到底怎么写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(<span class="keyword">this</span>, <span class="string">"我是短时间土司1号！我的显示时长是Toast.LENGTH_SHORT"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">Toast.makeText(<span class="keyword">this</span>, <span class="string">"我是长时间土司2号！我的显示时长是Toast.LENGTH_LONG"</span>, Toast.LENGTH_LONG).show();</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>将上述代码直接放到Activity的onCreate方法中，当Activity启动后，即可显示Toast。关于Activity以及它的方法（生命周期函数），我们今后会专门讲解。</p><h2 id="Toast显示图片"><a href="#Toast显示图片" class="headerlink" title="Toast显示图片"></a>Toast显示图片</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Toast的一个实例</span></span><br><span class="line">Toast toast3 = <span class="keyword">new</span> Toast(<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">// 显示图片的控件ImageView，并且给它设置图片</span></span><br><span class="line">ImageView imageView = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</span><br><span class="line">imageView.setImageResource(R.mipmap.ic_launcher);</span><br><span class="line"><span class="comment">// 将图片控件设置到Toast中</span></span><br><span class="line">toast3.setView(imageView);</span><br><span class="line"><span class="comment">// 设置Toast的显示时间长短</span></span><br><span class="line">toast3.setDuration(Toast.LENGTH_SHORT);</span><br><span class="line"><span class="comment">// 设置Toast显示的位置</span></span><br><span class="line">toast3.setGravity(Gravity.TOP,<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 让Toast显示出来</span></span><br><span class="line">toast3.show();</span><br></pre></td></tr></table></figure><h2 id="Toast显示图片和文字"><a href="#Toast显示图片和文字" class="headerlink" title="Toast显示图片和文字"></a>Toast显示图片和文字</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Toast toast4 = Toast.makeText(<span class="keyword">this</span>, <span class="string">"我是图文土司4号的文字"</span>, Toast.LENGTH_SHORT);</span><br><span class="line"><span class="comment">// 显示图片的控件ImageView，并且给它设置图片</span></span><br><span class="line">ImageView imageView2 = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</span><br><span class="line">imageView2.setImageResource(R.mipmap.ic_launcher);</span><br><span class="line"><span class="comment">// 获得Toast的布局</span></span><br><span class="line">LinearLayout toast4View = (LinearLayout) toast4.getView();</span><br><span class="line"><span class="comment">// 设置此布局为横向的</span></span><br><span class="line">toast4View.setOrientation(LinearLayout.HORIZONTAL);</span><br><span class="line"><span class="comment">// 将图片视图添加到此布局中的第一个位置</span></span><br><span class="line">toast4View.addView(imageView2, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 设置Toast显示的位置</span></span><br><span class="line">toast4.setGravity(Gravity.RIGHT | Gravity.CENTER, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">toast4.show();</span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们学习了一个最简单但是最常用的小控件Toast，关于它的用法也很简单，今后会经常用到，所以你一定会使用的很娴熟的。此外，利用最后一种显示图文的方法，我们可以随时设置自己需要的Toast样式。例如，你可以自定义个更加复杂的View，添加的Toast中去，动手试验一下吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Toast显示普通文本&lt;/li&gt;
&lt;li&gt;Toast显示图片&lt;/li&gt;
&lt;li&gt;Toast显示图片和文字&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;

      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第8课FrameLayout、GridLayout</title>
    <link href="https://blog.sunjiajia.com/2015/12/06/monkey-android-8/"/>
    <id>https://blog.sunjiajia.com/2015/12/06/monkey-android-8/</id>
    <published>2015-12-06T10:50:27.000Z</published>
    <updated>2018-08-02T04:08:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>FrameLayout的用法</li><li>GridLayout的用法</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/git0pen/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/git0pen/MonkeyAndroid</a></p></blockquote><hr><h2 id="FrameLayout"><a href="#FrameLayout" class="headerlink" title="FrameLayout"></a>FrameLayout</h2><blockquote><p>帧布局，在这种布局下，每个添加的子控件都被放在布局的左上角，并覆盖在前一个子控件的上层；此外，FrameLayout中的子控件的位置不能被指定。</p></blockquote><h2 id="GridLayout"><a href="#GridLayout" class="headerlink" title="GridLayout"></a>GridLayout</h2><blockquote><p>自Android4.0版本（API level 14）后，新增的网格布局。</p></blockquote><p><strong>注意：</strong><br>如果要达到网格的效果，推荐使用LinearLayout来实现，因为使用GridLayout会产生如下问题：</p><ul><li>不能同时在(x,y)轴方向上进行控件的对齐；</li><li>当多层布局嵌套的时候会出现性能问题；</li><li>不能稳定地支持一些支持自由编辑布局的工具。</li></ul><h3 id="计算器界面"><a href="#计算器界面" class="headerlink" title="计算器界面"></a>计算器界面</h3><blockquote><p>用GridLayout和Button模仿了一个计算器的按键界面。</p></blockquote><p><img src="/img/201512/gridlayout_calculator.jpg" alt="计算器界面"></p><h2 id="布局源码"><a href="#布局源码" class="headerlink" title="布局源码"></a>布局源码</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"北京"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#898989"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"上海"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#108939"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"22sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"广州"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#103339"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"26sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView4"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"南京"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#efec1c"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"26sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView5"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"东莞"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#ff5e00"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView6"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"深圳"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#ae00ff"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"36sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">GridLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:columnCount</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:rowCount</span>=<span class="string">"6"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"C"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"DEL"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button4"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"/"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button5"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"7"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button6"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"8"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button7"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"9"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button12"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"-"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button8"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button9"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button10"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"6"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button11"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"*"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button13"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"+"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button15"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button16"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button17"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button14"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_gravity</span>=<span class="string">"fill_vertical"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_rowSpan</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"="</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button18"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_columnSpan</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_gravity</span>=<span class="string">"fill_horizontal"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/button19"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"."</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/textView7"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_columnSpan</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_gravity</span>=<span class="string">"fill_horizontal"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_row</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:text</span>=<span class="string">"计算器"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:textSize</span>=<span class="string">"38sp"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们学习了FrameLayout和GridLayout，它们的使用也需要很多技巧。此外，我们要在平时练习的时候多多敲代码，这样才能熟能生巧。</p><p>到这里，所有布局的知识都学习完毕了。接下来，我们就要一起学习各种缤纷的控件了！</p><h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><ul><li>微博：<a href="http://weibo.com/208931921" target="_blank" rel="noopener">@安卓猴</a></li></ul><p><a href="http://weibo.com/u/5358335375?s=6uyXnP" target="_blank"><img border="0" src="http://service.t.sina.com.cn/widget/qmd/5358335375/ec0d271f/1.png"></a></p><ul><li>微信公众号：Android奇想录（android_amazing）</li></ul><p><img src="/img/qrcode_for_android_amazing.jpg" alt="扫描二维码关注公众号"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;FrameLayout的用法&lt;/li&gt;
&lt;li&gt;GridLayout的用法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第7课RelativeLayout、TableLayout</title>
    <link href="https://blog.sunjiajia.com/2015/12/06/monkey-android-7/"/>
    <id>https://blog.sunjiajia.com/2015/12/06/monkey-android-7/</id>
    <published>2015-12-05T23:50:27.000Z</published>
    <updated>2018-08-02T04:07:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>RelativeLayout以及它的相关属性</li><li>TableLayout以及它的特有属性</li></ul></blockquote><hr><p>实例代码:</p><blockquote><p>运行效果参见本课程示例App：安卓猴Demos</p></blockquote><blockquote><p>github地址：<a href="https://github.com/git0pen/MonkeyAndroid" target="_blank" rel="noopener">https://github.com/git0pen/MonkeyAndroid</a></p></blockquote><hr><h2 id="RelativeLayout"><a href="#RelativeLayout" class="headerlink" title="RelativeLayout"></a>RelativeLayout</h2><blockquote><p>顾名思义，RelativeLayout就是相对布局，置于其中的控件在摆放的时候需要<code>相对于</code>布局中的<code>其它控件</code>来摆放。</p></blockquote><h3 id="RelativeLayout相关属性"><a href="#RelativeLayout相关属性" class="headerlink" title="RelativeLayout相关属性"></a>RelativeLayout相关属性</h3><blockquote><p>这些属性十分“众多”，因此大致了解即可，关键是在敲代码的过程中熟练运用。</p></blockquote><table><thead><tr><th>—</th><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>第1组属性</td><td>相对属性</td><td>—</td></tr><tr><td>—</td><td>android:layout_below</td><td>将目标控件置于引用控件的下方</td></tr><tr><td>—</td><td>android:layout_above</td><td>将目标控件置于引用控件的上方</td></tr><tr><td>—</td><td>android:layout_toLeftOf</td><td>将目标控件置于引用控件的左方</td></tr><tr><td>—</td><td>android:layout_toRightOf</td><td>将目标控件置于引用控件的右方</td></tr><tr><td>第2组属性</td><td>对齐属性</td><td>—</td></tr><tr><td>—</td><td>android:layout_alignTop</td><td>目标控件和引用控件的上边缘对齐</td></tr><tr><td>—</td><td>android:layout_alignBottom</td><td>目标控件和引用控件的下边缘对齐</td></tr><tr><td>—</td><td>android:layout_alignLeft</td><td>目标控件与引用控件的左边缘对齐</td></tr><tr><td>—</td><td>android:layout_alignRight</td><td>目标控件与引用控件的右边缘对齐</td></tr><tr><td>—</td><td>android:layout_alignBaseLine</td><td>基于基准线对其，基准线就是我们写英文字母那4行线的第三条</td></tr><tr><td>第3组属性</td><td>这组属性的值是 true 或者 false</td><td>—</td></tr><tr><td>—</td><td>layout_alignParentRight</td><td>是否与父控件的右边缘对齐</td></tr><tr><td>—</td><td>layout_alignParentLeft</td><td>是否与父控件的左边缘对齐</td></tr><tr><td>—</td><td>layout_alignParentTop</td><td>是否与父控件的上边缘对齐</td></tr><tr><td>—</td><td>layout_alignParentBottom</td><td>是否与父控件的下边缘对齐</td></tr><tr><td>第4组属性</td><td>中间属性</td><td>—</td></tr><tr><td>—</td><td>layout_centerInParent</td><td>与父控件在水平方向和垂直方向都对齐</td></tr><tr><td>—</td><td>layout_centerVertical</td><td>与父控件在垂直方向都对齐</td></tr><tr><td>—</td><td>layout_centerHorizontal</td><td>与父控件在水平方向都对齐</td></tr><tr><td>第5组属性</td><td>引用属性</td><td>—</td></tr><tr><td>—</td><td>layout_alignStart</td><td>引用其他控件，表示与控件的开始位置对齐</td></tr><tr><td>—</td><td>layout_alignStop</td><td>引用其他控件，表示与控件的结束位置对齐</td></tr><tr><td>—</td><td>layout_alignParentStart</td><td>取值为true、false，表示与父控件的开始位置对齐</td></tr><tr><td>—</td><td>layout_alignParentStop</td><td>取值为true、false，表示与父控件的结束位置对齐</td></tr></tbody></table><h2 id="TableLayout"><a href="#TableLayout" class="headerlink" title="TableLayout"></a>TableLayout</h2><blockquote><p>顾名思义，TableLayout布局就是<code>表格布局</code>。其实现的效果就如同上面的属性表格一样。</p></blockquote><h2 id="TableLayout的特有属性"><a href="#TableLayout的特有属性" class="headerlink" title="TableLayout的特有属性"></a>TableLayout的特有属性</h2><ul><li><p><code>android:stretchColumns=&quot;1&quot;</code>设置所用行的第二列为扩展列,如果有三列的话，剩余空间由第二列补齐。</p></li><li><p><code>android:shrinkColumns=&quot;1&quot;</code>设置所用行第二列为收缩列。</p></li><li><p><code>android:layout_column=&quot;0&quot;</code>表示当前控件在表格中的第0列，视觉效果上是第1列。</p></li><li><p><code>android:layout_span=&quot;2&quot;</code> 表示当前控件跨了两列。</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/text_view"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignParentStart</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#41c2fa"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"我右边是Button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"#fc0000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"22sp"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_toEndOf</span>=<span class="string">"@+id/text_view"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/text_view"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"我下边是ImageView"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/image_view"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignLeft</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_alignStart</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_below</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">TableLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_below</span>=<span class="string">"@id/image_view"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:stretchColumns</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/text_view_uname"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"用户名："</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"16sp"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/edit_text_uname"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/text_view_pwd"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"密码："</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"16sp"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/editText"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"right"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_span</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">"登陆"</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">"注册"</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>这一节课，我们学习了RelativeLayout和TableLayout的用法，其中前者是必须重点掌握的布局，后者是需要了解的布局；熟练灵活地使用RelativeLayout布局，可以让你在今后的项目开发中对UI的把控更加游刃有余。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;RelativeLayout以及它的相关属性&lt;/li&gt;
&lt;li&gt;TableLayout以及它的特有属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;实例代码:&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Gradle多渠道打包[umeng]</title>
    <link href="https://blog.sunjiajia.com/2015/09/02/gradle-umeng-channels/"/>
    <id>https://blog.sunjiajia.com/2015/09/02/gradle-umeng-channels/</id>
    <published>2015-09-01T23:50:27.000Z</published>
    <updated>2018-08-02T04:07:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>国内<code>Android应用市场</code>品种太多，血统不纯，每次上线App都<code>打包打到手软，上传上到吐血</code>！好在我们有了Android studio和gradle，一条命令打包各种渠道版本App！</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Umeng多渠道"><a href="#Umeng多渠道" class="headerlink" title="Umeng多渠道"></a>Umeng多渠道</h3><p>我们在项目中会使用统计SDK，用的最流行的当属<code>umeng</code>了吧。这里我们就用友盟来说明。<br>用了友盟的App的清单文件<code>AndroidManifest.xml</code>中都会写上<code>meta-data</code>，来区分不同的渠道：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"UMENG_CHANNEL"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"Channel_ID"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>1.将<code>Channel_ID</code>更改为<code>${UMENG_CHANNEL_VALUE}</code>，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"UMENG_CHANNEL"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"$&#123;UMENG_CHANNEL_VALUE&#125;"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>2.在<code>app</code>的<code>build.gradle</code>设置<code>produceFlavors</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">productFlavors &#123;</span><br><span class="line">  xiaomi &#123;</span><br><span class="line">    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]</span><br><span class="line">  &#125;</span><br><span class="line">  qihoo &#123;</span><br><span class="line">    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qihoo"]</span><br><span class="line">  &#125;</span><br><span class="line">  baidu &#123;</span><br><span class="line">    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]</span><br><span class="line">  &#125;</span><br><span class="line">  wandoujia &#123;</span><br><span class="line">    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]</span><br><span class="line">  &#125;</span><br><span class="line">  qq &#123;</span><br><span class="line">    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qq"]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.来看看我在项目中使用的<code>build.gradle</code>文件内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: 'com.android.application'</span><br><span class="line"></span><br><span class="line">def releaseTime() &#123;</span><br><span class="line">  return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">  compileSdkVersion 23</span><br><span class="line">  buildToolsVersion "23.0.0"</span><br><span class="line"></span><br><span class="line">  defaultConfig &#123;</span><br><span class="line">    // 这里的applicationId根据自己的替换</span><br><span class="line">    applicationId "com.sunjiajia.xxxxx"</span><br><span class="line">    minSdkVersion 14</span><br><span class="line">    targetSdkVersion 22</span><br><span class="line">    versionCode 1</span><br><span class="line">    versionName "0.0.1"</span><br><span class="line">    multiDexEnabled true //dex突破65535限制</span><br><span class="line">    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]</span><br><span class="line">  &#125;</span><br><span class="line">  lintOptions &#123;</span><br><span class="line">    disable 'MissingTranslation', 'ExtraTranslation'</span><br><span class="line">    abortOnError false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  signingConfigs &#123;</span><br><span class="line">    // /home/monkey/Projects/AndroidStudioProjects/debug.jks是签名文件所在全路径</span><br><span class="line"></span><br><span class="line">    // debug时打包用的签名</span><br><span class="line">    debug &#123;</span><br><span class="line">      keyAlias 'debug'</span><br><span class="line">      keyPassword '123456'</span><br><span class="line">      storeFile file('/home/monkey/Projects/AndroidStudioProjects/debug.jks')</span><br><span class="line">      storePassword '123456'</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     // release时打包用的签名</span><br><span class="line">    release &#123;</span><br><span class="line">      keyAlias 'monkey'</span><br><span class="line">      keyPassword '123123'</span><br><span class="line">      storeFile file('/home/monkey/Projects/AndroidStudioProjects/monkey.jks')</span><br><span class="line">      storePassword '123123'</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  buildTypes &#123;</span><br><span class="line">    debug &#123;</span><br><span class="line">      // 显示Log</span><br><span class="line">      buildConfigField "boolean", "LOG_DEBUG", "true"</span><br><span class="line"></span><br><span class="line">      versionNameSuffix "-debug"</span><br><span class="line">      minifyEnabled false</span><br><span class="line">      zipAlignEnabled false</span><br><span class="line">      shrinkResources false</span><br><span class="line">      signingConfig signingConfigs.debug</span><br><span class="line">    &#125;</span><br><span class="line">    release &#123;</span><br><span class="line">      // 不显示Log</span><br><span class="line">      buildConfigField "boolean", "LOG_DEBUG", "false"</span><br><span class="line"></span><br><span class="line">      minifyEnabled true</span><br><span class="line">      zipAlignEnabled true</span><br><span class="line">      // 移除无用的resource文件</span><br><span class="line">      shrinkResources true</span><br><span class="line"></span><br><span class="line">      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'</span><br><span class="line">      signingConfig signingConfigs.release</span><br><span class="line"></span><br><span class="line">      applicationVariants.all &#123; variant -&gt;</span><br><span class="line">        variant.outputs.each &#123; output -&gt;</span><br><span class="line">          def outputFile = output.outputFile</span><br><span class="line">          if (outputFile != null &amp;&amp; outputFile.name.endsWith('.apk')) &#123;</span><br><span class="line">            // 输出apk名称为appname_v1.0_2015-09-15_09-57-58_wandoujia.apk</span><br><span class="line">            // 下面的appname改为你自己的app name</span><br><span class="line">            def fileName = "appname_v$&#123;defaultConfig.versionName&#125;_$&#123;releaseTime()&#125;_$&#123;variant.productFlavors[0].name&#125;.apk"</span><br><span class="line">            output.outputFile = new File(outputFile.parent, fileName)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  packagingOptions &#123;</span><br><span class="line">    exclude 'META-INF/DEPENDENCIES.txt'</span><br><span class="line">    exclude 'META-INF/LICENSE.txt'</span><br><span class="line">    exclude 'META-INF/NOTICE.txt'</span><br><span class="line">    exclude 'META-INF/NOTICE'</span><br><span class="line">    exclude 'META-INF/LICENSE'</span><br><span class="line">    exclude 'META-INF/DEPENDENCIES'</span><br><span class="line">    exclude 'META-INF/notice.txt'</span><br><span class="line">    exclude 'META-INF/license.txt'</span><br><span class="line">    exclude 'META-INF/dependencies.txt'</span><br><span class="line">    exclude 'META-INF/LGPL2.1'</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 友盟多渠道打包</span><br><span class="line">  productFlavors &#123;</span><br><span class="line">    xiaomi &#123;</span><br><span class="line">      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]</span><br><span class="line">    &#125;</span><br><span class="line">    qihoo &#123;</span><br><span class="line">      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qihoo"]</span><br><span class="line">    &#125;</span><br><span class="line">    baidu &#123;</span><br><span class="line">      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]</span><br><span class="line">    &#125;</span><br><span class="line">    wandoujia &#123;</span><br><span class="line">      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]</span><br><span class="line">    &#125;</span><br><span class="line">    qq &#123;</span><br><span class="line">      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qq"]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">  testCompile 'junit:junit:4.12'</span><br><span class="line">  compile 'com.android.support:appcompat-v7:23.0.1'</span><br><span class="line">  compile 'com.android.support:design:23.0.1'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="命令创建task"><a href="#命令创建task" class="headerlink" title="命令创建task"></a>命令创建task</h3><p>1.进入项目的根目录：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 打包全部Debug版本</span><br><span class="line">./gradlew assembleDebug</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 打包全部Release版本</span><br><span class="line">./gradlew assembleRelease</span><br></pre></td></tr></table></figure><p>2.<code>assemble</code>和<code>Product Flavor</code> 结合创建指定渠道的任务版本。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打包wandoujia渠道的Release版本和Debug版本</span></span><br><span class="line">./gradlew assembleWandoujia</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打包wandoujia渠道的Release版本</span></span><br><span class="line">./gradlew assembleWandoujiaRelease</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>大家有什么问题，在下面留言就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;国内&lt;code&gt;Android应用市场&lt;/code&gt;品种太多，血统不纯，每次上线App都&lt;code&gt;打包打到手软，上传上到吐血&lt;/code&gt;
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="进阶" scheme="https://blog.sunjiajia.com/tags/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Android &gt;= 4.4 适配沉浸状态栏颜色</title>
    <link href="https://blog.sunjiajia.com/2015/09/02/android-kitkat-translucent-statusbar/"/>
    <id>https://blog.sunjiajia.com/2015/09/02/android-kitkat-translucent-statusbar/</id>
    <published>2015-09-01T23:50:27.000Z</published>
    <updated>2018-08-02T04:07:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Google的Material Design的发布让Android具备了更多的个性化元素，例如，“沉浸式”状态栏。问题来了，那么在低版本Android上可以用吗？</p><p>其实，在Android &gt;= 4.4的版本中，都可以进行“沉浸式”状态栏适配的，只不过效果不太一样，Android &gt;= 5.0 版本中设置更加简单，Android &gt;= 4.4 但 &lt; 5就比较麻烦。</p><p>效果图：<br><img src="/img/201509/statubar-in-lollipop-and-kitkat.jpg" alt="Android &gt;= 4.4 Status Bar"><br><img src="/img/201509/statubar-in-miui.jpg" alt="MIUI Status Bar"></p><h2 id="Android-5-0-实现方法"><a href="#Android-5-0-实现方法" class="headerlink" title="Android 5.0+实现方法"></a>Android 5.0+实现方法</h2><p>参见文章：<a href="http://sunjiajia.com/2015/06/19/android-material-theme-and-toolbar/" target="_blank" rel="noopener">《Android L+ Theme 与 Toolbar 实例》</a></p><h2 id="Android-4-4-实现方法"><a href="#Android-4-4-实现方法" class="headerlink" title="Android 4.4 实现方法"></a>Android 4.4 实现方法</h2><p>1.使用开源库<a href="https://github.com/jgilfelt/SystemBarTint" target="_blank" rel="noopener">SystemBarTint</a></p><p>2.然后在BaseActivity中的OnCreate方法中进行设置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line"></span><br><span class="line">     Window mWindow = getWindow();</span><br><span class="line">     mWindow.setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS,</span><br><span class="line">         WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);</span><br><span class="line">     mWindow.setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION,</span><br><span class="line">         WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);</span><br><span class="line"></span><br><span class="line">     SystemBarTintManager mSystemBarTintManager = <span class="keyword">new</span> SystemBarTintManager(<span class="keyword">this</span>);</span><br><span class="line">     mSystemBarTintManager.setStatusBarTintEnabled(<span class="keyword">true</span>);</span><br><span class="line">     mSystemBarTintManager.setNavigationBarTintEnabled(<span class="keyword">true</span>);</span><br><span class="line">     mSystemBarTintManager.setTintColor(Color.parseColor(<span class="string">"#E03131"</span>));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>文章比较简单，权当记录用吧。最近一直在独立开发一个项目，由于每天时间不多，进度也比较慢。新的App中适配了Material Design，极大的节省了UI的设计时间，况且我还是一个不懂PS的。有兴趣的话，可以交流。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Google的Material Design的发布让Android具备了更多的个性化元素，例如，“沉浸式”状态栏。问题来了，那么在低版本An
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="进阶" scheme="https://blog.sunjiajia.com/tags/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>体验极速Android Sdk更新与下载</title>
    <link href="https://blog.sunjiajia.com/2015/08/16/tencent-bugly-android-sdk-mirror/"/>
    <id>https://blog.sunjiajia.com/2015/08/16/tencent-bugly-android-sdk-mirror/</id>
    <published>2015-08-16T07:50:27.000Z</published>
    <updated>2018-08-02T04:07:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>国内下载或者更新Android SDK的速度奇慢，福利来了，专门解决这个问题。</p><h1 id="2015-09-07更新"><a href="#2015-09-07更新" class="headerlink" title="2015-09-07更新"></a>2015-09-07更新</h1><h2 id="其他源"><a href="#其他源" class="headerlink" title="其他源"></a>其他源</h2><p>部分网友反应，腾讯的Android SDK镜像不可用，再分享一个速度比较快的。</p><p>配置说明：<a href="http://mirrors.neusoft.edu.cn/more.we#android" target="_blank" rel="noopener">东软信息学院开源镜像站 Android SDK 配置说明</a></p><h1 id="2015-08-16更新"><a href="#2015-08-16更新" class="headerlink" title="2015-08-16更新"></a>2015-08-16更新</h1><h2 id="腾讯Bugly-Android-SDk-镜像使用指南"><a href="#腾讯Bugly-Android-SDk-镜像使用指南" class="headerlink" title="腾讯Bugly Android SDk 镜像使用指南"></a>腾讯Bugly Android SDk 镜像使用指南</h2><blockquote><p><a href="http://android-mirror.bugly.qq.com:8080/" target="_blank" rel="noopener"><strong>腾讯Bugly Android SDk 镜像 地址</strong></a></p></blockquote><p>1.打开独立Android SDK 管理器，在Android Studio中打开<em>**</em>：</p><p><img src="/img/201508/open-standalone-sdk-manager.jpg" alt="打开独立Android SDK 管理器"></p><p>2.菜单依次打开<code>Tools</code>–&gt;<code>Manage Add-on Sites...</code>–&gt;<code>User Defined Sites</code>：</p><p><img src="/img/201508/sdk-manager-user-defined-sites.jpg" alt="User Defined Sites"></p><p>3.输入下面链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://android-mirror.bugly.qq.com:8080/android/repository/addon.xml</span><br></pre></td></tr></table></figure><p>4.进入SDK Manager的Settings中，按图片中进行设置：</p><p><img src="/img/201508/sdk-manager-setting.jpg" alt="SDK Manager Settings"></p><p>5.<strong>HTTP Proxy Server</strong> 和 <strong>HTTP Proxy Port</strong>分别输入的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android-mirror.bugly.qq.com</span><br><span class="line">8080</span><br></pre></td></tr></table></figure><p>6.菜单中选择<code>Packages</code>–&gt;<code>Reload</code>，进行刷新后，就可以下载或者更新你需要的SDK组件了！我这里电信小水管，直接<strong>满速</strong>，如图：</p><p><img src="/img/201508/sdk-manager-update-speed.jpg" alt="Android SDK 下载满速"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;国内下载或者更新Android SDK的速度奇慢，福利来了，专门解决这个问题。&lt;/p&gt;
&lt;h1 id=&quot;2015-09-07更新&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="Android新手" scheme="https://blog.sunjiajia.com/categories/Android%E6%96%B0%E6%89%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>编译Android5.1.1源码</title>
    <link href="https://blog.sunjiajia.com/2015/08/16/make-android-open-source/"/>
    <id>https://blog.sunjiajia.com/2015/08/16/make-android-open-source/</id>
    <published>2015-08-15T23:50:27.000Z</published>
    <updated>2018-08-02T04:06:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>编译Android源码是为了更好的学习源码，当然，如果要做第三方ROM适配，也可以尝试；我们这篇重点学习如下内容：</p><blockquote><ul><li>如何在<strong>Ubuntu</strong>下编译<strong>Android5.1.1</strong>源码；</li><li>导入<strong>Android Studio</strong>进行源码阅读。</li></ul></blockquote><h2 id="今天你好吗"><a href="#今天你好吗" class="headerlink" title="今天你好吗"></a>今天你好吗</h2><h2 id="配置编译环境"><a href="#配置编译环境" class="headerlink" title="配置编译环境"></a>配置编译环境</h2><p>1.需要Ubuntu <strong>64bit</strong>，建议Ubuntu14.04  64-bit；</p><p>2.安装<strong>openJDK 7</strong>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install openjdk-7-jdk</span><br></pre></td></tr></table></figure><p>3.更新jDK环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-alternatives --config java</span><br><span class="line">$ sudo update-alternatives --config javac</span><br></pre></td></tr></table></figure><p>4.为<strong>Ubuntu</strong>安装必须的packages：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install bison g++-multilib git gperf libxml2-utils make python-networkx zlib1g-dev:i386 zip</span><br></pre></td></tr></table></figure><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>1.进入源码根目录，加速下载源码的方法请移步：<a href="http://sunjiajia.com/2015/08/14/download-android-open-source-projects/" target="_blank" rel="noopener">《国内镜像加速Android源码下载》</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> android_source</span><br></pre></td></tr></table></figure><p>2.初始化编译环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ . build/envsetup.sh</span><br></pre></td></tr></table></figure><p>3.选择编译目标，如果仅仅是为了阅读源码学习，就选择<strong>aosp_arm-eng</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lunch</span><br></pre></td></tr></table></figure><p>4.开始编译，这里使用了4个并发数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4</span><br></pre></td></tr></table></figure><p>5.漫长的等待，时间不等，根据硬件配置而定，大致需要<strong>2h～10h</strong>之间。</p><p>6.编译过程中，如果出现任何问题，直接<strong>Google</strong>就行了；我的经历是，出现错误是由于源码下载<strong>不完整</strong>，为了避免，请移步<a href="http://sunjiajia.com/2015/08/14/download-android-open-source-projects/" target="_blank" rel="noopener">《国内镜像加速Android源码下载》</a>。</p><p>7.编译成功后，终端会有如下提醒：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### make completed successfully (08:04:50 (hh:mm:ss)) ####</span></span><br></pre></td></tr></table></figure><h2 id="导入Android-Studio"><a href="#导入Android-Studio" class="headerlink" title="导入Android Studio"></a>导入<strong>Android Studio</strong></h2><p>1.编译完成后，在源码根目录下，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm development/tools/idegen/</span><br></pre></td></tr></table></figure><p>2.等待片刻，终端提示以下内容，说明android.iws, android.ipr, android.iml生成成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">make: Entering directory `/home/monkey/Android/android-5.1.1_r3<span class="string">'</span></span><br><span class="line"><span class="string">host Java: idegen (out/host/common/obj/JAVA_LIBRARIES/idegen_intermediates/classes)</span></span><br><span class="line"><span class="string">Install: out/host/linux-x86/framework/idegen.jar</span></span><br><span class="line"><span class="string">make: Leaving directory `/home/monkey/Android/android-5.1.1_r3'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### make completed successfully (9 seconds) ####</span></span><br></pre></td></tr></table></figure><p>3.打开<strong>Android Studio</strong>，选择<strong>打开一个现有的Android Studio项目</strong>，选择Android源码的根目录,导入即可，这里起作用的是android.irp文件。在配置sdk版本之后就可以查看<strong>Android源码</strong>了。</p><p>4.提醒一下，常用Widgets的源码在<code>/frameworks/base/core/java/android/widget</code>目录结构下，也可以按<code>ctrl+N</code>寻找源码文件。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>Android5.1.1源码下载完毕，也编译完毕，同时，也导入到Android Studio供我们欣赏源代码的美丽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;编译Android源码是为了更好的学习源码，当然，如果要做第三方ROM适配，也可以尝试；我们这篇重点学习如下内容：&lt;/p&gt;
&lt;blockqu
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="进阶" scheme="https://blog.sunjiajia.com/tags/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>国内镜像加速Android源码下载</title>
    <link href="https://blog.sunjiajia.com/2015/08/14/download-android-open-source-projects/"/>
    <id>https://blog.sunjiajia.com/2015/08/14/download-android-open-source-projects/</id>
    <published>2015-08-13T23:50:27.000Z</published>
    <updated>2018-08-02T04:06:47.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>1.首先，感谢伟大的Google；2.其次，感谢清华镜像；3.最后，感谢小水管以及长城。</code></pre><blockquote><p>直接用小水管跨越长城下载Android source简直是和自己开玩笑。</p></blockquote><h2 id="清华大学镜像"><a href="#清华大学镜像" class="headerlink" title="清华大学镜像"></a>清华大学镜像</h2><p>无论是Ubuntu源更新还是Android源码下砸，都是使用清华大学镜像。</p><h3 id="Ubuntu源使用方法"><a href="#Ubuntu源使用方法" class="headerlink" title="Ubuntu源使用方法"></a>Ubuntu源使用方法</h3><p>不多说了，不会的自行Google。</p><h2 id="Android源码清华镜像使用方法"><a href="#Android源码清华镜像使用方法" class="headerlink" title="Android源码清华镜像使用方法"></a>Android源码清华镜像使用方法</h2><h3 id="官方介绍使用方法"><a href="#官方介绍使用方法" class="headerlink" title="官方介绍使用方法"></a>官方介绍使用方法</h3><p><a href="https://wiki.tuna.tsinghua.edu.cn/MirrorUsage/android" target="_blank" rel="noopener">====<strong>点击浏览</strong>====</a></p><h3 id="我来介绍"><a href="#我来介绍" class="headerlink" title="我来介绍"></a>我来介绍</h3><p>1.下载修改好的<strong>repo</strong>，<a href="http://pan.baidu.com/s/1dDpqsmd" target="_blank" rel="noopener">====<strong>下载地址</strong>====</a>，密码：<code>rb5t</code>；</p><p>2.打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/bin</span><br><span class="line">PATH=~/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>3.将<strong>repo</strong>放入<code>~/bin</code>目录下；</p><p>4.赋予执行权限，终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x ~/bin/repo</span><br></pre></td></tr></table></figure><p>5.建立android源码存放目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir android_source</span><br><span class="line">cd android_source</span><br></pre></td></tr></table></figure><p>6.查看想要下载的源码的Tag和Builds，网址：<a href="https://source.android.com/source/build-numbers.html#source-code-tags-and-builds" target="_blank" rel="noopener">====<strong>点击查看，需要翻蔷</strong>====</a>，这里 @安卓猴 给你们截下图，自己放大查看：</p><p><img src="/img/201508/android-source-Tags-and-Builds.jpg" alt="Android源码Tags和Builds"></p><p>7.例如我要下载android-5.1.1_r3，就在终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u git://aosp.tuna.tsinghua.edu.cn/android/platform/manifest -b android-5.1.1_r3</span><br></pre></td></tr></table></figure><p>8.终端输入下面命令使用<strong>repo</strong>开始源代码下载同步，<code>-j4</code>表示并发数为4，清华镜像只支持最大并发数4：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo sync -j4</span><br></pre></td></tr></table></figure><p>9.漫长的等待后，源码下载完毕。速度在200～800KB/s不等。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>Android源码终于下载完毕，历程才刚刚开始，接下来的<strong>编译</strong>工作，才最考验耐心。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;1.首先，感谢伟大的Google；
2.其次，感谢清华镜像；
3.最后，感谢小水管以及长城。
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;直接用小水管跨越长城下载Android source简直是和自己开玩笑。&lt;/p&gt;
&lt;/blockquote
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="进阶" scheme="https://blog.sunjiajia.com/tags/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第6课点击事件的四种写法</title>
    <link href="https://blog.sunjiajia.com/2015/08/10/monkey-android-6/"/>
    <id>https://blog.sunjiajia.com/2015/08/10/monkey-android-6/</id>
    <published>2015-08-09T23:50:27.000Z</published>
    <updated>2018-08-02T04:06:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>Button和TextView的简单使用</li><li>LinearLayout的用法</li><li>点击事件的4种写法</li></ul></blockquote><hr><h2 id="LinearLayout中的Button、TextView"><a href="#LinearLayout中的Button、TextView" class="headerlink" title="LinearLayout中的Button、TextView"></a>LinearLayout中的Button、TextView</h2><p>布局文件的源码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"点击事件的4种写法"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#ff002e"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"22sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn01"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"按钮01"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn02"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"按钮02"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn03"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"按钮03"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn04"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">"clickButton04"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"按钮04"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="布局文件解析"><a href="#布局文件解析" class="headerlink" title="布局文件解析"></a>布局文件解析</h2><p>LinearLayout：</p><blockquote><ul><li>将RelativeLayout改为LinearLayout，即线性布局；</li><li>它里面的控件成线性排列，竖直或者水平，用android:orientation=”vertical”或者android:orientation=”horizontal”来设置；</li><li>android:gravity=”center”设置子控件全部居中；</li></ul></blockquote><p>TextView:</p><blockquote><ul><li>用来显示文本的控件；</li><li>android:text设置显示的内容；</li><li>android:textColor设置字体颜色；</li><li>android:textSize设置字体大小；</li></ul></blockquote><p>Button：</p><blockquote><ul><li>按钮控件；</li><li>android:onClick设置点击事件的方法名称；</li><li>android:text设置按钮的文字；</li></ul></blockquote><h2 id="点击事件的4种写法"><a href="#点击事件的4种写法" class="headerlink" title="点击事件的4种写法"></a>点击事件的4种写法</h2><p>MainActivity源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sunjiajia.firstdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> butterknife.ButterKnife;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button mButton01;</span><br><span class="line">    <span class="keyword">private</span> Button mButton02;</span><br><span class="line">    <span class="keyword">private</span> Button mButton03;</span><br><span class="line">    <span class="keyword">private</span> Button mButton04;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mButton01 = (Button) findViewById(R.id.btn01);</span><br><span class="line">        mButton02 = (Button) findViewById(R.id.btn02);</span><br><span class="line">        mButton03 = (Button) findViewById(R.id.btn03);</span><br><span class="line">        mButton04 = (Button) findViewById(R.id.btn04);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第1种写法：</span></span><br><span class="line">        mButton01.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, mButton01.getClass().toString() +<span class="string">"--&gt; Button01"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第2种写法：主类实现OnClickListener接口，并在主类中复写方法onClick</span></span><br><span class="line">        mButton02.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第3种写法：内部类实现OnClickListener接口，复写方法onClick</span></span><br><span class="line">        MyButtonClickListener mButtonClickListener = <span class="keyword">new</span> MyButtonClickListener();</span><br><span class="line">        mButton03.setOnClickListener(mButtonClickListener);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第4种写法：在布局文件中给Button04添加android:onClick="clickButton04"属性，并指定了点击触发的方法clickButton04</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clickButton04</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, mButton04.getClass().toString() +<span class="string">"--&gt; Button04"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyButtonClickListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, mButton03.getClass().toString() +<span class="string">"--&gt; Button03"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, mButton02.getClass().toString() +<span class="string">"--&gt; Button02"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要点解析：</p><blockquote><ul><li>4种写法位于源码注释中，请敲代码体验；</li><li>Toast为“土司”控件，即在Activity上显示一个弹出来的提示；</li><li>mButton02.getClass().toString()得到控件对象的类名并转换为字符串；</li></ul></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们在“Button”上按住“ctrl”键，并点击鼠标左键，跟踪到Button的源码类，发现它是继承于TextView，继续跟踪，发现TextView继承于View。实际上，Android中所有可视控件都是继承自View。</p><p>据此，我们可以推断出来，TextView也可以写点击事件，自己动手试试吧。</p><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>学习了本节课程，点击事件的4种写法已经讲解完毕。</p><p>有什么问题请在下面留言评论，我们一起进步！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Button和TextView的简单使用&lt;/li&gt;
&lt;li&gt;LinearLayout的用法&lt;/li&gt;
&lt;li&gt;点击事件的4种写法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>我的开发环境</title>
    <link href="https://blog.sunjiajia.com/2015/08/09/my-develop-environment/"/>
    <id>https://blog.sunjiajia.com/2015/08/09/my-develop-environment/</id>
    <published>2015-08-09T02:50:27.000Z</published>
    <updated>2018-08-02T04:05:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的开发环境"><a href="#我的开发环境" class="headerlink" title="我的开发环境"></a>我的开发环境</h2><p>最近在写第二个系列文章《Monkey Android》，目标定位Android初学者，因此不得不谈论一下他们很关心的开发环境的问题。在系列文章中我并没有设计这方面的讨论，原因是过多的纠结于<code>开发环境</code>会使学习的<code>时间成本</code>大大增加。</p><p>在这篇文章中，我介绍一下自己的开发环境，各位初学者就<strong>浅尝辄止</strong>吧！</p><h2 id="Windows还是Ubuntu？"><a href="#Windows还是Ubuntu？" class="headerlink" title="Windows还是Ubuntu？"></a>Windows还是Ubuntu？</h2><p>如果预算充足，那么用MBP最舒服；<br>如果懒得折腾与适应，手边的Windows PC最方便；<br>如果要找到一个平衡点，那么Ubuntu PC最适合。</p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>昨天在我的Thinkpad上配置了基于Ubuntu系统的Android开发环境，用着非常顺手。</p><h3 id="全新硬盘安装Ubuntu"><a href="#全新硬盘安装Ubuntu" class="headerlink" title="全新硬盘安装Ubuntu"></a>全新硬盘安装Ubuntu</h3><pre><code>1.找一台Windows电脑，用软碟通将Ubuntu镜像iso写入一个空白U盘中；2.引导从U盘启动，然后安装Ubuntu，我安装的是English版；3.分区采用最简单最有效的方式：一个`/home`分区，一个`/`分区；4.步骤3是为了重装系统时，不用动home分区，这样所有数据都在；5.安装好后，切换为国内源，更新下系统；</code></pre><blockquote><p>这里给的步骤是粗略的，不懂可以Google之。</p></blockquote><h3 id="建立Android目录"><a href="#建立Android目录" class="headerlink" title="建立Android目录"></a>建立Android目录</h3><blockquote><p>我的JDK，Android SDK，Android Studio，包括工程目录，全部放在这里，方便寻找与使用。</p></blockquote><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>在 ~/.profile中添加JDK的环境变量，还有sdk的platform-tools，方便adb等工具的使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/monkey/Android/jdk1.8.0_51</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/home/monkey/Android/jdk1.8.0_51/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=/home/monkey/Android/android-sdk/platform-tools/:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><p>浏览器：</p><blockquote><p>Firefox和Chrome</p></blockquote><p>终端模拟器：</p><blockquote><p>Terminator</p></blockquote><p>gcolor2：</p><blockquote><p>Ubuntu下取色器，全局取色，获取颜色代码。</p></blockquote><p>haroopad:</p><blockquote><p>markdown编辑器，写博文和做笔记的必备。</p></blockquote><p>ss:</p><blockquote><p>结合浏览器的proxy等插件，愉快地上Google。</p></blockquote><p>播放器：</p><blockquote><p>学习过程少不了看各种视频教程，那么VLC绝对是最佳播放器。</p></blockquote><p>文本编辑器：</p><blockquote><p>如果感觉Ubuntu自带编辑器不好用，那么可以使用github的Atom编辑器，或者Sublime Text编辑器，不懂的记得Google一下就可以。</p></blockquote><h3 id="hexo博客"><a href="#hexo博客" class="headerlink" title="hexo博客"></a>hexo博客</h3><p>学习编程一定要记笔记，那么，一个免费的博客是少不了的。</p><blockquote><p>github pages + hexo</p></blockquote><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>目前就想起来这么多，不会配置的直接Google一下，相信你一定能够找到理想答案。</p><p>有疑问请留言，问问题又不会怀孕。你说是吧？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我的开发环境&quot;&gt;&lt;a href=&quot;#我的开发环境&quot; class=&quot;headerlink&quot; title=&quot;我的开发环境&quot;&gt;&lt;/a&gt;我的开发环境&lt;/h2&gt;&lt;p&gt;最近在写第二个系列文章《Monkey Android》，目标定位Android初学者，因此不得不谈论一下他们
      
    
    </summary>
    
      <category term="Android新手" scheme="https://blog.sunjiajia.com/categories/Android%E6%96%B0%E6%89%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第5课之剖析第一个App</title>
    <link href="https://blog.sunjiajia.com/2015/08/07/monkey-android-5/"/>
    <id>https://blog.sunjiajia.com/2015/08/07/monkey-android-5/</id>
    <published>2015-08-07T06:50:27.000Z</published>
    <updated>2018-08-02T04:05:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>第一个App最重要的三个文件</li><li>MainAcivity.java代码分析</li><li>activity_main.xml代码分析</li><li>AndroidManifest.xml代码分析</li></ul></blockquote><hr><h2 id="最重要的三个文件"><a href="#最重要的三个文件" class="headerlink" title="最重要的三个文件"></a>最重要的三个文件</h2><p>我们的第一个项目<code>FirstDemo.java</code>建立以后，Android Studio首先展示给我们的就是<code>activity_main.xml</code>和<code>MainAcivity.java</code>源文件，<br>另外，还有一个无比重要的文件<code>AndroidMenifest.xml</code>，下面我们着重理解这三个文件的作用以及代码的含义。</p><h2 id="MainAcivity-java代码分析"><a href="#MainAcivity-java代码分析" class="headerlink" title="MainAcivity.java代码分析"></a>MainAcivity.java代码分析</h2><p>顾名思义，<code>Main</code>的意思是<code>主要的</code>，<code>Acivity</code>的意思是<code>活动</code>；那么，<code>MainAcivity.java</code>源文件的作用肯定就是：</p><blockquote><p>主要的活动窗口。</p></blockquote><p>贴一下它的主要代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Activity启动的时候调用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> savedInstanceState</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它有以下关键点：</p><ul><li><p>1.MainActivity继承自类AppCompatActivity，它是做什么的？</p></li><li><p>2.有一个复写（Override）的方法onCreate，为什么要复写它呢？</p></li><li><p>3.setContentView()方法又是做什么的呢？</p></li><li><p>4.R.layout.activity_main是什么意思？</p></li></ul><h3 id="AppCompatActivity"><a href="#AppCompatActivity" class="headerlink" title="AppCompatActivity"></a>AppCompatActivity</h3><p>从名字来看，<code>Compat</code>的意思是<code>兼容</code>，那么它的意思是<code>App兼容Activity</code>。</p><p>Android有很多版本，因此，Google为了向下兼容更多的版本，提供了很多<code>兼容包</code>、<code>兼容类</code>。</p><p>我们来跟踪一下AppCompatActivity的源码：</p><ul><li><p>1.键盘长按<code>Ctrl</code>键，鼠标左键点击<code>AppCompatActivity</code>，AS会带我们来到AppCompatActivity类所在的源码位置；</p></li><li><p>2.我们发现，AppCompatActivity继承自FragmentActivity，继续跟踪下去，键盘长按<code>Ctrl</code>键，鼠标左键点击<code>FragmentActivity</code>；</p></li><li><p>3.我们来到了FragmentActivity所在源码的位置，惊奇的发现，原来它们都是继承自<code>Activity</code>。</p></li></ul><p>现在我们弄清楚<code>Activity</code>是做什么的：</p><ul><li><p>1.在官方手册中找到Activity的文档，地址 <a href="https://developer.android.com/reference/android/app/Activity.html" target="_blank" rel="noopener">https://developer.android.com/reference/android/app/Activity.html</a></p></li><li><p>2.定位到<code>Class Overview</code>位置；</p></li><li><p>3.看到解释如下：</p></li></ul><blockquote><p>An activity is a single, focused thing that the user can do. Almost all activities interact with the user, so the Activity class takes care of creating a window for you in which you can place your UI with setContentView(View).</p></blockquote><p>我给翻译一下就是：</p><blockquote><p>所有在App中能看到的和做的都是在Activity上。</p></blockquote><h3 id="onCreate"><a href="#onCreate" class="headerlink" title="onCreate"></a>onCreate</h3><p>当Activity运行的时候，首先会调用这个方法，在它里面，需要用<code>setContentView()</code>方法来设置UI布局。<br>另外，布局中的各种控件，都是在这里初始化的。</p><h3 id="setContentView"><a href="#setContentView" class="headerlink" title="setContentView"></a>setContentView</h3><p>setContentView() 用来给Activity设置一个UI布局，即activity_main.xml，有了它，我们的App才能显示出各种各样的界面。</p><h3 id="R-layout-activity-main"><a href="#R-layout-activity-main" class="headerlink" title="R.layout.activity_main"></a>R.layout.activity_main</h3><p>R是编译器为我们自动生成的一个文件，它里面是各种控件、布局等等的ID值，layout表示所引用的activity_main是一个布局文件，位于工程目录layout文件夹下。</p><h2 id="activity-main-xml代码分析"><a href="#activity-main-xml代码分析" class="headerlink" title="activity_main.xml代码分析"></a>activity_main.xml代码分析</h2><p>贴一下源码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/textview"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/hello_world"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>RelativeLayout用来表示，这个一个相对布局，里面的控件都是按照相对的位置来拜访的，除此之外还有多种布局，以后会讲到；</p></li><li><p><code>xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</code>是命名空间，有了它，就可以引用Android给我们提供好的控件属性；</p></li><li><p>layout_width表示布局的宽，layout_height表示布局的高，有3种值：match_parent撑满父布局，wrap_content包裹内容，具体的数值例如200dp；</p></li><li><p>对于TextView来说，它是用来显示文本内容的，因此它有一个属性text，显示的内容是strings.xml文件中的键为hello_world的值，也可以直接在””中写上内容，不过不推荐；</p></li><li><p>android:id=”@+id/textview”表示该TextView的id是textview，方便在Java代码中进行实例化初始化；</p></li><li><p>@表示通过一个id引用一个内容，@+表示增加一个id；</p></li><li><p>将android:text=”@string/hello_world”改为android:text=”Hello 安卓猴”，再次运行下App看下效果。</p></li></ul><h2 id="AndroidManifest-xml代码分析"><a href="#AndroidManifest-xml代码分析" class="headerlink" title="AndroidManifest.xml代码分析"></a>AndroidManifest.xml代码分析</h2><p>贴一下源码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;manifest xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="keyword">package</span>=<span class="string">"com.sunjiajia.firstdemo"</span> &gt;</span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:icon=<span class="string">"@mipmap/ic_launcher"</span></span><br><span class="line">        android:label=<span class="string">"@string/app_name"</span></span><br><span class="line">        android:theme=<span class="string">"@style/AppTheme"</span> &gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=<span class="string">".MainActivity"</span></span><br><span class="line">            android:label=<span class="string">"@string/app_name"</span> &gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span><br><span class="line"></span><br><span class="line">                &lt;category android:name=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line"></span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure><p>顾名思义，由于<code>manifest</code>是清单的意思，所以<code>AndroidManifest.xml</code>就是<code>Android清单文件</code>，所有的Android<code>四大组件</code>都必须在这里进行声明。</p><ul><li><code>android:icon</code>表示App的图标；</li><li><code>android:label</code>表示App的标签，即名称；</li><li><code>android:theme</code>表示App的主题，不同个App有不同个样式主题，我们可以设置喜欢的主题；</li><li><code>activity</code>是四大组件之一，因此它毫不犹豫的出现在了这里；</li><li><code>android:name</code>表示activity的名字，例如MainActivity.java这个主Activity的name就是”.MainActivity”，.表示包名目录的根目录；</li><li><code>intent-filter</code>标签里面定义了一个action和一个category，action表示此Activity的动作是MAIN，就是主界面，第一个Activity；category表示此Acivity是一个启动器，<br>显示在Launcher中；</li><li>action和category同时作用表示该activity是App启动时加载的第一个Activity。</li></ul><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>学习了本节课程，相信一定能够大致懂得第一个App里面不同文件的作用，为自己写出代码作铺垫。</p><p>有什么问题请在下面留言评论，我们一起进步！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第一个App最重要的三个文件&lt;/li&gt;
&lt;li&gt;MainAcivity.java代码分析&lt;/li&gt;
&lt;li&gt;activity_main.xml代码分析&lt;/li&gt;
&lt;li&gt;AndroidMani
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第4课之运行第一个App</title>
    <link href="https://blog.sunjiajia.com/2015/08/03/monkey-android-4/"/>
    <id>https://blog.sunjiajia.com/2015/08/03/monkey-android-4/</id>
    <published>2015-08-03T00:50:27.000Z</published>
    <updated>2018-08-02T04:05:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>运行第一个App</li><li>学习几个adb命令</li><li>在真机上运行它</li><li>隔空运行调试App</li></ul></blockquote><hr><h2 id="运行第一个App"><a href="#运行第一个App" class="headerlink" title="运行第一个App"></a>运行第一个App</h2><p><strong>第1步</strong> 打开Android Studio，并打开上节课中我们创建的Genymotion模拟器，点击Android Studio的工具栏中的<code>绿色实心向右箭头</code>运行按钮，开始Build项目，稍等弹出设备选择界面，如图：</p><p><img src="/img/android/4-run-firstdemo-in-genymotion-1.jpg" alt="运行第一个App第1步"></p><p><strong>第2步</strong> 点击<code>Next</code>后，打开Android5.1模拟器，可以看到第一个App已经运行了！如图：</p><p><img src="/img/android/4-run-firstdemo-in-genymotion-2.jpg" alt="运行第一个App第2步"></p><h2 id="学习几个adb命令"><a href="#学习几个adb命令" class="headerlink" title="学习几个adb命令"></a>学习几个adb命令</h2><p><strong>第1步</strong> 将SDK的<code>platform-tools</code>文件夹加入到系统环境变量中。</p><p><strong>第2步</strong> 打开你的Genymotion模拟器，打开<code>cmd命令行</code>窗口，输入<code>adb devices</code>，得到反馈：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List of devices attached</span><br><span class="line">c6a98c05        device</span><br><span class="line">169.254.109.102:5555    device</span><br></pre></td></tr></table></figure><blockquote><p>有两个设备处于可用于调试app的状态，第一个是真机，第二个是Genymotion模拟器。</p></blockquote><p><strong>第3步</strong> 有时我们会遇到真机或者模拟器连接良好，但是调试运行时，Android Studio提示设备超时，这时，我们用到以下两个adb命令：</p><p>用来杀死adb服务:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb <span class="built_in">kill</span>-server</span><br></pre></td></tr></table></figure><p>用来开启adb服务:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb start-server</span><br></pre></td></tr></table></figure><blockquote><p>如果杀死并重启adb服务后，仍然无法调试，那么请重现连接的真机，或者重启模拟器。</p></blockquote><h2 id="在真机上运行它"><a href="#在真机上运行它" class="headerlink" title="在真机上运行它"></a>在真机上运行它</h2><p><strong>第1步</strong> 开启USB调试功能，过程如下：</p><blockquote><p>设置 –&gt; 关于手机 –&gt; 狂点（系统version）–&gt; 提示已处于开发者模式 –&gt; 设置 –&gt; 开发者选项 –&gt; USB调试。</p></blockquote><p><strong>第2步</strong> 用USB数据线链接电脑和手机，如果驱动安装好了，手机状态栏中会显示<code>已连接USB调试</code>。如图：</p><p><img src="/img/android/4-run-firstdemo-in-phone-2.jpg" alt="在真机上运行第2步"></p><p><strong>第3步</strong>  打开cmd命令行，执行命令<code>adb devices</code>，得到如下反馈，说明真机连接成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List of devices attached</span><br><span class="line">c6a98c05        device</span><br></pre></td></tr></table></figure><p><strong>第4步</strong>  在我们的Android Studio中，按快捷键<code>Shift + F10</code>运行我们的项目App，弹出<code>选择设备</code>对话框，如图：</p><p><img src="/img/android/4-run-firstdemo-in-phone-4.jpg" alt="在真机上运行第4步"></p><p><strong>第5步</strong> 已经运行到真机上了！如图：</p><p><img src="/img/android/4-run-firstdemo-in-phone-5.jpg" alt="在真机上运行第5步"></p><h2 id="隔空运行调试App"><a href="#隔空运行调试App" class="headerlink" title="隔空运行调试App"></a>隔空运行调试App</h2><p>是不是每次插上数据线有种被<code>绑定</code>的感觉？那么，我们就隔空调试App！</p><p><strong>第1步</strong> 下载<code>无线ADB调试</code>的app到真机上并安装，下载地址：</p><p><a href="http://t.cn/RLja2If" target="_blank" rel="noopener"><strong>无线ADB调试</strong></a></p><p>这个是我反编译汉化国外大神的，对他表示感谢。</p><p><strong>第2步</strong> 真机和电脑连接同一个WiFi，打开<code>无线ADB调试</code>app，并且给予<code>ROOT</code>权限，如图：</p><p><img src="/img/android/4-wireless-adb.jpg" alt="隔空运行调试App"></p><p><strong>第3步</strong> 打开<code>cmd</code>命令行，输入下面命令，adb服务连接到了真机，即可通过WiFi来调试App！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect 192.168.199.115</span><br></pre></td></tr></table></figure><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>学习了本节课程，相信你已经能够得心应手地将自己编写的App运行到设备上去了。</p><p>我们的准备工作到这里就结束了，下节课，我们将开始正式学习有关Android的编程知识。</p><blockquote><p>多动手敲代码，是成为高手的最快途径。</p></blockquote><p>有什么问题请在下面留言评论，我们一起进步！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;运行第一个App&lt;/li&gt;
&lt;li&gt;学习几个adb命令&lt;/li&gt;
&lt;li&gt;在真机上运行它&lt;/li&gt;
&lt;li&gt;隔空运行调试App&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第3课之Android Studio简介与模拟器</title>
    <link href="https://blog.sunjiajia.com/2015/08/02/monkey-android-3/"/>
    <id>https://blog.sunjiajia.com/2015/08/02/monkey-android-3/</id>
    <published>2015-08-02T13:50:27.000Z</published>
    <updated>2018-08-02T04:05:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>Android Studio新建工程</li><li>初识Android Studio真面目</li><li>用Android模拟器运行Android 5.1.1系统</li></ul></blockquote><hr><h2 id="Android-Studio新建工程"><a href="#Android-Studio新建工程" class="headerlink" title="Android Studio新建工程"></a>Android Studio新建工程</h2><p><strong>第1步：</strong> 打开Android Studio，点击<code>Start a New Android Studio project</code>。如图：</p><p><img src="/img/android/3-new-projects-1.jpg" alt="新建工程第1步"></p><p><strong>第2步：</strong> 按照图中解释，填写 <code>Application Name</code> 等信息。如图：</p><p><img src="/img/android/3-new-projects-2.jpg" alt="新建工程第2步"></p><p><strong>第3步：</strong> 选择App的运行设备类型和相应的系统版本。如图：</p><p><img src="/img/android/3-new-projects-3.jpg" alt="新建工程第3步"></p><p><strong>第4步：</strong> 选择新建Activity的类型，我们保持默认。如图：</p><p><img src="/img/android/3-new-projects-4.jpg" alt="新建工程第4步"></p><p><strong>第5步：</strong> 需要填写<code>Activity Name</code>等信息，我们依旧保持默认。如图：</p><p><img src="/img/android/3-new-projects-5.jpg" alt="新建工程第5步"></p><p><strong>第6步：</strong> 点击<code>Finish</code>后，Android Studio开始新建工程，初次使用由于要下载gradle等组件，速度较慢，请耐心等待。</p><h2 id="初识Android-Studio真面目"><a href="#初识Android-Studio真面目" class="headerlink" title="初识Android Studio真面目"></a>初识Android Studio真面目</h2><p>再等待一段时间后，工程终于建立完毕，这时，我们看到了Android Studio的真面目，以及它的默认布局，如图：</p><p><img src="/img/android/3-studio-interface.jpg" alt="Android Studio真面目"></p><h2 id="模拟器"><a href="#模拟器" class="headerlink" title="模拟器"></a>模拟器</h2><h3 id="原生模拟器"><a href="#原生模拟器" class="headerlink" title="原生模拟器"></a>原生模拟器</h3><p>在我们的学习当中，不建议使用原生模拟器，因为它容易出现掉线、卡机等未知问题，但是，我们也要会使用它：</p><p><strong>第1步：</strong> 打开Android Studio，点击<code>Tools</code>—&gt;<code>Android</code>—&gt;<code>AVD Manager</code> 。如图：</p><p><img src="/img/android/3-new-emulator-1.jpg" alt="原生模拟器第1步"></p><p><strong>第2步：</strong> 点击<code>Create a virtual device</code> 。如图：</p><p><img src="/img/android/3-new-emulator-2.jpg" alt="原生模拟器第2步"></p><p><strong>第3步：</strong> 选择要模拟的设备型号，例如<code>Nexus 5</code> 。如图：</p><p><img src="/img/android/3-new-emulator-3.jpg" alt="原生模拟器第3步"></p><p><strong>第4步：</strong> 选择系统版本，如图：</p><p><img src="/img/android/3-new-emulator-4.jpg" alt="原生模拟器第4步"></p><p><strong>第5步：</strong> 点击<code>Show Advanced Setting</code>，如图：</p><p><img src="/img/android/3-new-emulator-5.jpg" alt="原生模拟器第5步"></p><p><strong>第6步：</strong> Virtual Device的优化设置，最后点击<code>Finish</code>。如图：</p><p><img src="/img/android/3-new-emulator-6.jpg" alt="原生模拟器第6步"></p><p><strong>第7步：</strong> 回到了AVD Manager面板，出现了刚刚新建的Device，点击<code>Actions</code>中的<code>绿色实心向右箭头</code>运行该设备。如图：</p><p><img src="/img/android/3-new-emulator-7.jpg" alt="原生模拟器第7步"></p><p><strong>第8步：</strong> 首次运行速度较慢，请耐心等待一会儿，Android 5.1就启动完毕。如图：</p><p><img src="/img/android/3-new-emulator-8.jpg" alt="原生模拟器第8步"></p><h3 id="最快的模拟器"><a href="#最快的模拟器" class="headerlink" title="最快的模拟器"></a>最快的模拟器</h3><p>原生的模拟器已经介绍完了，我们就先放下它了，毕竟我们在调试的时候讲究效率，所以，我们选择使用大名鼎鼎的的<code>Genymotion</code>。</p><p>Genymotion是一款速度很快的Android模拟器，原理是使用了Oracle的虚拟机Virtual Box来构建一个Android虚拟机。</p><p>从以下两个网站详细了解Genymotion的特性，并可以从中下载它。</p><p><a href="http://www.Genymotion.com" target="_blank" rel="noopener"><strong>Genymotion英文官网</strong></a></p><p><a href="http://www.Genymotion.net" target="_blank" rel="noopener"><strong>Genymotion国人自建中文网</strong></a></p><p><br></p><h4 id="Genymotion下载"><a href="#Genymotion下载" class="headerlink" title="Genymotion下载"></a>Genymotion下载</h4><p>要下载它需要先注册登录，这里 @安卓猴 给出一个百度网盘下载地址：</p><p><a href="http://pan.baidu.com/s/1i3eXURV" target="_blank" rel="noopener"><strong>Genymotion 2.5.3（带vbox）网盘下载</strong></a>， 密码：<code>e1mf</code></p><p><br></p><h4 id="Genymotion安装"><a href="#Genymotion安装" class="headerlink" title="Genymotion安装"></a>Genymotion安装</h4><p>安装就不多说了，直接一直<code>Next</code>就可以。</p><p><br></p><h4 id="Genymotion使用"><a href="#Genymotion使用" class="headerlink" title="Genymotion使用"></a>Genymotion使用</h4><p><strong>第1步：</strong> 安装好后打开Genymotion进入主面板，点击<code>Add</code>添加新的虚拟器。如图：</p><p><img src="/img/android/3-genymotion-1.jpg" alt="Genymotion第1步"></p><p><strong>第2步：</strong> 选择要虚拟的Android系统版本，并选择设备，这里选择Nexus5，点击<code>Next</code>后，会进入下载与配置界面，耐心等待；完成后回到Genymotion主界面。如图：</p><p><img src="/img/android/3-genymotion-2.jpg" alt="Genymotion第2步"></p><p><strong>第3步：</strong> 在Genymotion的主面板中点击<code>扳手</code>小图标，设置刚刚建立的虚拟器，我们把它的内存设置为1024MB就够用。如图：</p><p><img src="/img/android/3-genymotion-3.jpg" alt="Genymotion第3步"></p><p><strong>第4步：</strong> 在Genymotion的主面板中，选中虚拟器以后，点击<code>Start</code>启动它。如图：</p><p><img src="/img/android/3-genymotion-4.jpg" alt="Genymotion第4步"></p><p><strong>第5步：</strong> 我们的Android5.1虚拟器就启动起来了！是不是很nice呀？试了一下，真的比原生模拟器 <strong>快</strong> 太多！如图：</p><p><img src="/img/android/3-genymotion-5.jpg" alt="Genymotion第5步"></p><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>相信看到这里， <strong>Android Studio</strong> 以及调试App所用的 <strong>史上最快虚拟器</strong> 都被我们玩懂了。</p><p>懂是懂了，可是还需深入学习，不是吗？</p><p>有什么问题请在下面留言评论，我们一起进步！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio新建工程&lt;/li&gt;
&lt;li&gt;初识Android Studio真面目&lt;/li&gt;
&lt;li&gt;用Android模拟器运行Android 5.1.1系统&lt;/li&gt;
&lt;/ul&gt;
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第2课之环境搭建</title>
    <link href="https://blog.sunjiajia.com/2015/07/31/monkey-android-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/31/monkey-android-2/</id>
    <published>2015-07-31T11:20:27.000Z</published>
    <updated>2018-08-02T04:05:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节课可以学习到的内容：</p><blockquote><ul><li>Android开发环境的搭建</li><li>Android SDK及开发工具Android Studio的安装</li><li>SDK的下载和SDK目录详解</li></ul></blockquote><hr><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>建议安装最新版JDK，<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener"><strong>下载链接</strong></a>，版本信息为：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version "<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_51"</span><br><span class="line">Java(TM) SE Runtime Environment (build <span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_51-b16)</span><br><span class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build <span class="number">25</span>.<span class="number">51</span>-b03, mixed <span class="built_in">mode</span>)</span><br></pre></td></tr></table></figure><p>一路点击“<strong>下一步</strong>”，即可安装好JDK并配置好环境变量。</p><h3 id="安装SDK"><a href="#安装SDK" class="headerlink" title="安装SDK"></a>安装SDK</h3><p>在Google官方的<a href="https://developer.android.com/sdk/index.html" target="_blank" rel="noopener"><strong>下载页面</strong></a>，选择适合自己<strong>操作系统</strong>的版本进行下载。</p><p>这里提供一个Windows版本的百度网盘<a href="http://pan.baidu.com/s/1c0yeO5U" target="_blank" rel="noopener"><strong>下载页面</strong></a>， 密码: <code>v82w</code>。</p><p>下载完成以后，请自己动手安装，建议安装在非系统盘。</p><p>安装过程不再赘述，这节我们重点看下SDK目录中各文件（夹）的作用。</p><h2 id="了解SDK"><a href="#了解SDK" class="headerlink" title="了解SDK"></a>了解SDK</h2><p>SDK，中文名字就是<code>软件开发工具包</code>，外语全称是<code>Software Development Kit</code>。</p><h3 id="打开Android-SDK-Manager"><a href="#打开Android-SDK-Manager" class="headerlink" title="打开Android SDK Manager"></a>打开Android SDK Manager</h3><p>打开安装好的Android Studio，点击<code>Configure</code>，再点击<code>SDK Manager</code>:</p><p><img src="/img/android/2-open-sdk-manager.jpg" alt="打开SDK Manager"></p><p><img src="/img/android/2-sdk-manager-face.jpg" alt="SDK Manager界面"></p><h3 id="SDK下载"><a href="#SDK下载" class="headerlink" title="SDK下载"></a>SDK下载</h3><p>在国内是无法直接下载SDK的各个组件的，原因想必你知我知大家知，我们不讨论。这里提供两种方法：</p><blockquote><ul><li>自备梯子</li><li>国内镜像</li></ul></blockquote><p>我们推荐使用<strong>国内镜像</strong>这种方法，<strong>步骤如下</strong>：</p><p>使用方法：</p><p>1.SDK Manager主界面，依次选择『Tools』、『Options…』，弹出『Android SDK Manager - Settings』窗口；</p><p>2.在『Android SDK Manager - Settings』窗口中，按照下面的示例图来设置；</p><p>3.依次选择『Packages』、『Reload』。</p><p><img src="/img/android/2-sdk-manager-settings.jpg" alt="SDK Manager设置"></p><h3 id="下载内容"><a href="#下载内容" class="headerlink" title="下载内容"></a>下载内容</h3><p>现在的最新开发sdk是Android M，但还是预览版状态，因此，推荐下载Android 5.1.1(API 22)；</p><p>由于我们是个人（学习）开发，不着重考虑App在多个系统版本之间的兼容性，因此，我们推荐下载Android 4.2.2(API 17)；</p><p>Android L是为了学习Materials Design带来的界面效果，Android 4.2.2是用来作对比用。</p><p>综上所述，这两个版本的SDK已经能够满足个人（学习）开发。</p><p>下面，看看我下载了哪些东西：</p><p><img src="/img/android/2-sdk-download-api-22.jpg" alt="Android 5.1.1(API 22)下载的东西"></p><p><img src="/img/android/2-sdk-download-api-17.jpg" alt="Android 4.2.2(API 17)下载的东西"></p><p><img src="/img/android/2-sdk-download-extras.jpg" alt="Extras中下载的东西"></p><p>相信大家已经看到了，图中有些项目中显示着 <strong>Not installed</strong> ，有些是 <strong>Installed</strong>，具体原因如下：</p><blockquote><ul><li>ARM EABI v7a System Image是Android系统在ARM架构上的系统镜像，这里由于我们是在Intel上，索性就不下载；</li><li>同理，MIPS System Image我们也不需要下载；</li><li>Sources for Android SDK是一些Google给我们的源码，当我们需要了解某个功能为什么这么设计的时候，就需要读源码；</li><li>Samples for SDK是一些Google给我们的示例，我们可以通过看Google大牛的程序来学习他们的写法。</li><li>Intel x86 Emulator Accelerator (HAXM installer)是一个让Android 虚拟器在intel下运行更快的组件，下载后在<code>\sdk\extras\intel\Hardware_Accelerated_Execution_Manager</code>目录下找到<code>intelhaxm-android.exe</code>安装就好；</li></ul></blockquote><h3 id="SDK目录结构详解"><a href="#SDK目录结构详解" class="headerlink" title="SDK目录结构详解"></a>SDK目录结构详解</h3><p>add-ons文件夹：</p><blockquote><p>这里面保存着附加库，比如GoogleMaps，当然你如果安装了OphoneSDK，这里也会有一些类库在里面。</p></blockquote><p>docs文件夹：</p><blockquote><p>这里面是Android SDK API参考文档，所有的API都可以在这里查到。</p></blockquote><p>platforms文件夹：</p><blockquote><p>是每个平台的SDK真正的文件，里面会根据APILevel划分的SDK版本，这里就以Android2.2来说，进入后有 一个android-8的文件夹，android-8进入后是Android2.2SDK的主要文件，其中ant为ant编译脚本，data保存着一些系 统资源，images是模拟器映像文件，skins则是Android模拟器的皮肤，templates是工程创建的默认模板，android.jar则 是该版本的主要framework文件，tools目录里面包含了重要的编译工具，比如aapt、aidl、逆向调试工具dexdump和编译脚本dx。</p></blockquote><p>platform-tools文件夹：</p><blockquote><p>保存着一些通用工具，比如adb、和aapt、aidl、dx等文件。</p></blockquote><p>samples文件夹：</p><blockquote><p>是Android SDK自带的默认示例工程，里面的apidemos强烈推荐初学者运行学习。</p></blockquote><p>tools文件夹：</p><blockquote><p>作为SDK根目录下的tools文件夹，这里包含了重要的工具，比如ddms用于启动Android调试工具，比如logcat、屏幕截图和文件管理器，而draw9patch则是绘制android平台的可缩放png图片的工具，sqlite3可以在PC上操作SQLite数据库， 而monkeyrunner则是一个不错的压力测试应用，模拟用户随机按键，mksdcard则是模拟器SD映像的创建工具，emulator是 Android SDK模拟器主程序，需要输入合适的参数才能启动模拟器，traceview作为android平台上重要的调试工具。</p></blockquote><p>sources文件夹：</p><blockquote><p>里面是不同版本Android的部分源代码；</p></blockquote><h2 id="下课"><a href="#下课" class="headerlink" title="下课"></a>下课</h2><p>相信看到这里，都对Android的开发环境和SDK有了初步的了解，下节课，我们将学习Android开发利器 <strong>Android Studio</strong> 的一般用法，以及调试App所用的 <strong>史上最快虚拟器</strong> 的用法。</p><p>有什么问题请在下面留言评论，我们一起进步！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节课可以学习到的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Android开发环境的搭建&lt;/li&gt;
&lt;li&gt;Android SDK及开发工具Android Studio的安装&lt;/li&gt;
&lt;li&gt;SDK的下载和SDK目录详解&lt;/li&gt;
&lt;/ul&gt;
&lt;/b
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Android》第1课之前言</title>
    <link href="https://blog.sunjiajia.com/2015/07/31/monkey-android-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/31/monkey-android-1/</id>
    <published>2015-07-31T06:20:27.000Z</published>
    <updated>2018-08-02T04:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>《Monkey Java》刚刚撸完，立刻就开始撸《Monkey Android》系列了。</p><p>目标群体：</p><blockquote><p>Android新手</p></blockquote><p>课程起点：</p><blockquote><p>基于最新的Android 5.1.1 来学习；<br>我们用最有效率的开发工具Android Studio。</p></blockquote><p>知识储备：</p><blockquote><p>学完<a href="http://sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/" target="_blank" rel="noopener">《Monkey Java》</a>系列 或者 有Java基础</p></blockquote><p>修炼境界：</p><blockquote><p>初级阶段；<br>能写出简单界面的App，并能加入广告SDK上传市场赚取广告费；<br>对Android环境有了解，根据自己的规划进一步深入学习。</p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><br></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;《Monkey Java》刚刚撸完，立刻就开始撸《Monkey Android》系列了。&lt;/p&gt;
&lt;p&gt;目标群体：&lt;/p&gt;
&lt;blockqu
      
    
    </summary>
    
      <category term="《Monkey Android》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Android%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程10.0之结束篇</title>
    <link href="https://blog.sunjiajia.com/2015/07/29/monkey-java-basic-courses-10-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/29/monkey-java-basic-courses-10-0/</id>
    <published>2015-07-29T07:20:27.000Z</published>
    <updated>2018-08-02T04:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>到今天，《Monkey Java》系列的知识点都写完了，从头到尾都遵循着“入门”的准则，没有任何深奥的东西，几乎全部篇章都是在例子和注释中讲解知识点。<br>在学习编程的过程中，如果不动手，那绝对就OUT了。</p><p>另外，《Monkey Java》中的Java知识绝对是不够用，它的目的在于为学习Android编程铺路。</p><p>接下来，我们会一直将《Monkey Android》系列走起，直到我们能写出一个自己的Android App。</p><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;到今天，《Monkey Java》系列的知识点都写完了，从头到尾都遵循着“入门”的准则，没有任何深奥的东西，几乎全部篇章都是在例子和注释中讲
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程9.1之类集框架二</title>
    <link href="https://blog.sunjiajia.com/2015/07/27/monkey-java-basic-courses-9-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/27/monkey-java-basic-courses-9-2/</id>
    <published>2015-07-27T07:20:27.000Z</published>
    <updated>2018-08-02T04:04:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>Collection和Iterator接口</li><li>Set和HashSet的使用方法</li><li>Map和HashMap的使用方法</li></ul><hr><h2 id="Collection和Iterator接口"><a href="#Collection和Iterator接口" class="headerlink" title="Collection和Iterator接口"></a>Collection和Iterator接口</h2><p>关系：</p><blockquote><p>Iterator &lt;– Collection &lt;– Set &lt;– HashSet<br>Iterator &lt;– Collection &lt;– List &lt;– ArrayList</p></blockquote><h3 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h3><p>方法：</p><blockquote><p>boolean add(Object o) 向集合中加入一个对象<br>void clear() 删除集合当中的所有对象<br>boolean isEmpty() 判断集合是否为空<br>remove(Object o)从集合中删除一个对象的引用<br>int size() 返回集合中元素的数目</p></blockquote><h3 id="Iterator接口"><a href="#Iterator接口" class="headerlink" title="Iterator接口"></a>Iterator接口</h3><p>方法：</p><blockquote><p>hsaNext()<br>next()</p></blockquote><h2 id="Set和HashSet的使用方法"><a href="#Set和HashSet的使用方法" class="headerlink" title="Set和HashSet的使用方法"></a>Set和HashSet的使用方法</h2><h3 id="例子1："><a href="#例子1：" class="headerlink" title="例子1："></a>例子1：</h3><p>新建一个名为Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set中不允许有重复元素，如果有重复元素，直接忽略</span></span><br><span class="line">Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">set.add(<span class="string">"a"</span>);</span><br><span class="line">set.add(<span class="string">"b"</span>);</span><br><span class="line">set.add(<span class="string">"c"</span>);</span><br><span class="line">set.add(<span class="string">"c"</span>);</span><br><span class="line">set.add(<span class="string">"d"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(set.size());</span><br><span class="line"></span><br><span class="line">set.remove(<span class="string">"a"</span>);</span><br><span class="line">System.out.println(set.size());</span><br><span class="line"></span><br><span class="line">set.clear();</span><br><span class="line">System.out.println(set.size());</span><br><span class="line"></span><br><span class="line">set.add(<span class="string">"f"</span>);</span><br><span class="line">set.add(<span class="string">"g"</span>);</span><br><span class="line">set.add(<span class="string">"h"</span>);</span><br><span class="line">set.add(<span class="string">"i"</span>);</span><br><span class="line">set.add(<span class="string">"j"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(set.isEmpty());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成一个迭代器对象，用于遍历整个Set</span></span><br><span class="line">Iterator&lt;String&gt; it = set.iterator();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">String s = it.next();</span><br><span class="line">System.out.println(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Map和HashMap的使用方法"><a href="#Map和HashMap的使用方法" class="headerlink" title="Map和HashMap的使用方法"></a>Map和HashMap的使用方法</h2><h3 id="例子2："><a href="#例子2：" class="headerlink" title="例子2："></a>例子2：</h3><p>新建一个名为Demo02.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line">map.put(<span class="string">"1"</span>, <span class="string">"a"</span>);</span><br><span class="line">map.put(<span class="string">"2"</span>, <span class="string">"b"</span>);</span><br><span class="line">map.put(<span class="string">"3"</span>, <span class="string">"c"</span>);</span><br><span class="line">map.put(<span class="string">"4"</span>, <span class="string">"d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果放进去的键值对的键是存在的，那么后面放入的这个将会覆盖前面的值</span></span><br><span class="line">map.put(<span class="string">"3"</span>, <span class="string">"e"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(map.size());</span><br><span class="line"></span><br><span class="line">String s = map.get(<span class="string">"3"</span>);</span><br><span class="line">System.out.println(s);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collection和Iterator接口&lt;/li&gt;
&lt;li&gt;Set和HashSet的使用方法&lt;/li&gt;
&lt;li&gt;Map和HashMap的使用方法&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Collection和It
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程8.0之线程</title>
    <link href="https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-8-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-8-0/</id>
    <published>2015-07-26T14:20:27.000Z</published>
    <updated>2018-08-02T04:04:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>进程和线程的关系</li><li>多线程程序运行模式</li><li>定义线程的方法</li><li>控制线程的常用函数</li><li>多线程的数据安全</li><li>同步线程的方法</li><li>深入synchronized关键字</li></ul><hr><h2 id="进程和线程的关系"><a href="#进程和线程的关系" class="headerlink" title="进程和线程的关系"></a>进程和线程的关系</h2><p>多进程：</p><blockquote><p>在操作系统中能（同时）运行多个任务（程序）。</p></blockquote><p>多线程：</p><blockquote><p>在同一个应用程序中有多个顺序流（同时）进行。</p></blockquote><h2 id="多线程程序运行模式"><a href="#多线程程序运行模式" class="headerlink" title="多线程程序运行模式"></a>多线程程序运行模式</h2><p>线程的执行过程：</p><p><img src="/img/java/8_0_01_multi_threads.jpg" alt="图8—0—01。线程执行过程"></p><h2 id="定义线程的方法"><a href="#定义线程的方法" class="headerlink" title="定义线程的方法"></a>定义线程的方法</h2><p>方法1：</p><blockquote><p>定义一个线程类，它继承类Thread并重写其中的方法run()，方法run()称为线程体；</p></blockquote><p>方法2：</p><blockquote><p>提供一个实现接口Runnable的类作为线程的目标对象，在初始化一个Thread类或者Thread子类的线程对象时，把目标对象传递给这个线程实例，由该目标对象提供线程体。</p></blockquote><h3 id="例子1："><a href="#例子1：" class="headerlink" title="例子1："></a>例子1：</h3><p>1.新建一个FirstThread.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">System.out.println(<span class="string">"FirstThread--&gt;"</span> + i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 生成线程类的对象</span></span><br><span class="line">FirstThread thread01 = <span class="keyword">new</span> FirstThread();</span><br><span class="line"><span class="comment">// 启动线程</span></span><br><span class="line">thread01.start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">System.out.println(<span class="string">"main--&gt;"</span> + i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个RunnableImpl.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">System.out.println(<span class="string">"Runnable--&gt;"</span> + i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.新建一个Demo02.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 生成一个Runnable接口实现类的对象</span></span><br><span class="line">RunnableImpl ri = <span class="keyword">new</span> RunnableImpl();</span><br><span class="line"><span class="comment">// 生成一个Thread对象，并将Runnable接口实现类的对象作为参数传递进去</span></span><br><span class="line">Thread t = <span class="keyword">new</span> Threadj(ri);</span><br><span class="line">t.start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印当前线程的优先级</span></span><br><span class="line"><span class="comment">// 默认优先级是5，最大优先级是10，最小优先级是1。</span></span><br><span class="line"><span class="comment">// 线程的优先级越高，它执行的概率就越大。</span></span><br><span class="line">System.out.println(t.getPriority());</span><br><span class="line"></span><br><span class="line">t.setPriority(Thread.MAX_PRIORITY);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制线程的常用函数"><a href="#控制线程的常用函数" class="headerlink" title="控制线程的常用函数"></a>控制线程的常用函数</h2><p>中断线程：</p><blockquote><p>Thread.sleep(2000);线程睡眠2000毫秒。<br>Thread.yield();线程自动让出cpu。</p></blockquote><p>设置线程的优先级：</p><blockquote><p>getPriority();<br>setPriority();</p></blockquote><h2 id="多线程的数据安全"><a href="#多线程的数据安全" class="headerlink" title="多线程的数据安全"></a>多线程的数据安全</h2><h2 id="同步线程的方法"><a href="#同步线程的方法" class="headerlink" title="同步线程的方法"></a>同步线程的方法</h2><blockquote><ul><li>多线程共用同一份数据的时候，会出现某种错误；</li><li>因此需要在同步线程。</li></ul></blockquote><h3 id="例子2："><a href="#例子2：" class="headerlink" title="例子2："></a>例子2：</h3><p>1.新建一个MyThread.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">100</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="comment">// 同步代码块</span></span><br><span class="line"><span class="comment">// 解决多线程共用同一份数据时出现错误的问题</span></span><br><span class="line"><span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + i);</span><br><span class="line">i--;</span><br><span class="line">Thread.yield();</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个Demo03.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">MyThread myThread = <span class="keyword">new</span> MyThread();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成两个Thread对象，但是这两个对象共用同一个线程体</span></span><br><span class="line">Thread t1 = <span class="keyword">new</span> Thread(myThread);</span><br><span class="line">Thread t2 = <span class="keyword">new</span> Thread(myThread);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每一个线程都有名字，可以通过Thread对象的setName()方法设置</span></span><br><span class="line">t1.setName(<span class="string">"线程a"</span>);</span><br><span class="line">t2.setName(<span class="string">"线程b"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分别启动两个线程</span></span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="深入synchronized关键字"><a href="#深入synchronized关键字" class="headerlink" title="深入synchronized关键字"></a>深入synchronized关键字</h2><blockquote><p>同步锁，它锁住的是对象。<br>如果一个线程获得了一个对象的同步锁，那么这个对象上面的所有的其它的同步代码都是不能够被其它线程执行的，都需要等待同步锁被释放后，才能够进行。</p></blockquote><h3 id="例子3："><a href="#例子3：" class="headerlink" title="例子3："></a>例子3：</h3><p>1.新建一个名为Service.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> voi <span class="title">fun1</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"fun1"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fun2是一个同步方法，和fun1中的同步代码块功能一样</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> voi <span class="title">fun2</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"fun2"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为MyThread1.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Service service;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span> <span class="params">(Service service)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.service = service;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">service.fun1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为MyThread2.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Service service;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyThread2</span> <span class="params">(Service service)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.service = service;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">service.fun2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.新建一个名为Demo04.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Service service = <span class="keyword">new</span> Service();</span><br><span class="line"></span><br><span class="line">Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(service));</span><br><span class="line">Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread2(service));</span><br><span class="line"></span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进程和线程的关系&lt;/li&gt;
&lt;li&gt;多线程程序运行模式&lt;/li&gt;
&lt;li&gt;定义线程的方法&lt;/li&gt;
&lt;li&gt;控制线程的常用函数&lt;/li&gt;
&lt;li&gt;多线程的数据安全&lt;/li&gt;
&lt;li&gt;同步线程的方法&lt;/li&gt;
&lt;li&gt;深入s
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程9.1之类集框架一</title>
    <link href="https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-9-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-9-1/</id>
    <published>2015-07-26T14:20:27.000Z</published>
    <updated>2018-08-02T04:04:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>类集框架</li><li>集合的种类</li><li>类集框架的基础结构</li></ul><hr><h2 id="类集框架"><a href="#类集框架" class="headerlink" title="类集框架"></a>类集框架</h2><blockquote><ul><li>类集框架是一组类和接口</li><li>位于java.util包当中</li><li>主要用于存储和管理对象</li><li>主要分为三大类：集合、列表和映射</li></ul></blockquote><p>集合：</p><blockquote><p>集合中的对象不按特定的方式排序，并且没有重复对象；</p></blockquote><p>列表：</p><blockquote><p>集合中的对象按照索引位置排序，可以有重复的对象。</p></blockquote><p>映射：</p><blockquote><p>集合中每一个元素包含一个键对象和一个值对象，键不可以重复，值可以重复。</p></blockquote><h2 id="类集框架的基础结构"><a href="#类集框架的基础结构" class="headerlink" title="类集框架的基础结构"></a>类集框架的基础结构</h2><p><img src="/img/java/9-0-01.jpg" alt="图9-0。01类集框架结构"></p><h3 id="例子1："><a href="#例子1：" class="headerlink" title="例子1："></a>例子1：</h3><p>1.新建一个名为Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 它的长度是无限延伸的</span></span><br><span class="line"><span class="comment">// String是泛型，也可以为其它类型，规定了此ArrayList中只能存放String类型的元素</span></span><br><span class="line">ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">arrayList.add(<span class="string">"A"</span>);</span><br><span class="line">arrayList.add(<span class="string">"AA"</span>);</span><br><span class="line">arrayList.add(<span class="string">"AAA"</span>);</span><br><span class="line">arrayList.add(<span class="string">"AAAA"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(arrayList.get(<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.size(); i++) &#123;</span><br><span class="line">System.out.println(arrayList.get(i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除一个元素</span></span><br><span class="line">arrayList.remove(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(arrayList.size());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类集框架&lt;/li&gt;
&lt;li&gt;集合的种类&lt;/li&gt;
&lt;li&gt;类集框架的基础结构&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;类集框架&quot;&gt;&lt;a href=&quot;#类集框架&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程9.0之数组</title>
    <link href="https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-9-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-9-0/</id>
    <published>2015-07-26T01:20:27.000Z</published>
    <updated>2018-08-02T04:04:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>数组的类型</li><li>数组的定义方法</li><li>数组的操作方法</li></ul><hr><h2 id="数组的类型"><a href="#数组的类型" class="headerlink" title="数组的类型"></a>数组的类型</h2><h2 id="数组的定义方法"><a href="#数组的定义方法" class="headerlink" title="数组的定义方法"></a>数组的定义方法</h2><h2 id="数组的操作方法"><a href="#数组的操作方法" class="headerlink" title="数组的操作方法"></a>数组的操作方法</h2><h3 id="例子1："><a href="#例子1：" class="headerlink" title="例子1："></a>例子1：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 数组的静态定义法</span></span><br><span class="line"><span class="comment">// arr是一个整型数组</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123; <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取数组中的一个值：arr[下标]，下标从0开始。</span></span><br><span class="line">System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印数组中所有的元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组的动态声明法，10表示数组的长度为10</span></span><br><span class="line"><span class="comment">// arr2中的元素的值默认为0</span></span><br><span class="line"><span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二维数组的定义方法</span></span><br><span class="line"><span class="keyword">int</span>[][] arr3 = &#123;&#123; <span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>&#125;, &#123; <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;, &#123; <span class="number">2</span>, <span class="number">5</span>&#125;&#125;;</span><br><span class="line">System.out.println(arr[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr3.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr3[i].length; j++) &#123;</span><br><span class="line">System.out.println(arr[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组的类型&lt;/li&gt;
&lt;li&gt;数组的定义方法&lt;/li&gt;
&lt;li&gt;数组的操作方法&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;数组的类型&quot;&gt;&lt;a href=&quot;#数组的类型&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程7.2之内部类和匿名内部类</title>
    <link href="https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-7-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/26/monkey-java-basic-courses-7-2/</id>
    <published>2015-07-26T01:20:27.000Z</published>
    <updated>2018-08-02T04:03:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>什么是内部类</li><li>内部类的使用方法</li><li>匿名内部类的使用方法</li></ul><hr><h2 id="什么是内部类"><a href="#什么是内部类" class="headerlink" title="什么是内部类"></a>什么是内部类</h2><p>含义：</p><blockquote><p>一个类定义在另一个类内部。</p></blockquote><h3 id="例子1："><a href="#例子1：" class="headerlink" title="例子1："></a>例子1：</h3><p>1.新建一个名为A.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="comment">// B类就是内部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">funB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 内部类B可以使用外部类A的成员变量和成员方法</span></span><br><span class="line"><span class="keyword">int</span> result = i + j;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><blockquote><p>在编译A.java源文件后，会生成两个class文件，即A.class和A$B.class。</p></blockquote><h2 id="内部类的使用方法"><a href="#内部类的使用方法" class="headerlink" title="内部类的使用方法"></a>内部类的使用方法</h2><blockquote><ul><li>要生成一个内部类对象，首先要有一个外部类对象。</li></ul></blockquote><h3 id="例子2："><a href="#例子2：" class="headerlink" title="例子2："></a>例子2：</h3><p>1.新建一个名为Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 生成外部类的对象</span></span><br><span class="line">A a = <span class="keyword">new</span> A();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成内部类的对象</span></span><br><span class="line">A.B b = <span class="keyword">new</span> A().new B();</span><br><span class="line"></span><br><span class="line">a.i= <span class="number">3</span>;</span><br><span class="line">b.j = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> result = b.funB();</span><br><span class="line">System.out.println(result);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h2><blockquote><ul><li>首先是一个内部类</li><li>其次它没有名字</li></ul></blockquote><h3 id="例子3："><a href="#例子3：" class="headerlink" title="例子3："></a>例子3：</h3><p>1.新建一个名为C.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">C</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为D.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">(C c)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"D类的fun函数"</span>);</span><br><span class="line">c.doSomething();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为Demo02.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">D d = <span class="keyword">new</span> D();</span><br><span class="line"><span class="comment">// fun括号中就是匿名内部类</span></span><br><span class="line">d.fun(<span class="keyword">new</span> C()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"匿名内部类"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是内部类&lt;/li&gt;
&lt;li&gt;内部类的使用方法&lt;/li&gt;
&lt;li&gt;匿名内部类的使用方法&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;什么是内部类&quot;&gt;&lt;a href=&quot;#什么是内部类&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程7.1之IO</title>
    <link href="https://blog.sunjiajia.com/2015/07/21/monkey-java-basic-courses-7-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/21/monkey-java-basic-courses-7-1/</id>
    <published>2015-07-21T01:20:27.000Z</published>
    <updated>2018-08-02T04:03:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>IO操作的目标</li><li>IO的分类方法</li><li>读取文件和写入文件的方法</li><li>大文件的读写方法</li><li>字符流的使用方法</li><li>处理流的使用实例</li><li>“装饰者（Decorator）”模式</li><li>节点流与处理流的关系</li></ul><hr><h2 id="IO操作的目标"><a href="#IO操作的目标" class="headerlink" title="IO操作的目标"></a>IO操作的目标</h2><blockquote><ul><li>从数据源当中读取数据，以及将数据写入到数据的目的地当中。</li></ul></blockquote><p>特点：</p><blockquote><ul><li>I/O系统的主要目标是为了对数据进行读写操作；</li><li>数据的流向以Java程序为参照物；</li><li>I/O流可以有三种分类方法；</li><li>有read和write两个主要方法。</li></ul></blockquote><h2 id="IO的分类方法"><a href="#IO的分类方法" class="headerlink" title="IO的分类方法"></a>IO的分类方法</h2><p>第一种：</p><blockquote><p>输入流；输出流。</p></blockquote><p>第二种：</p><blockquote><p>字节流；字符流。</p></blockquote><p>第三种：</p><blockquote><p>节点流；处理流。</p></blockquote><p>特点：</p><blockquote><ul><li>BufferedReader：字符输入处理流；readline()方法，每次读取一行，返回一个字符串；</li><li>BufferedReader br = new BufferedReader(new FileReader(“xxx.txt”));</li></ul></blockquote><h2 id="读取文件和写入文件的方法"><a href="#读取文件和写入文件的方法" class="headerlink" title="读取文件和写入文件的方法"></a>读取文件和写入文件的方法</h2><h3 id="核心类"><a href="#核心类" class="headerlink" title="核心类"></a>核心类</h3><blockquote><ul><li>InputStream和FileInputStream（从硬盘中文件读取数据）</li><li>OutputStream和FileOutputStream（把数据写入硬盘中文件）</li></ul></blockquote><h3 id="例子1：（请动手）"><a href="#例子1：（请动手）" class="headerlink" title="例子1：（请动手）"></a>例子1：（请动手）</h3><p>1.新建txt文件分别名为from.txt和to.txt；在from.txt中写上字符串abcd，然后新建一个名为Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.导入类；</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 2.声明输入流引用、生成输出流的引用</span></span><br><span class="line">FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 3.生成代表输入流的对象、生成代表输出流的对象</span></span><br><span class="line">fis = <span class="keyword">new</span> FileInputStream(<span class="string">"e:/src/from.txt"</span>);</span><br><span class="line">fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"e:/src/to.txt"</span>);</span><br><span class="line"><span class="comment">// 4.生成一个字节数组</span></span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">100</span>];</span><br><span class="line"><span class="comment">// 5.调用输入流对象的read方法，读取数据;调用输出流对象的write方法，写入数据;</span></span><br><span class="line"><span class="keyword">int</span> temp = fis.read(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line">fos.write(buffer, <span class="number">0</span>, temp);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="大文件的读写方法"><a href="#大文件的读写方法" class="headerlink" title="大文件的读写方法"></a>大文件的读写方法</h2><h3 id="例子2：（请动手）"><a href="#例子2：（请动手）" class="headerlink" title="例子2：（请动手）"></a>例子2：（请动手）</h3><p>1.新建txt文件分别名为from2.txt和to2.txt；在from2.txt中写上一篇很长（几万字，网上copy）的纯英文文章，然后新建一个名为Demo02.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">fis = <span class="keyword">new</span> FileInputStream(<span class="string">"e:/src/from2.txt"</span>);</span><br><span class="line">fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"e:/src/to2.txt"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> temp = fis.read(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line"><span class="comment">// temp是-1的时候，说明read函数已经读完</span></span><br><span class="line"><span class="comment">// 这时跳出循环</span></span><br><span class="line"><span class="keyword">if</span> (temp == -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">fos.write(buffer, <span class="number">0</span>, temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 一定要执行输入输出流的关闭</span></span><br><span class="line">fis.close();</span><br><span class="line">fos.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符流的使用方法"><a href="#字符流的使用方法" class="headerlink" title="字符流的使用方法"></a>字符流的使用方法</h2><blockquote><ul><li>读写文件时，以字符为基础；</li><li>字节输入流（常用FileReader）都是Reader的子类；</li><li>字节输出流（常用FileWriter）都是Writer的子类。</li></ul></blockquote><p>例子3：（请动手）</p><p>使用前面的from.txt和to.txt来进行操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">FileReader fr = <span class="keyword">null</span>;</span><br><span class="line">FileWriter fw = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">fr = <span class="keyword">new</span> FileReader(<span class="string">"e:/src/from.txt"</span>);</span><br><span class="line">fw = <span class="keyword">new</span> FileWriter(<span class="string">"e:/src/to.txt"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>[] buffer = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> temp = fr.read(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line"></span><br><span class="line">fw.write(buffer, <span class="number">0</span>, temp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fr.close();</span><br><span class="line">fw.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理流的使用实例"><a href="#处理流的使用实例" class="headerlink" title="处理流的使用实例"></a>处理流的使用实例</h2><p>例子4：BufferedReader的使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">FileReader fr = <span class="keyword">null</span>;</span><br><span class="line">BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">fr = <span class="keyword">new</span> FileReader(<span class="string">"e:/src/from.txt"</span>);</span><br><span class="line">br = <span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line"></span><br><span class="line">String line = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">line = br.readLine();</span><br><span class="line"><span class="keyword">if</span> (line == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(line);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fr.close();</span><br><span class="line">br.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="“装饰者（Decorator）”模式"><a href="#“装饰者（Decorator）”模式" class="headerlink" title="“装饰者（Decorator）”模式"></a>“装饰者（Decorator）”模式</h2><h3 id="例子5："><a href="#例子5：" class="headerlink" title="例子5："></a>例子5：</h3><p>1.定义一个Worker接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Worker</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomeWork</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.定义一个A公司的类AWorker，文件名为AWorker.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AWorker</span> <span class="keyword">implements</span> <span class="title">Worker</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Worker worker;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AWorker</span> <span class="params">(Worker worker)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.worker = worker;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomeWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"你好。我是A公司"</span>);</span><br><span class="line">worker.doSomeWork();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建两个文件名为Plumber.java和Carpenter.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Plumber</span> <span class="keyword">implements</span> <span class="title">Worker</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomeWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"修水管"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Carpenter</span> <span class="keyword">implements</span> <span class="title">Worker</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomeWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"修门窗"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.新建一个名为Demo05.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 生成一个A公司水管工对象</span></span><br><span class="line">Plumber plumber = <span class="keyword">new</span> Plumber();</span><br><span class="line">AWorker aWorker1 = <span class="keyword">new</span> AWorker(plumber);</span><br><span class="line">aWorker1.doSomeWork();</span><br><span class="line"></span><br><span class="line">Carpenter carpenter = <span class="keyword">new</span> Carpenter();</span><br><span class="line">AWorker aWorker2 = <span class="keyword">new</span> AWorker(carpenter);</span><br><span class="line">aWorker2.doSomeWork();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="节点流与处理流的关系"><a href="#节点流与处理流的关系" class="headerlink" title="节点流与处理流的关系"></a>节点流与处理流的关系</h2><blockquote><ul><li>处理流就是用来处理节点流的，增加节点流的功能。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IO操作的目标&lt;/li&gt;
&lt;li&gt;IO的分类方法&lt;/li&gt;
&lt;li&gt;读取文件和写入文件的方法&lt;/li&gt;
&lt;li&gt;大文件的读写方法&lt;/li&gt;
&lt;li&gt;字符流的使用方法&lt;/li&gt;
&lt;li&gt;处理流的使用实例&lt;/li&gt;
&lt;li&gt;“
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程7.0之Java当中的异常</title>
    <link href="https://blog.sunjiajia.com/2015/07/20/monkey-java-basic-courses-7-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/20/monkey-java-basic-courses-7-0/</id>
    <published>2015-07-19T23:20:27.000Z</published>
    <updated>2018-08-02T04:03:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>什么是异常</li><li>异常的分类</li><li>try…catch…finally结构的使用方法</li><li>throw的作用</li><li>throws的作用</li></ul><hr><h2 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h2><p>含义：</p><blockquote><ul><li>在面向对象的世界中，异常也是对象；</li><li>我们自己的话说，Java程序在正常运行中，出现的一些意外，被称为异常。</li><li>定义：中断了正常指令流的事件；</li><li>异常和语法错误是不同的东西；</li><li>语法错误在编译的时候就会报错；而异常是在运行的时候抛出来的。</li></ul></blockquote><p>格式:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.lang.ArithmeticException: / by zero</span><br><span class="line">at Demo5.main(Demo.java:3)</span><br></pre></td></tr></table></figure><h3 id="例子1"><a href="#例子1" class="headerlink" title="例子1:"></a>例子1:</h3><p>这个例子它报上面格式中的错误。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="异常的分类"><a href="#异常的分类" class="headerlink" title="异常的分类"></a>异常的分类</h2><blockquote><ul><li>所有的异常都是Throwable的直接子类；</li><li>有2个这样的类Exception和Error；</li><li>Error是JVM在运行是产生的错误，一旦产生它，JVM就会直接关闭；</li><li>Error也有各种子类；</li><li>Exception就是我们学习的异常，它也有很多子类，我们将在开发中遇到；</li><li>Exception分为两大类：运行时异常和编译时异常;</li><li>异常被捕捉后，程序可以正常运行和编译。</li></ul></blockquote><h2 id="try…catch…finally结构的使用方法"><a href="#try…catch…finally结构的使用方法" class="headerlink" title="try…catch…finally结构的使用方法"></a>try…catch…finally结构的使用方法</h2><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="comment">// 有可能出现异常的代码，如果语句2出现异常，那么其后面的语句不再执行，</span></span><br><span class="line">  <span class="comment">// 直接跳入catch体。</span></span><br><span class="line">  语句<span class="number">1</span>；</span><br><span class="line">  语句<span class="number">2</span>；</span><br><span class="line">  ...</span><br><span class="line">&#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">  <span class="comment">// Exception e是JVM产生的异常对象；</span></span><br><span class="line">  <span class="comment">// 在这里捕捉异常；</span></span><br><span class="line">  e.printStackTrace(); <span class="comment">//打印异常信息；</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 无论是否捕捉到了异常，都会执行。有时也称为异常的出口</span></span><br><span class="line">  语句；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例子2：（请动手）"><a href="#例子2：（请动手）" class="headerlink" title="例子2：（请动手）"></a>例子2：（请动手）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"Hello Monkey!"</span>);</span><br><span class="line">      <span class="comment">// 有可能出现异常的代码</span></span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 无论是否捕捉到了异常，都会执行。有时也称为异常的出口</span></span><br><span class="line">System.out.println(<span class="string">"Hello Android!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="throw和throws"><a href="#throw和throws" class="headerlink" title="throw和throws"></a>throw和throws</h2><h3 id="例子3：（请动手）"><a href="#例子3：（请动手）" class="headerlink" title="例子3：（请动手）"></a>例子3：（请动手）</h3><p>1.新建一个User.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> money;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">// 生成一个异常对象</span></span><br><span class="line">RuntimeException e = <span class="keyword">new</span> RuntimeException(<span class="string">"年龄不能为负数！"</span>);</span><br><span class="line"><span class="comment">// 抛出这个异常</span></span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// throws的用法，对象在使用这个函数时，必须要捕捉异常。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">int</span> money)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money = money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">User user01 = <span class="keyword">new</span> User();</span><br><span class="line"><span class="comment">//年龄怎么会有负数呢？因此我们要捕捉这个异常。</span></span><br><span class="line">user01.setAge(-<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user01.setMoney(<span class="number">2000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">System.out.println(<span class="string">"2000太少！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是异常&lt;/li&gt;
&lt;li&gt;异常的分类&lt;/li&gt;
&lt;li&gt;try…catch…finally结构的使用方法&lt;/li&gt;
&lt;li&gt;throw的作用&lt;/li&gt;
&lt;li&gt;throws的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程6.4之接口的基本语法与应用（重要）</title>
    <link href="https://blog.sunjiajia.com/2015/07/18/monkey-java-basic-courses-6-4/"/>
    <id>https://blog.sunjiajia.com/2015/07/18/monkey-java-basic-courses-6-4/</id>
    <published>2015-07-18T03:20:27.000Z</published>
    <updated>2018-08-02T04:03:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>什么是接口</li><li>接口的基本语法</li><li>为什么要使用接口</li><li>工厂方法模式</li></ul><hr><h2 id="什么是接口"><a href="#什么是接口" class="headerlink" title="什么是接口"></a>什么是接口</h2><p>含义：</p><blockquote><p>Java接口是一系列方法的声明，一个接口只有方法的特征没有方法的实现，因此这些方法可以在不同的地方被不同的类实现，而这些实现可以具有不同的行为（功能）。</p></blockquote><h2 id="接口的基本语法"><a href="#接口的基本语法" class="headerlink" title="接口的基本语法"></a>接口的基本语法</h2><blockquote><ul><li>使用interface定义；</li><li>接口当中的方法都是抽象方法（不用写abstract）；</li><li>接口当中的方法都是public权限（不用写public）；</li><li>实现接口使用implements关键字；</li><li>一个类可以实现多个接口；</li><li>一个接口可以继承多个接口；</li></ul></blockquote><p>注意：</p><blockquote><ul><li>不能生成对象；</li><li>用一个类来实现（关键字是implements）接口使用它；</li><li>复写接口中的抽象方法实现相应的功能。</li></ul></blockquote><h2 id="例子1：（请动手）"><a href="#例子1：（请动手）" class="headerlink" title="例子1：（请动手）"></a>例子1：（请动手）</h2><p>1.新建一个名为USB.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">USB</span></span>&#123;</span><br><span class="line">  <span class="comment">// 它们是public权限的抽象函数</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为WIFI.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">WIFI</span></span>&#123;</span><br><span class="line">  <span class="comment">// 它们是public权限的抽象函数</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为USBPhone.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">USBPhone</span> <span class="keyword">implements</span> <span class="title">USB</span>,<span class="title">WIFI</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"USBPhone read!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"USBPhone write!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"WIFI open!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"WIFI close!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.新建一个名为Demo01.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    USBPhone phone = <span class="keyword">new</span> USBPhone();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向上转型</span></span><br><span class="line">    USB usb = phone;</span><br><span class="line">    WIFI wifi = phone;</span><br><span class="line"></span><br><span class="line">    usb.read();</span><br><span class="line">    usb.write();</span><br><span class="line"></span><br><span class="line">    wifi.open();</span><br><span class="line">    wifi.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="为什么要使用接口"><a href="#为什么要使用接口" class="headerlink" title="为什么要使用接口"></a>为什么要使用接口</h2><h2 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h2><blockquote><ul><li>请反复练习下面的例子2，在代码中深刻理解<code>为什么要使用接口</code>和<code>工厂方法模式</code>。</li></ul></blockquote><blockquote><ul><li>关于<code>工厂方法模式</code>的定义，请阅读百度百科词条<a href="http://t.cn/RLIPCE0" target="_blank" rel="noopener">【工厂方法模式】</a>。</li></ul></blockquote><h2 id="例子2：（请动手）"><a href="#例子2：（请动手）" class="headerlink" title="例子2：（请动手）"></a>例子2：（请动手）</h2><p>1.新建一个名为Printer.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(String s)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为HPPrinter.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HPPrinter</span> <span class="keyword">implements</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"HP open"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"HP close"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"HP print--&gt;"</span> + s);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为CanonPrinter.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanonPrinter</span> <span class="keyword">implements</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Canon clean"</span>);  </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Canon open"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Canon close"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Canon print--&gt;"</span> + s);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.新建一个名为Demo02.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Printer printer = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 用flag来模拟用户选择打印机。</span></span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">      printer = <span class="keyword">new</span> HPPrinter();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">      printer = <span class="keyword">new</span> CanonPrinter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    printer.open();</span><br><span class="line">    printer.print(<span class="string">"abcdefghijklmn"</span>);</span><br><span class="line">    printer.close();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.新建一个名为PrinterFactory.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrinterFactory</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Printer <span class="title">getPrinter</span><span class="params">(<span class="keyword">int</span> flag)</span></span>&#123;</span><br><span class="line">    Printer printer = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 用flag来模拟用户选择打印机。</span></span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">      printer = <span class="keyword">new</span> HPPrinter();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">      printer = <span class="keyword">new</span> CanonPrinter();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> printer;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.新建一个名为Demo03.java的源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo03</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    Printer printer = PrinterFactory.getPrinter(flag);</span><br><span class="line">    printer.open();</span><br><span class="line">    printer.print(<span class="string">"abcdefghijklmn"</span>);</span><br><span class="line">    printer.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>请注意4、5、6不同写法的意义。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是接口&lt;/li&gt;
&lt;li&gt;接口的基本语法&lt;/li&gt;
&lt;li&gt;为什么要使用接口&lt;/li&gt;
&lt;li&gt;工厂方法模式&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;什么是接口&quot;&gt;&lt;a href=&quot;#什么是接口&quot; class=
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程6.3之protected权限</title>
    <link href="https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-3/"/>
    <id>https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-3/</id>
    <published>2015-07-16T12:30:27.000Z</published>
    <updated>2018-08-02T04:02:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>protected权限</li></ul><hr><h2 id="protected权限"><a href="#protected权限" class="headerlink" title="protected权限"></a>protected权限</h2><blockquote><ul><li>protected权限首先拥有和default一样的功能；</li><li>但是它只能修饰成员变量和成员函数；</li><li>允许跨软件包的继承；</li><li>只允许类的子类继承使用它的protected成员属性和函数；</li></ul></blockquote><h3 id="例子：（请动手）"><a href="#例子：（请动手）" class="headerlink" title="例子：（请动手）"></a>例子：（请动手）</h3><p>1、新建一个Person.java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sunjiajia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> String name;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"eat"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"sleep"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、新建一个Student.java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.sunjiajia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sunjiajia.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字是 "</span> + name + <span class="string">"，我的年龄是 "</span> + age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="权限的总结"><a href="#权限的总结" class="headerlink" title="权限的总结"></a>权限的总结</h2><blockquote><ul><li>public &gt; protected &gt; default &gt; private</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;protected权限&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;protected权限&quot;&gt;&lt;a href=&quot;#protected权限&quot; class=&quot;headerlink&quot; title=&quot;protected权限&quot;&gt;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程6.2之访问权限</title>
    <link href="https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-2/</id>
    <published>2015-07-16T07:30:27.000Z</published>
    <updated>2018-08-02T04:02:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>Java当中的访问权限</li><li>软件包的导入</li></ul><hr><h2 id="Java当中的访问权限"><a href="#Java当中的访问权限" class="headerlink" title="Java当中的访问权限"></a>Java当中的访问权限</h2><p>一共分为4大类：</p><blockquote><ul><li>public：公共权限，既可以修饰类，也可以修饰成员变量和成员函数；</li><li>private：私有权限</li><li>default：包级别访问权限</li><li>protected：受保护权限</li></ul></blockquote><h3 id="public权限"><a href="#public权限" class="headerlink" title="public权限"></a>public权限</h3><blockquote><ul><li>如果一个类不是public（公共）的，那么这个类不能被外部软件包访问；</li><li>如果一个类的成员变量或者方法不是public（公共）的，那么它们也不能被外部软件包访问；</li><li>没有任何限制，同一个包中，或者不同软件包当中，都可以只有访问。</li></ul></blockquote><h3 id="private权限"><a href="#private权限" class="headerlink" title="private权限"></a>private权限</h3><blockquote><ul><li>一般情况下只能修饰成员变量和成员函数；</li><li>如果成员变量或者函数被private修饰，那么它们只能在本类中被访问。</li></ul></blockquote><h3 id="default权限"><a href="#default权限" class="headerlink" title="default权限"></a>default权限</h3><blockquote><ul><li>默认权限，如果类、成员变量或者成员方法没有被任何其它权限修饰，那么它就是default权限；</li><li>如果两个类在同一软件包中，那么可以自由使用彼此的成员方法和函数。</li></ul></blockquote><h3 id="protected权限（重要）"><a href="#protected权限（重要）" class="headerlink" title="protected权限（重要）"></a>protected权限（重要）</h3><p>这部分内容下节课再讲。</p><h2 id="软件包的导入"><a href="#软件包的导入" class="headerlink" title="软件包的导入"></a>软件包的导入</h2><blockquote><p>导入其他软件包的类，方便代码的书写。</p></blockquote><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sunjiajia.Person;</span><br></pre></td></tr></table></figure><p>如果软件包下面有多个要使用的类，那么可以一次导入该包下面的所有类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sunjiajia.*;</span><br></pre></td></tr></table></figure><h2 id="例子：（请动手）"><a href="#例子：（请动手）" class="headerlink" title="例子：（请动手）"></a>例子：（请动手）</h2><p>1.新建一个名为Person.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sunjiajia</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> String name;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> grade;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> sunjiajia.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sunjiajia.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  com.sunjiajia.Person p = <span class="keyword">new</span> com.sunjiajia.Person();</span><br><span class="line">  p.name = <span class="string">'li4'</span>;</span><br><span class="line">  p.age = <span class="number">18</span>;</span><br><span class="line">  <span class="comment">// 下面这行代码会报错，参见private的用法；</span></span><br><span class="line">  <span class="comment">// p.grade = 5;</span></span><br><span class="line">  p.introduce();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java当中的访问权限&lt;/li&gt;
&lt;li&gt;软件包的导入&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Java当中的访问权限&quot;&gt;&lt;a href=&quot;#Java当中的访问权限&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程6.1之包（package）</title>
    <link href="https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-1/</id>
    <published>2015-07-16T05:30:27.000Z</published>
    <updated>2018-08-02T04:02:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>什么是Java当中的软件包</li><li>为什么要使用软件包</li><li>如何给一个类打包</li></ul><hr><h2 id="什么是Java当中的软件包"><a href="#什么是Java当中的软件包" class="headerlink" title="什么是Java当中的软件包"></a>什么是Java当中的软件包</h2><p>简单的理解，就是将编译后的.class文件放在不同的文件夹下面。</p><blockquote><ul><li>软件包为Java类提供了命名空间；</li><li>打包需要使用package指令；</li><li>一个类的全名应该是“包名.类名”。</li></ul></blockquote><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunjiajia.demo;</span><br></pre></td></tr></table></figure><p>示例：（请动手）</p><p>1、 新建Demo01.java文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> androidmonkey.demo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"hello demo01"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、 新建 Demo02.java文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> androidmonkey.demo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"hello demo02"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="为什么要使用软件包"><a href="#为什么要使用软件包" class="headerlink" title="为什么要使用软件包"></a>为什么要使用软件包</h2><blockquote><ul><li>使用软件包可以将不同功能的类分别开来，方便代码的维护与更新，符合面向对象的编程思想。</li><li>使用软件包以后，一个类的全名应该是  <code>包名.类名</code>。</li></ul></blockquote><h2 id="如何给一个类打包"><a href="#如何给一个类打包" class="headerlink" title="如何给一个类打包"></a>如何给一个类打包</h2><h3 id="编译方法"><a href="#编译方法" class="headerlink" title="编译方法"></a>编译方法</h3><p>编译Java源文件的时候需要用这个命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -d . *.java</span><br></pre></td></tr></table></figure><p>注意：</p><blockquote><ul><li><code>.</code>表示在当前文件夹下进行编译；</li><li><code>*.java</code>表示当前文件夹下的所有java源文件都编译；</li><li><code>-d</code>表示依照包名生成相应的文件夹。</li></ul></blockquote><h3 id="执行方法"><a href="#执行方法" class="headerlink" title="执行方法"></a>执行方法</h3><p>执行.class文件时需要用类的全称：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java androidmonkey.demo.Demo01</span><br></pre></td></tr></table></figure><h2 id="包名的命名规范："><a href="#包名的命名规范：" class="headerlink" title="包名的命名规范："></a>包名的命名规范：</h2><blockquote><ul><li>要求包名的所有的字母都要小写；</li><li>包名一般情况下是域名段倒过来写（com.sunjiajia）；</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是Java当中的软件包&lt;/li&gt;
&lt;li&gt;为什么要使用软件包&lt;/li&gt;
&lt;li&gt;如何给一个类打包&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;什么是Java当中的软件包&quot;&gt;&lt;a href=&quot;#什么是Java当中的软
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程6.0之抽象类和抽象函数</title>
    <link href="https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-6-0/</id>
    <published>2015-07-16T02:30:27.000Z</published>
    <updated>2018-08-02T04:02:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>抽象函数的语法特征</li><li>抽象类的语法特征</li><li>抽象类的作用</li></ul><hr><h2 id="抽象函数的语法特征"><a href="#抽象函数的语法特征" class="headerlink" title="抽象函数的语法特征"></a>抽象函数的语法特征</h2><p>定义：</p><blockquote><p>只有函数的定义（返回值类型、函数名、参数列表），没有函数体的函数被称为抽象函数。</p></blockquote><p>特点：</p><blockquote><ul><li>如果一个类中有一个或者一个以上的抽象函数，那么这个类也必须被定义为抽象类；</li></ul></blockquote><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">function</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></p><h2 id="抽象类的语法特征"><a href="#抽象类的语法特征" class="headerlink" title="抽象类的语法特征"></a>抽象类的语法特征</h2><p>定义：</p><blockquote><p>使用abstract定义的类（在class前加上abstract关键字）称之为抽象类。</p></blockquote><p>特点：</p><blockquote><ul><li>抽象类天生就是用来被继承的，俗称基类；抽象类的子类也必须声明为抽象的，或者，必须在子类中复写父类中的抽象函数；</li><li>抽象类不能够生成对象；但抽象类可以有构造函数，它可以在子类中被调用；（重要）</li><li>如果一个类当中包含有抽象函数，那么这个类必须被声明为抽象函数；</li><li>如果一个类当中没有抽象函数，那么这个类也可以被声明为抽象类。</li></ul></blockquote><h2 id="例子1：（请动手）"><a href="#例子1：（请动手）" class="headerlink" title="例子1：（请动手）"></a>例子1：（请动手）</h2><ol><li>创建一个名为Person.java的Java源文件：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  Person()&#123;</span><br><span class="line">    System.out.println(<span class="string">"Person的构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Person(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    System.out.println(<span class="string">"Person的2个参数构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字叫 "</span> + <span class="keyword">this</span>.name + <span class="string">"，我的年龄是 "</span> + <span class="keyword">this</span>.age);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//抽象函数</span></span><br><span class="line">  <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.创建一个名为Chinese.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chinese</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  String address;</span><br><span class="line"></span><br><span class="line">  Chinese()&#123;</span><br><span class="line">    System.out.println(<span class="string">"Chinese的构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Chinese(String name, <span class="keyword">int</span> age, String address)&#123;</span><br><span class="line">    <span class="keyword">super</span>(name, age);</span><br><span class="line">    <span class="keyword">this</span>.address = address;</span><br><span class="line">    System.out.println(<span class="string">"Chinese的3个参数构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Chinese这个子类复写了Person中的抽象函数eat()，</span></span><br><span class="line">  <span class="comment">// 复写后的eat()函数不再是抽象函数，</span></span><br><span class="line">  <span class="comment">// 因此，Chinese类中没有抽象函数，它也不需要声明为抽象类。</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"用筷子吃饭！"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3.创建一个名为Demo01.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 子类的对象赋值给父类的引用，这是向上转型。</span></span><br><span class="line">    Person p01 = <span class="keyword">new</span> Chinese();</span><br><span class="line">    p01.eat();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="抽象类的作用"><a href="#抽象类的作用" class="headerlink" title="抽象类的作用"></a>抽象类的作用</h2><p>作用：</p><blockquote><ul><li>父类无法完成的函数具体功能，就声明为抽象函数，让子类复写实现（必须）；</li><li>通过方法的复写实现了多态的属性。</li></ul></blockquote><p>例子2：（请动手）</p><p>1.新建一个Printer.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"open"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"close"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 抽象函数print()</span></span><br><span class="line">  <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个HpPrinter.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该惠普打印机为喷墨打印机</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HpPrinter</span> <span class="keyword">extends</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="comment">// 重写父类的抽象方法print()方法</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"使用惠普喷墨打印机进行打印"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个CanonPrinter.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该佳能打印机为针式打印机</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanonPrinter</span> <span class="keyword">extends</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="comment">// 重写父类的抽象方法print()方法</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"使用佳能针式打印机进行打印"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.新建一个Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该佳能打印机为针式打印机</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Printer hp = <span class="keyword">new</span> HpPrinter(); <span class="comment">// 向上转型</span></span><br><span class="line">    hp.open();</span><br><span class="line">    hp.print();</span><br><span class="line">    hp.close();</span><br><span class="line"></span><br><span class="line">    Printer cannon = <span class="keyword">new</span> CanonPrinter();</span><br><span class="line">    cannon.open();</span><br><span class="line">    cannon.print();</span><br><span class="line">    cannon.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抽象函数的语法特征&lt;/li&gt;
&lt;li&gt;抽象类的语法特征&lt;/li&gt;
&lt;li&gt;抽象类的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;抽象函数的语法特征&quot;&gt;&lt;a href=&quot;#抽象函数的语法特征&quot; class=&quot;head
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.6之面向对象应用</title>
    <link href="https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-5-6/"/>
    <id>https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-5-6/</id>
    <published>2015-07-16T01:00:27.000Z</published>
    <updated>2018-08-02T04:02:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>被客户不断变化的需求所“折磨”；</li><li>客户第1次需求：我有一台惠普打印机，开发一个打印机控制程序，要能够实现开机、关机和打印功能；</li><li>客户第2次需求：我的办公室加了一台新的佳能打印机，把你的程序修改一下；</li><li>客户第3次需求：我的办公室又又加了一台新的清华同方打印机！（自己实现）</li></ul><hr><p>1.新建一个名为Printer.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Open"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Close"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"print---&gt;"</span> + s);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.新建一个名为HpPrinter.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HpPrinter</span> <span class="keyword">extends</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3.新建一个名为CanonPrinter.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanonPrinter</span> <span class="keyword">extends</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.clean();</span><br><span class="line">    <span class="keyword">super</span>.close();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"clean"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4.新建一个名为Demo.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 用来判断选择惠普打印机还是佳能打印机</span></span><br><span class="line">    <span class="comment">// 0代表惠普，1代表佳能</span></span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;</span><br><span class="line">      HpPrinter hpPrinter = <span class="keyword">new</span> HpPrinter();</span><br><span class="line">      hpPrinter.open();</span><br><span class="line">      hpPrinter.print(<span class="string">"锄禾日当午"</span>);</span><br><span class="line">      hpPrinter.close();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">      CanonPrinter canonPrinter = <span class="keyword">new</span> CanonPrinter();</span><br><span class="line">      canonPrinter.open();</span><br><span class="line">      canonPrinter.print(<span class="string">"汗滴禾下土"</span>);</span><br><span class="line">      canonPrinter.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被客户不断变化的需求所“折磨”；&lt;/li&gt;
&lt;li&gt;客户第1次需求：我有一台惠普打印机，开发一个打印机控制程序，要能够实现开机、关机和打印功能；&lt;/li&gt;
&lt;li&gt;客户第2次需求：我的办公室加了一台新的佳能打印机，把你的程
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.5之对象的转型</title>
    <link href="https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-5-5/"/>
    <id>https://blog.sunjiajia.com/2015/07/16/monkey-java-basic-courses-5-5/</id>
    <published>2015-07-16T00:00:27.000Z</published>
    <updated>2018-08-02T04:01:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>对象的向上转型</li><li>对象的向下转型</li></ul><hr><h2 id="对象的向上转型"><a href="#对象的向上转型" class="headerlink" title="对象的向上转型"></a>对象的向上转型</h2><p>概念：</p><blockquote><p>将子类的对象赋值给父类的引用。</p></blockquote><p>注意：</p><blockquote><ul><li>两个类一定要有继承关系；</li><li>将子类的对象赋值给父类的引用；</li><li>一个引用能够调用哪些成员（变量、方法），取决于这个引用的类型；</li><li>一个引用调用的是哪个方法，取决于这个引用所指向的对象。</li></ul></blockquote><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Student类是Person类的子类</span></span><br><span class="line">Student s = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">// 将子类的对象s赋值给父类的引用p；</span></span><br><span class="line"><span class="comment">// 理解：每一个学生都是一个人。</span></span><br><span class="line">Person p = s;</span><br></pre></td></tr></table></figure></p><h3 id="例子1：（请动手）"><a href="#例子1：（请动手）" class="headerlink" title="例子1：（请动手）"></a>例子1：（请动手）</h3><p>1.新建一个名为Person.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字叫 "</span> + <span class="keyword">this</span>.name + <span class="string">"，我的年龄是 "</span> + <span class="keyword">this</span>.age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Student.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> grade;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我正在学习。"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.introduce();</span><br><span class="line">    System.out.println(<span class="string">"我的年级是 "</span> + grade);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 子类Student的对象stu01</span></span><br><span class="line">    Student stu01 = <span class="keyword">new</span> Student();</span><br><span class="line">    <span class="comment">// 向上转型</span></span><br><span class="line">    <span class="comment">// 将子类的对象stu01赋值给父类的引用p1</span></span><br><span class="line">    Person p1 = stu01;</span><br><span class="line"></span><br><span class="line">    p1.name = <span class="string">"li4"</span>;</span><br><span class="line">    p1.age = <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里的introduce()方法是子类的。</span></span><br><span class="line">    <span class="comment">// 引用p1指向的对象是stu01，因此p1所调用的方法是stu01的方法。</span></span><br><span class="line">    p1.introduce();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象的向下转型"><a href="#对象的向下转型" class="headerlink" title="对象的向下转型"></a>对象的向下转型</h2><p>概念：</p><blockquote><p>将父类的对象赋值给子类的引用。</p></blockquote><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Student stu01 = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">// 向上转型</span></span><br><span class="line">Person p1 = stu01;</span><br><span class="line"><span class="comment">// 向下转型</span></span><br><span class="line">Student stu02 = (Student)p1;</span><br></pre></td></tr></table></figure></p><p>特点：</p><blockquote><ul><li>要进行向下转型，先进性向上转型；<br>*</li></ul></blockquote><h3 id="例子2：（请动手）"><a href="#例子2：（请动手）" class="headerlink" title="例子2：（请动手）"></a>例子2：（请动手）</h3><p>1.新建一个名为Demo01.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 子类Student的对象stu01</span></span><br><span class="line">    Student stu01 = <span class="keyword">new</span> Student();</span><br><span class="line">    <span class="comment">// 向上转型</span></span><br><span class="line">    Person p1 = stu01;</span><br><span class="line">    <span class="comment">// 向下转型</span></span><br><span class="line">    Student stu02 = (Student)p1;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象的向上转型&lt;/li&gt;
&lt;li&gt;对象的向下转型&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;对象的向上转型&quot;&gt;&lt;a href=&quot;#对象的向上转型&quot; class=&quot;headerlink&quot; title=&quot;对象的向上转型&quot;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.4之函数的复写（override）</title>
    <link href="https://blog.sunjiajia.com/2015/07/15/monkey-java-basic-courses-5-4/"/>
    <id>https://blog.sunjiajia.com/2015/07/15/monkey-java-basic-courses-5-4/</id>
    <published>2015-07-15T04:00:27.000Z</published>
    <updated>2018-08-02T04:01:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>函数的复写（override）</li><li>使用super调用父类的成员函数</li></ul><hr><h2 id="函数的复写（override）"><a href="#函数的复写（override）" class="headerlink" title="函数的复写（override）"></a>函数的复写（override）</h2><blockquote><p>复写（override），也被称为覆盖或者重写。<br>在你对父类的成员方法不满意的时候，你可以在子类中复写这个方法，来写出符合自己要求的方法。</p></blockquote><p>特点：</p><blockquote><ul><li>1.在具有父子关系的两个类当中；</li><li>2.子类和父类中各有一个函数，这个函数的定义（返回值类型，函数名和参数列表）完全相同，那么它们的关系就是复写。</li></ul></blockquote><h2 id="使用super调用父类的成员函数"><a href="#使用super调用父类的成员函数" class="headerlink" title="使用super调用父类的成员函数"></a>使用super调用父类的成员函数</h2><p>左右:</p><blockquote><p>减少子类复写父类的成员方法时出现的重复代码。</p></blockquote><h2 id="例子：（请动手）"><a href="#例子：（请动手）" class="headerlink" title="例子：（请动手）"></a>例子：（请动手）</h2><p>1.新建一个名为Person.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字叫 "</span> + <span class="keyword">this</span>.name + <span class="string">"，我的年龄是 "</span> + <span class="keyword">this</span>.age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Student.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> grade;</span><br><span class="line">  <span class="comment">// 复写（override），也被称为覆盖或者重写</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 使用super调用父类Person的成员函数；</span></span><br><span class="line">    <span class="comment">// 它不一定必须写在第一行。</span></span><br><span class="line">    <span class="keyword">super</span>.introduce();</span><br><span class="line">    System.out.println(<span class="string">"我的年级是 "</span> + grade);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Student stu01 = <span class="keyword">new</span> Student();</span><br><span class="line">    stu01.name = <span class="string">"zhang3"</span>;</span><br><span class="line">    stu01.age = <span class="number">19</span>;</span><br><span class="line">    stu01.grade = <span class="number">8</span>;</span><br><span class="line">    stu01.introduce();</span><br><span class="line"></span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    p1.name = <span class="string">"zhang3"</span>;</span><br><span class="line">    p1.age = <span class="number">19</span>;</span><br><span class="line">    p1.introduce();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数的复写（override）&lt;/li&gt;
&lt;li&gt;使用super调用父类的成员函数&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;函数的复写（override）&quot;&gt;&lt;a href=&quot;#函数的复写（override）&quot; c
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.3之子类实例化</title>
    <link href="https://blog.sunjiajia.com/2015/07/15/monkey-java-basic-courses-5-3/"/>
    <id>https://blog.sunjiajia.com/2015/07/15/monkey-java-basic-courses-5-3/</id>
    <published>2015-07-15T04:00:27.000Z</published>
    <updated>2018-08-02T04:01:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>生成子类的过程</li><li>使用super调用父类构造函数的方法</li></ul><hr><h2 id="生成子类的过程"><a href="#生成子类的过程" class="headerlink" title="生成子类的过程"></a>生成子类的过程</h2><h2 id="使用super调用父类构造函数的方法"><a href="#使用super调用父类构造函数的方法" class="headerlink" title="使用super调用父类构造函数的方法"></a>使用super调用父类构造函数的方法</h2><p>注意：</p><blockquote><ul><li>在子类的构造函数中，必须调用父类的构造函数；</li><li>super所调用的是父类的哪个构造函数，是由super(参数)中的参数个数决定；</li><li>super(参数);必须是构造函数的第一行。</li></ul></blockquote><p>例子：（请动手）</p><p>1.新建一个名为Person.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  Person()&#123;</span><br><span class="line">    System.out.println(<span class="string">"Person的无参数构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Person(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    System.out.println(<span class="string">"Person的有参数构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"吃东西"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字叫 "</span> + <span class="keyword">this</span>.name + <span class="string">"，我的年龄 "</span> + <span class="keyword">this</span>.age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Student.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> grade;</span><br><span class="line">  Student()&#123;</span><br><span class="line">    System.out.println(<span class="string">"Student的无参数构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Student(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> grade)&#123;</span><br><span class="line">    <span class="comment">// 调用父类Person当中的有两个参数name和age的构造函数</span></span><br><span class="line">    <span class="keyword">super</span>(name, age);</span><br><span class="line">    <span class="keyword">this</span>.grade = grade;</span><br><span class="line">    System.out.println(<span class="string">"Student的有参数构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我学习的年级是 "</span> + <span class="keyword">this</span>.grade);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Student stu01 = <span class="keyword">new</span> Student(<span class="string">"zhang3"</span>,<span class="number">18</span>,<span class="number">3</span>);</span><br><span class="line">    stu01.eat();</span><br><span class="line">    stu01.introduce();</span><br><span class="line">    stu01.study();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成子类的过程&lt;/li&gt;
&lt;li&gt;使用super调用父类构造函数的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;生成子类的过程&quot;&gt;&lt;a href=&quot;#生成子类的过程&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.2之继承（extends）基础</title>
    <link href="https://blog.sunjiajia.com/2015/07/15/monkey-java-basic-courses-5-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/15/monkey-java-basic-courses-5-2/</id>
    <published>2015-07-15T03:00:27.000Z</published>
    <updated>2018-08-02T04:01:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>什么是继承</li><li>为什么要使用继承</li><li>继承的基本语法特点</li></ul><hr><h2 id="继承的概念和格式"><a href="#继承的概念和格式" class="headerlink" title="继承的概念和格式"></a>继承的概念和格式</h2><blockquote><ul><li>现实世界中，打个比方，继承就是富二代，就是儿子得到并使用老子的东西；</li><li>面向对象的世界中，继承就是一个类得到了另外一个类当中的成员变量和成员方法。</li></ul></blockquote><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  语句；</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  语句；</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  语句<span class="number">1</span>；</span><br><span class="line">  语句<span class="number">2</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>注意：Java中只允许单继承，不允许多继承。</p></blockquote><p>例子：（请动手）</p><p>1.新建一个名为Person.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"吃东西"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字叫 "</span> + <span class="keyword">this</span>.name + <span class="string">"，我的年龄 "</span> + <span class="keyword">this</span>.age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Student.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> grade;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我学习的年级是 "</span> + <span class="keyword">this</span>.grade);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.新建一个名为Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Student类由于继承了Person，</span></span><br><span class="line">    <span class="comment">// 因此它具有了父类Person的name和age成员变量，以及eat()和introduce()成员方法，</span></span><br><span class="line">    <span class="comment">// 所以Student的对象stu01拥有这些属性和方法。这就是继承。</span></span><br><span class="line">    <span class="comment">// 这就减少了重复代码（name和age以及eat()和introduce()）在Student类中再次出现。</span></span><br><span class="line">    Student stu01 = <span class="keyword">new</span> Student();</span><br><span class="line">    stu01.name = <span class="string">"zhang3"</span>;</span><br><span class="line">    stu01.age = <span class="string">"15"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Student类中的成员属性；</span></span><br><span class="line">    stu01.grade = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">    stu01.eat();</span><br><span class="line">    stu01.introduce();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Student类中的成员方法；</span></span><br><span class="line">    stu01.study();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="为什么要使用继承"><a href="#为什么要使用继承" class="headerlink" title="为什么要使用继承"></a>为什么要使用继承</h2><p>特点：（理解了继承的优点，就知道了为什么要使用继承）</p><blockquote><ul><li>面向对象的终极目标就是要减少程序中的重复代码，而类的继承，就可以有效减少重复代码；</li><li>类的继承结合方法的重载，可以极大的减少重复代码；</li><li>子类继承父类，可以对父类的功能进行扩展，符合面向对象的编程思想。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是继承&lt;/li&gt;
&lt;li&gt;为什么要使用继承&lt;/li&gt;
&lt;li&gt;继承的基本语法特点&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;继承的概念和格式&quot;&gt;&lt;a href=&quot;#继承的概念和格式&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.1之static关键字的作用</title>
    <link href="https://blog.sunjiajia.com/2015/07/13/monkey-java-basic-courses-5-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/13/monkey-java-basic-courses-5-1/</id>
    <published>2015-07-13T14:00:27.000Z</published>
    <updated>2018-08-02T04:01:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>静态成员变量的语法特点</li><li>静态函数的语法特点</li><li>静态代码块的语法特点</li></ul><hr><h2 id="静态成员变量的语法特点"><a href="#静态成员变量的语法特点" class="headerlink" title="静态成员变量的语法特点"></a>静态成员变量的语法特点</h2><blockquote><p>在定义成员变量的时候，在前面添加一个static关键字。</p><ul><li>格式：static int i;</li></ul></blockquote><p>特点：</p><blockquote><ul><li>静态成员变量可以直接用类名来调用，格式为：类名.成员变量名；</li><li>所有的对象使用的静态变量是同一份，任何一个对象的静态变量被修改，那么其他对象的静态变量也会被修改。</li></ul></blockquote><p>静态、普通成员变量的区别：</p><p>看图：（理解）<br><img src="/img/java/5_1_01_static_variable.jpg" alt="图5-1-01。静态、普通成员变量"></p><p>例子：（请动手加深理解）</p><p>1.新建一个名为Person.java的Java源代码文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Demo01.java的Java源代码文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    Person p2 = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用静态成员变量，</span></span><br><span class="line">    <span class="comment">// 由于所有对象使用的静态变量是同一份，所以，</span></span><br><span class="line">    <span class="comment">// p1.i 和 p2.i 的值都是10。</span></span><br><span class="line">    Person.i = <span class="number">10</span>;</span><br><span class="line">    System.out.println(<span class="string">"p1的i的值为："</span> + p1.i);</span><br><span class="line">    System.out.println(<span class="string">"p2的i的值为："</span> + p2.i);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"=======分割线======="</span>);</span><br><span class="line"></span><br><span class="line">    Person.i = <span class="number">20</span>;</span><br><span class="line">    System.out.println(<span class="string">"p1的i的值为："</span> + p1.i);</span><br><span class="line">    System.out.println(<span class="string">"p2的i的值为："</span> + p2.i);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"=======分割线======="</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于所有对象使用的静态变量是同一份，所以，</span></span><br><span class="line">    <span class="comment">// 静态变量i的值先被p1.i = 30赋值为30，</span></span><br><span class="line">    <span class="comment">// 再被p2.i = 40赋值为40，</span></span><br><span class="line">    <span class="comment">// 最后，打印出来的p1.i和p2.i的值都为40。</span></span><br><span class="line">    p1.i = <span class="number">30</span>;</span><br><span class="line">    p2.i = <span class="number">40</span>;</span><br><span class="line">    System.out.println(<span class="string">"p1的i的值为："</span> + p1.i);</span><br><span class="line">    System.out.println(<span class="string">"p2的i的值为："</span> + p2.i);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="静态函数的语法特点"><a href="#静态函数的语法特点" class="headerlink" title="静态函数的语法特点"></a>静态函数的语法特点</h2><blockquote><p>格式：static 返回值类型 函数名{}</p></blockquote><p>特点：</p><blockquote><ul><li>静态函数量可以直接用类名来调用，格式为：类名.函数名()；</li><li>静态函数中不能使用非静态成员变量；（注意）</li></ul></blockquote><p>例子：（请动手）</p><p>1.新建一个名为Dog.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">static</span> String color;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">shout01</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Dog的名字是："</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shout02</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 静态函数只能使用静态成员变量color。</span></span><br><span class="line">    System.out.println(<span class="string">"静态函数shout02()，Dog的颜色是："</span> + color);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Demo02.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Person.name = <span class="string">"小黄"</span>;</span><br><span class="line">    Person.color = <span class="string">"黄色"</span>;</span><br><span class="line"></span><br><span class="line">    Dog.shout01();</span><br><span class="line">    <span class="comment">// 用类名直接调用静态函数</span></span><br><span class="line">    Dog.shout02();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="静态代码块的语法特点"><a href="#静态代码块的语法特点" class="headerlink" title="静态代码块的语法特点"></a>静态代码块的语法特点</h2><blockquote><p>作用：主要作用是为静态变量赋值初始值。</p></blockquote><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">  语句；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>特点：</p><blockquote><ul><li>没有名字，只有一个static；</li><li>静态代码块在装载当前所在类的时候执行。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态成员变量的语法特点&lt;/li&gt;
&lt;li&gt;静态函数的语法特点&lt;/li&gt;
&lt;li&gt;静态代码块的语法特点&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;静态成员变量的语法特点&quot;&gt;&lt;a href=&quot;#静态成员变量的语法特点&quot; 
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程5.0之this的使用方法</title>
    <link href="https://blog.sunjiajia.com/2015/07/13/monkey-java-basic-courses-5-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/13/monkey-java-basic-courses-5-0/</id>
    <published>2015-07-13T08:34:27.000Z</published>
    <updated>2018-08-02T04:01:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>this的涵义</li><li>使用this调用成员变量和成员函数</li><li>使用this调用构造函数</li></ul><hr><h2 id="this的涵义"><a href="#this的涵义" class="headerlink" title="this的涵义"></a>this的涵义</h2><blockquote><p>this代表一个对象，它代表了调用当前类中的变量或者函数的对象。</p></blockquote><h2 id="使用this调用成员变量和成员函数"><a href="#使用this调用成员变量和成员函数" class="headerlink" title="使用this调用成员变量和成员函数"></a>使用this调用成员变量和成员函数</h2><p>例子：（请动手）</p><p>1.新建一个名为Person.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 这里的this就是一个Person的对象。</span></span><br><span class="line">    System.out.println(<span class="string">"My name is "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Demo01.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    p1.name = <span class="string">"zhang3"</span>;</span><br><span class="line"></span><br><span class="line">    Person p2 = <span class="keyword">new</span> Person();</span><br><span class="line">    p2.name = <span class="string">"li4"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于Person类中的talk方法中，有了this.name的表达，用了this关键字，</span></span><br><span class="line">    <span class="comment">// 因此，当p1调用talk()方法时，this.name相当于p1.name;</span></span><br><span class="line">    <span class="comment">// 当p2调用talk()方法时，this.name相当于p2.name。</span></span><br><span class="line">    p1.talk();</span><br><span class="line">    p2.talk();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用this调用构造函数"><a href="#使用this调用构造函数" class="headerlink" title="使用this调用构造函数"></a>使用this调用构造函数</h2><blockquote><ul><li>格式：this(参数1,参数2);</li><li>它的作用是调用同一个类中的其他构造函数，</li><li>this的()中有几个参数，就会调用有几个参数的构造函数。</li></ul></blockquote><blockquote><ul><li>注意：它必须放在当前构造函数的第一行。</li></ul></blockquote><p>例子：（请动手）</p><p>1.新建一个名为Dog.java的Java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  String color;</span><br><span class="line"></span><br><span class="line">  Dog()&#123;</span><br><span class="line">    System.out.println(<span class="string">"无参数的构造方法"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Dog(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">    <span class="comment">// 这里的this.name代表成员变量name，“=”后面的name就代表构造函数的参数name；</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"2个参数的构造方法"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Dog(String name, <span class="keyword">int</span> age, String color)&#123;</span><br><span class="line">    <span class="comment">// （重点）使用this调用构造函数</span></span><br><span class="line">    <span class="comment">// 格式：this(参数1,参数2);</span></span><br><span class="line">    <span class="comment">// 它的作用是调用同一个类中的其他构造函数，</span></span><br><span class="line">    <span class="comment">// this的()中有几个参数，就会调用有几个参数的构造函数</span></span><br><span class="line">    <span class="keyword">this</span>(name, age);</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"3个参数的构造方法"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 这里的this就是一个Person的对象。</span></span><br><span class="line">    System.out.println(<span class="string">"Dog's name is "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新建一个名为Demo02.java的Java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Dog dog1 = <span class="keyword">new</span> Dog(<span class="string">"小白"</span>, <span class="number">1</span>, <span class="string">"白色"</span>);</span><br><span class="line">    System.out.println(<span class="string">"=============我是分割线============="</span>);</span><br><span class="line">    Dog dog2 = <span class="keyword">new</span> Dog(<span class="string">"小黑"</span>, <span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this的涵义&lt;/li&gt;
&lt;li&gt;使用this调用成员变量和成员函数&lt;/li&gt;
&lt;li&gt;使用this调用构造函数&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;this的涵义&quot;&gt;&lt;a href=&quot;#this的涵义&quot; cl
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程4.3之面向对象基础4</title>
    <link href="https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-3/"/>
    <id>https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-3/</id>
    <published>2015-07-11T08:34:27.000Z</published>
    <updated>2018-08-02T04:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>函数的重载</li><li>构造函数的作用</li></ul><hr><h2 id="函数的重载"><a href="#函数的重载" class="headerlink" title="函数的重载"></a>函数的重载</h2><blockquote><p>在同一个类中允许函数的重名这种现象的出现，它有3个特征：</p></blockquote><blockquote><ul><li>两个或者多个函数在同一个类当中；</li><li>函数名相同；</li><li>参数列表不同。</li></ul></blockquote><p>例子：（请动手）</p><p>1.新建一个名称为Demo01.java的java源文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">funDemo01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"没有参数的funDemo01函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 这个funDemo01函数重载了上面的funDemo01函数，特点为：</span></span><br><span class="line">  <span class="comment">// 1. 两个funDemo01函数处于同一个类Demo01当中；</span></span><br><span class="line">  <span class="comment">// 2. 函数名相同，都为funDemo01；</span></span><br><span class="line">  <span class="comment">// 3. 参数不同，第2个funDemo01函数有了一个整型参数i。</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">funDemo01</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"有参数i的funDemo01函数，i的值是"</span> + i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>新建一个名称为Demo02.java的java源文件。</li></ol><blockquote><p>Demo02类演示了重载方法的调用。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Demo01 demo01 = <span class="keyword">new</span> Demo01();</span><br><span class="line">    demo01.funDemo01();</span><br><span class="line">    demo01.funDemo01(<span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造函数的作用"><a href="#构造函数的作用" class="headerlink" title="构造函数的作用"></a>构造函数的作用</h2><blockquote><p>用来在创建对象时初始化对象， 即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中；<br>一个类可以有多个构造函数 ，可根据其参数个数的不同或参数类型的不同来区分它们，即构造函数的重载。</p></blockquote><blockquote><p>特征：</p></blockquote><blockquote><ul><li>没有返回值类型的定义；</li><li>构造函数的名字必须和类的名字完全保持相同；</li></ul></blockquote><p>例子：（请动手）</p><ol><li>新建一个名称为Person.java的java源文件。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 构造函数</span></span><br><span class="line">  Person()&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第二个构造函数，利用的原理是方法的重载</span></span><br><span class="line">  Person(String n, <span class="keyword">int</span> a)&#123;</span><br><span class="line">    name = n;</span><br><span class="line">    age = a;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>新建一个名称为Demo03.java的java源文件。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用的是无参的构造方法</span></span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    p1.name = <span class="string">"zhang3"</span>;</span><br><span class="line">    p1.age = <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"p1的name是："</span> + p1.name + <span class="string">"，age是："</span> + p1.age);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用的是有参的构造方法，哪个写法更加简单呢？</span></span><br><span class="line">    Person p2 = <span class="keyword">new</span> Person(<span class="string">"li4"</span>, <span class="number">18</span>);</span><br><span class="line">    System.out.println(<span class="string">"p12的name是："</span> + p2.name + <span class="string">"，age是："</span> + p2.age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数的重载&lt;/li&gt;
&lt;li&gt;构造函数的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;函数的重载&quot;&gt;&lt;a href=&quot;#函数的重载&quot; class=&quot;headerlink&quot; title=&quot;函数的重载&quot;&gt;&lt;/a&gt;函数的
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程4.2之面向对象基础3</title>
    <link href="https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-2/</id>
    <published>2015-07-11T07:34:27.000Z</published>
    <updated>2018-08-02T04:00:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>对象的使用方法</li><li>多对象的创建方法</li><li>匿名对象的创建和使用方法</li></ul><hr><h2 id="对象的使用方法"><a href="#对象的使用方法" class="headerlink" title="对象的使用方法"></a>对象的使用方法</h2><h3 id="对象调用变量"><a href="#对象调用变量" class="headerlink" title="对象调用变量"></a>对象调用变量</h3><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.变量</span><br></pre></td></tr></table></figure></p><h3 id="对象调用函数"><a href="#对象调用函数" class="headerlink" title="对象调用函数"></a>对象调用函数</h3><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.函数()</span><br></pre></td></tr></table></figure></p><p>例子：（请动手）<br>1.创建一个名为Dog.java的java源文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  String color;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> jump &#123;</span><br><span class="line">    System.out.println(<span class="string">"dog jump"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.创建一个名为Demo01.java的Java源文件，它包含主函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Dog dog = <span class="keyword">new</span> dog();</span><br><span class="line">    dog.name = <span class="string">"小白"</span>;</span><br><span class="line">    dog.age = <span class="number">3</span>;</span><br><span class="line">    dog.color = <span class="string">"黑色"</span>;</span><br><span class="line"></span><br><span class="line">    dog.jump();</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"名字是："</span> + dog.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="多对象的创建方法"><a href="#多对象的创建方法" class="headerlink" title="多对象的创建方法"></a>多对象的创建方法</h2><p>创建一个名为Demo02.java的Java源文件，它包含主函数：</p><p>例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Dog dog01 = <span class="keyword">new</span> dog();</span><br><span class="line">    dog01.name = <span class="string">"小白"</span>;</span><br><span class="line">    dog01.age = <span class="number">3</span>;</span><br><span class="line">    dog01.color = <span class="string">"黑色"</span>;</span><br><span class="line">    dog01.jump();</span><br><span class="line"></span><br><span class="line">    Dog dog02 = <span class="keyword">new</span> dog();</span><br><span class="line">    dog02.name = <span class="string">"小黄"</span>;</span><br><span class="line">    dog02.age = <span class="number">1</span>;</span><br><span class="line">    dog02.color = <span class="string">"白色"</span>;</span><br><span class="line">    dog02.jump();</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"名字是："</span> + dog01.name);</span><br><span class="line">    System.out.println(<span class="string">"名字是："</span> + dog02.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="匿名对象的创建和使用方法"><a href="#匿名对象的创建和使用方法" class="headerlink" title="匿名对象的创建和使用方法"></a>匿名对象的创建和使用方法</h2><blockquote><ul><li>匿名对象只用一次。</li></ul></blockquote><p>创建一个名为Demo03.java的Java源文件，它包含主函数：</p><p>例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Dog().jump();</span><br><span class="line">    <span class="keyword">new</span> Dog().name = <span class="string">"小花"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象的使用方法&lt;/li&gt;
&lt;li&gt;多对象的创建方法&lt;/li&gt;
&lt;li&gt;匿名对象的创建和使用方法&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;对象的使用方法&quot;&gt;&lt;a href=&quot;#对象的使用方法&quot; class=&quot;head
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程4.1之面向对象基础2</title>
    <link href="https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-1/</id>
    <published>2015-07-11T06:34:27.000Z</published>
    <updated>2018-08-02T04:00:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>创建类的方法</li><li>创建对象的方法</li><li>对象和对象的引用</li></ul><hr><h2 id="创建类的方法"><a href="#创建类的方法" class="headerlink" title="创建类的方法"></a>创建类的方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名 </span>&#123;</span><br><span class="line">  属性;</span><br><span class="line">  方法;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>属性，也叫成员变量，主要用于描述类的状态；</li><li>方法，也叫成员方法，主要用于描述类的行为。</li></ul></blockquote><p>例子：（勤动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Person是类名，首字母通常大写。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 成员变量</span></span><br><span class="line">  <span class="keyword">int</span> age = <span class="number">18</span>;</span><br><span class="line">  <span class="comment">// 成员方法，它可以访问同一个类中的成员变量。</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"oh,I am "</span> + age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><p>格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名 对象名 = <span class="keyword">new</span> 类名();</span><br></pre></td></tr></table></figure></p><h3 id="对象的引用"><a href="#对象的引用" class="headerlink" title="对象的引用"></a>对象的引用</h3><blockquote><p>对象，是引用数据类型。</p></blockquote><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person person = <span class="keyword">new</span> Person();</span><br></pre></td></tr></table></figure></p><p>运行过程：</p><blockquote><ul><li>Person person创建一个Person的引用person；</li><li>new Person()创建一个Person的对象；</li><li><code>=</code>将创建的Person对象赋给这个引用person。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建类的方法&lt;/li&gt;
&lt;li&gt;创建对象的方法&lt;/li&gt;
&lt;li&gt;对象和对象的引用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;创建类的方法&quot;&gt;&lt;a href=&quot;#创建类的方法&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程4.0之面向对象基础1</title>
    <link href="https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/11/monkey-java-basic-courses-4-0/</id>
    <published>2015-07-11T02:34:27.000Z</published>
    <updated>2018-08-02T04:00:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下内容：</p><ul><li>什么是面向对象</li><li>应该如何学习面向对象</li><li>面向对象的思维方式</li></ul><blockquote><p>目标：熟悉Java语言中的for循环的使用方法。</p></blockquote><hr><h2 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h2><ul><li>面向对象是一种编程方法；</li><li>面向对象是一种思维方式；</li><li>面向对象是一种编程语言。</li></ul><blockquote><p>面向对象的<strong>终极目标</strong>：消除应用程序中的重复代码。</p></blockquote><h2 id="应该如何学习面向对象"><a href="#应该如何学习面向对象" class="headerlink" title="应该如何学习面向对象"></a>应该如何学习面向对象</h2><ul><li>掌握一门面向对象语言的语法；</li><li>掌握面向对象的思维方式；</li><li>熟悉面向对象设计原则；</li><li>掌握面向对象设计模式。</li></ul><h2 id="面向对象的思维方式"><a href="#面向对象的思维方式" class="headerlink" title="面向对象的思维方式"></a>面向对象的思维方式</h2><ul><li>首先确定谁来做，其次确定怎么做；</li><li>首先考虑整体，其次考虑局部；</li><li>首先考虑抽象，其次考虑具体。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>不要认为掌握了一门面向对象语言就是掌握了面向对象；</li><li>要习惯于将面向对象与现实世界做比较；</li><li>要有一颗面向对象的心。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是面向对象&lt;/li&gt;
&lt;li&gt;应该如何学习面向对象&lt;/li&gt;
&lt;li&gt;面向对象的思维方式&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目标：熟悉Java语言中的for循环的使用方法。&lt;/p&gt;
&lt;/blockq
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程3.4之练习课</title>
    <link href="https://blog.sunjiajia.com/2015/07/10/monkey-java-basic-courses-3-4/"/>
    <id>https://blog.sunjiajia.com/2015/07/10/monkey-java-basic-courses-3-4/</id>
    <published>2015-07-10T04:34:27.000Z</published>
    <updated>2018-08-02T04:00:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下两个练习：</p><ul><li>练习1：打印100~200之间的所有素数。</li><li>练习2：用<code>*</code>在命令行中打印出<strong>金字塔</strong>图案。</li></ul><blockquote><p>目标：熟悉Java语言中的for循环的使用方法。</p></blockquote><hr><h2 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h2><p>源码：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">100</span>; i &lt; <span class="number">201</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i - <span class="number">1</span>; j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> k = i % j;</span><br><span class="line">                <span class="keyword">if</span>(k == <span class="number">0</span>)&#123;</span><br><span class="line">                    b = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>作业1：请优化Demo01，提高程序效率。</p></blockquote><h2 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h2><p>源码：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span> - i; j++) &#123;</span><br><span class="line">System.out.print(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++) &#123;</span><br><span class="line">System.out.println(<span class="string">"* "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>作业2：如果要求大家编写一个程序，可以打印出任意行的<strong>金字塔</strong>图案，应该怎么做呢？</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下两个练习：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;练习1：打印100~200之间的所有素数。&lt;/li&gt;
&lt;li&gt;练习2：用&lt;code&gt;*&lt;/code&gt;在命令行中打印出&lt;strong&gt;金字塔&lt;/strong&gt;图案。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程3.3之循环语句</title>
    <link href="https://blog.sunjiajia.com/2015/07/10/monkey-java-basic-courses-3-3/"/>
    <id>https://blog.sunjiajia.com/2015/07/10/monkey-java-basic-courses-3-3/</id>
    <published>2015-07-10T04:34:27.000Z</published>
    <updated>2018-08-02T03:59:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下知识点：</p><ul><li>循环结构</li><li>for循环语句</li><li>while循环语句</li></ul><hr><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><p>一张图看懂什么是循环结构：</p><p><img src="/img/java/3_3_01_loop_statement.jpg" alt="图3.3.01。循环结构"></p><h2 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h2><p>源码：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"准备进入for循环语句。"</span>);</span><br><span class="line"><span class="comment">// 1. 执行 int i = 0;</span></span><br><span class="line"><span class="comment">// 2. 判断i的值是否小于10（即执行i &lt; 10;）；</span></span><br><span class="line"><span class="comment">// 3. 如果i &lt; 10 ，则执行&#123;&#125;中的语句；</span></span><br><span class="line"><span class="comment">// 4. &#123;&#125;中的语句执行完毕后，执行 i++ ；</span></span><br><span class="line"><span class="comment">// 5. 再次判断 i &lt; 10；</span></span><br><span class="line"><span class="comment">// 6. 如果i依旧小于10，重复3~5的过程，这个过程就是循环；</span></span><br><span class="line"><span class="comment">// 7. 如果i &gt;= 10 ，那么循环停止。</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"for循环语句结束。"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h2><p>源码：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"准备进入while循环语句。"</span>);</span><br><span class="line"><span class="comment">// 1. 执行 int i = 0;</span></span><br><span class="line"><span class="comment">// 2. 判断i的值是否小于10（即执行i &lt; 10;）；</span></span><br><span class="line"><span class="comment">// 3. 如果i &lt; 10 ，即i &lt; 10的值为true，则执行&#123;&#125;中的语句；</span></span><br><span class="line"><span class="comment">// 4. 如果 i &lt; 10的值为false，则while循环结束。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; <span class="number">10</span>)&#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">i++; <span class="comment">// 如果没有这一行，则成为while死循环。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"while循环语句结束。"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;循环结构&lt;/li&gt;
&lt;li&gt;for循环语句&lt;/li&gt;
&lt;li&gt;while循环语句&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;循环结构&quot;&gt;&lt;a href=&quot;#循环结构&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程3.2之练习课</title>
    <link href="https://blog.sunjiajia.com/2015/07/10/monkey-java-basic-courses-3-2/"/>
    <id>https://blog.sunjiajia.com/2015/07/10/monkey-java-basic-courses-3-2/</id>
    <published>2015-07-10T03:22:27.000Z</published>
    <updated>2018-08-02T03:59:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>本节课程将学习以下知识点：</p><ul><li>练习1：将学生的分数按照标准分为优、良、中、差四个级别。</li><li>练习2：猜拳游戏。</li></ul><hr><h2 id="练习1："><a href="#练习1：" class="headerlink" title="练习1："></a>练习1：</h2><blockquote><ul><li>创建一个名为Demo01的类；</li><li>在Demo类中加入主函数；</li><li>在主函数中定义一个整型变量，用于表示学生的分数；</li><li>使用if…else…结构对分数进行分级。</li></ul></blockquote><p>源码：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> score = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt;= <span class="number">85</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"优秀"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">75</span> &amp;&amp; score &lt;= <span class="number">85</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"良好"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span> &amp;&amp; score &lt;= <span class="number">75</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"中等"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">60</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"不及格"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">100</span> || score &lt; <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"成绩不在正常范围内"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="练习2："><a href="#练习2：" class="headerlink" title="练习2："></a>练习2：</h2><blockquote><ul><li>创建一个名为Demo02的类；</li><li>在Demo类中加入主函数；</li><li>在主函数中定义两个char类型的变量，分别代表两个玩家的出拳；</li><li>使用if…else…结构对结果进行判断。</li></ul></blockquote><p>源码：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 'a' 代表 石头； 'b' 代表 剪刀； 'c' 代表 布；</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> play01 = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">char</span> play02 = <span class="string">'b'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (play01 == <span class="string">'a'</span> &amp;&amp; play02 == <span class="string">'a'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"平"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'a'</span> &amp;&amp; play02 == <span class="string">'b'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"play01赢"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'a'</span> &amp;&amp; play02 == <span class="string">'c'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"play02赢"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'b'</span> &amp;&amp; play02 == <span class="string">'a'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"play02赢"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'b'</span> &amp;&amp; play02 == <span class="string">'b'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"平"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'b'</span> &amp;&amp; play02 == <span class="string">'c'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"play01赢"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'c'</span> &amp;&amp; play02 == <span class="string">'a'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"play01赢"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'c'</span> &amp;&amp; play02 == <span class="string">'b'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"play02赢"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (play01 == <span class="string">'c'</span> &amp;&amp; play02 == <span class="string">'c'</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"平"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本节课程将学习以下知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;练习1：将学生的分数按照标准分为优、良、中、差四个级别。&lt;/li&gt;
&lt;li&gt;练习2：猜拳游戏。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;练习1：&quot;&gt;&lt;a href=&quot;#练习1：&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程3.1之分支语句</title>
    <link href="https://blog.sunjiajia.com/2015/07/09/monkey-java-basic-courses-3-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/09/monkey-java-basic-courses-3-1/</id>
    <published>2015-07-09T11:22:27.000Z</published>
    <updated>2018-08-02T03:59:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>本届课程将学习以下知识点：</p><ul><li>程序运行流程的分类</li><li>if…else…分支语句</li><li>switch分支语句</li></ul><hr><p>##程序运行流程的分类</p><ul><li>顺序结构</li><li>分支结构（今天重点）</li><li>循环结构</li></ul><p>##if…else…分支语句</p><h3 id="结构1："><a href="#结构1：" class="headerlink" title="结构1："></a>结构1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 布尔类型表达式 为true，才会执行&#123;&#125;里面的句子</span><br><span class="line">if(布尔类型表达式)&#123;</span><br><span class="line">  语句1;</span><br><span class="line">  语句2;</span><br><span class="line">  语句3;</span><br><span class="line">  ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">5</span> &amp;&amp; i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      System.out.println(<span class="string">"i的值在5与10之间"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="结构2："><a href="#结构2：" class="headerlink" title="结构2："></a>结构2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 布尔类型表达式 为true，才会执行&#123;&#125;里面的句子；</span><br><span class="line">// 为 false，将会执行else&#123;&#125;中的句子。</span><br><span class="line">if(布尔类型表达式)&#123;</span><br><span class="line">  语句1;</span><br><span class="line">  语句2;</span><br><span class="line">  语句3;</span><br><span class="line">  ... ...</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  语句4;</span><br><span class="line">  语句5;</span><br><span class="line">  语句6;</span><br><span class="line">  ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">5</span> ) &#123;</span><br><span class="line">      System.out.println(<span class="string">"i的值小于5"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">"i的值大于5"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="结构3："><a href="#结构3：" class="headerlink" title="结构3："></a>结构3：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 布尔类型表达式 为true，才会执行&#123;&#125;里面的句子；</span><br><span class="line">// 为 false，将会执行else if&#123;&#125;中的句子，依次进行。</span><br><span class="line">if(布尔类型表达式)&#123;</span><br><span class="line">  语句1;</span><br><span class="line">  语句2;</span><br><span class="line">  语句3;</span><br><span class="line">  ... ...</span><br><span class="line">&#125; else if(布尔类型表达式)&#123;</span><br><span class="line">  语句4;</span><br><span class="line">  语句5;</span><br><span class="line">  语句6;</span><br><span class="line">  ... ...</span><br><span class="line">&#125; else if(布尔类型表达式)&#123;</span><br><span class="line">  语句7;</span><br><span class="line">  语句8;</span><br><span class="line">  语句9;</span><br><span class="line">  ... ...</span><br><span class="line">&#125; else if(布尔类型表达式)&#123;</span><br><span class="line">  语句10;</span><br><span class="line">  语句11;</span><br><span class="line">  语句12;</span><br><span class="line">  ... ...</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  语句13;</span><br><span class="line">  语句14;</span><br><span class="line">  语句15;</span><br><span class="line">  ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">5</span> ) &#123;</span><br><span class="line">      System.out.println(<span class="string">"i的值小于5"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>( i &gt;= <span class="number">5</span> &amp;&amp; i &lt;= <span class="number">10</span> ) &#123;</span><br><span class="line">      System.out.println(<span class="string">"i的值在5到10范围之间"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"i的值大于11"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##switch分支语句</p><p>它的功能用if…else…都可以实现。</p><h3 id="结构："><a href="#结构：" class="headerlink" title="结构："></a>结构：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 表达式 只允许这几种类型：byte、short、int、char</span><br><span class="line">// 如果 表达式 所执行的结果和case后面的常量N是一样的，</span><br><span class="line">// 那么就会进入当前case体，执行相应的语句N，后面的case体将不再执行。</span><br><span class="line">switch(表达式)&#123;</span><br><span class="line">  case 常量1:</span><br><span class="line">    语句1;</span><br><span class="line">    break;</span><br><span class="line">  case 常量2:</span><br><span class="line">    语句2;</span><br><span class="line">    break;</span><br><span class="line">  case 常量3:</span><br><span class="line">    语句3;</span><br><span class="line">    break;</span><br><span class="line">  ... ...</span><br><span class="line">  case 常量N:</span><br><span class="line">    语句N;</span><br><span class="line">    break;</span><br><span class="line">  // 如果所有的case体都没有被执行，那么执行default体。</span><br><span class="line">  // default体是可以省略不写，这时，如果所有case体都没有执行，将直接跳出switch循环。</span><br><span class="line">  [</span><br><span class="line">   default:</span><br><span class="line">    默认语句;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">'a'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(c) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'b'</span>:</span><br><span class="line">        System.out.println(<span class="string">'b'</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'c'</span>:</span><br><span class="line">        System.out.println(<span class="string">'c'</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="comment">//注意： 这个case体没有 break; 。体验break的作用。编程时需要加上的。</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">        System.out.println(<span class="string">'a'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">'d'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 这是一个表达式，它的类型是int整型，它的值是10；</span></span><br><span class="line">    <span class="keyword">int</span> j = i + <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 请自己表述一下。</span></span><br><span class="line">    <span class="keyword">boolean</span> b = i &lt; <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    System.out.println(i);</span><br><span class="line">    System.out.println(j);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本届课程将学习以下知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;程序运行流程的分类&lt;/li&gt;
&lt;li&gt;if…else…分支语句&lt;/li&gt;
&lt;li&gt;switch分支语句&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;##程序运行流程的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顺序结构&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程3.0之运算符与表达式</title>
    <link href="https://blog.sunjiajia.com/2015/07/04/monkey-java-basic-courses-3-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/04/monkey-java-basic-courses-3-0/</id>
    <published>2015-07-04T14:22:27.000Z</published>
    <updated>2018-08-02T03:59:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>##运算符的分类</p><ul><li>算术运算符：+,-,*,/,%,++,–</li><li>关系运算符：&lt;,&gt;,&gt;=,&lt;=,==,!=</li><li>布尔逻辑运算符：!（逻辑或）,&amp;（逻辑与）,|（逻辑或）,^（逻辑异或）,&amp;&amp;（短路与）,||（逻辑或）</li><li>位运算符：&amp;,|,^,~,&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;</li><li>赋值运算符：==</li><li>扩展赋值运算符：+=,-=,*=,/=</li><li>字符串连接运算符：+</li></ul><p>##各种运算符的使用方法</p><p>###算术运算符：<br>关于算术运算符就不多说了，因为我大中国的教育是从小就学加减乘除。</p><p>注意1：</p><blockquote><p>int i = 3/2;<br>请问i的值是几？<br>答：i的值是1。</p></blockquote><blockquote><p>一个运算的过程，它的结果的类型取决于这一次运算当中，所有操作数里面最大的操作数的类型。<br>3/2.0就等于1.5。由于2.0是double类型，3是整型，double比int类型的表数范围要大，因此结果的类型应该是double类型。</p></blockquote><p>注意2：</p><blockquote><p>i++ 和 ++i 的区别是什么？</p></blockquote><blockquote><p>答：i++先将i的值参加运算后在将i加1；++i是将i加1后再参加运算。</p></blockquote><p>例子：（亲手敲代码）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> j = i++ + <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> h = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> k = ++h + <span class="number">5</span>;</span><br><span class="line">    System.out.println(j);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    System.out.println(k);</span><br><span class="line">    System.out.println(h);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###关系运算符</p><p>它得到的结果是<strong>布尔类型</strong>的值，也就是<strong>true</strong>或者<strong>false</strong>。<br>例子：（亲手敲代码）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> h = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">boolean</span> result01 = i &gt; h;</span><br><span class="line">    <span class="keyword">boolean</span> result02 = i != h;</span><br><span class="line">    <span class="keyword">boolean</span> result03 = i == k;</span><br><span class="line">    System.out.println(result01);</span><br><span class="line">    System.out.println(result02);</span><br><span class="line">    System.out.println(result03);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###布尔逻辑运算符（重点）</p><p>它其实就是用来计算<code>true</code>或者<code>false</code>。</p><p>我们用一张图表来展示逻辑运算符的结果：<br><img src="/img/java/3_0_01_logical_operator.jpg" alt="图3.0.01。逻辑运算符"></p><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> a = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> c = a &amp; b;</span><br><span class="line">    <span class="keyword">boolean</span> d = a &amp;&amp; b;</span><br><span class="line">    System.out.println(c);</span><br><span class="line">    System.out.println(d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 注意： &amp; 两边的表达式都会运算</span></span><br><span class="line">    <span class="keyword">boolean</span> e = i &gt; <span class="number">6</span> &amp; i++ &gt; <span class="number">7</span>;</span><br><span class="line">    <span class="comment">// 注意：使用 &amp;&amp; 时，如果 i&gt;6为false，则i++&gt;7就不会运算了。</span></span><br><span class="line">    <span class="keyword">boolean</span> f = i &gt; <span class="number">6</span> &amp;&amp; i++ &gt; <span class="number">7</span>;</span><br><span class="line">    System.out.println(e);</span><br><span class="line">    System.out.println(f);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="扩展赋值运算符"><a href="#扩展赋值运算符" class="headerlink" title="扩展赋值运算符"></a>扩展赋值运算符</h3><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    i += <span class="number">5</span>; <span class="comment">// 相当于i = i + 5;</span></span><br><span class="line">    i *= <span class="number">5</span>; <span class="comment">// 相当于i = i * 5;</span></span><br><span class="line">    System.out.println(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##什么是表达式</p><p>概念：（实记）</p><blockquote><p><strong>表达式</strong>是符合一定语法规则的运算符和操作符的序列。</p></blockquote><blockquote><p>对表达式中操作数进行运算得到的结果称为<strong>表达式的值</strong>。</p></blockquote><blockquote><p>表达式的值的数据类型即为<strong>表达式的类型</strong>。</p></blockquote><p>例子：（请动手）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 这是一个表达式，它的类型是int整型，它的值是10；</span></span><br><span class="line">    <span class="keyword">int</span> j = i + <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 请自己表述一下。</span></span><br><span class="line">    <span class="keyword">boolean</span> b = i &lt; <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    System.out.println(i);</span><br><span class="line">    System.out.println(j);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##运算符的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算术运算符：+,-,*,/,%,++,–&lt;/li&gt;
&lt;li&gt;关系运算符：&amp;lt;,&amp;gt;,&amp;gt;=,&amp;lt;=,==,!=&lt;/li&gt;
&lt;li&gt;布尔逻辑运算符：!（逻辑或）,&amp;amp;（逻辑与）,|（逻辑或）,^（逻辑异或）,&amp;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程2.x之巩固练习</title>
    <link href="https://blog.sunjiajia.com/2015/07/03/monkey-java-basic-courses-2-x-exercises/"/>
    <id>https://blog.sunjiajia.com/2015/07/03/monkey-java-basic-courses-2-x-exercises/</id>
    <published>2015-07-03T11:22:27.000Z</published>
    <updated>2018-08-02T03:58:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="练习：（请动手）"><a href="#练习：（请动手）" class="headerlink" title="练习：（请动手）"></a>练习：（请动手）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意：类名一定和java源文件的名称一致。即 Demo。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Monkey</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 布尔型</span></span><br><span class="line"><span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">boolean</span> bb = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(<span class="string">"b--&gt;"</span> + b + <span class="string">"，bb--&gt;"</span> + bb);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符型</span></span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">char</span> cc = <span class="string">'猴'</span>;</span><br><span class="line">System.out.println(<span class="string">"c--&gt;"</span> + c);</span><br><span class="line">System.out.println(<span class="string">"cc--&gt;"</span> + cc);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.整数字面量为整型int 2.小数字面量为双精度浮点型double</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 数值型</span></span><br><span class="line"><span class="keyword">byte</span> b01 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">short</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> ll = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> f = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">float</span> ff = <span class="number">0.1f</span>; <span class="comment">// 注意写0.1就会报错（可能损失精度）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> d = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"b01--&gt;"</span> + b01);</span><br><span class="line">System.out.println(<span class="string">"s--&gt;"</span> + s);</span><br><span class="line">System.out.println(<span class="string">"i--&gt;"</span> + i);</span><br><span class="line">System.out.println(<span class="string">"l--&gt;"</span> + l);</span><br><span class="line">System.out.println(<span class="string">"ll--&gt;"</span> + ll);</span><br><span class="line">System.out.println(<span class="string">"f--&gt;"</span> + f);</span><br><span class="line">System.out.println(<span class="string">"ff--&gt;"</span> + ff);</span><br><span class="line">System.out.println(<span class="string">"d--&gt;"</span> + d);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数值型表数范围的关系： byte &lt; short &lt; int &lt; long &lt; float &lt; double</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 大范围类型的的变量和小范围类型的变量相互操作，就会产生“可能损失精度”的错误；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 例如： int temp01 = 10; long temp02 = 100; temp01 = temp02;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;练习：（请动手）&quot;&gt;&lt;a href=&quot;#练习：（请动手）&quot; class=&quot;headerlink&quot; title=&quot;练习：（请动手）&quot;&gt;&lt;/a&gt;练习：（请动手）&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程2.1之基本数据类型</title>
    <link href="https://blog.sunjiajia.com/2015/07/03/monkey-java-basic-courses-2-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/03/monkey-java-basic-courses-2-1/</id>
    <published>2015-07-03T03:22:27.000Z</published>
    <updated>2018-08-02T03:58:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>##数值型<br>包括以下几种：</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">占用存储空间</th><th style="text-align:center">范围</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">1字节</td><td style="text-align:center">-128~127</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">2字节</td><td style="text-align:center">-2的15次方~ 2的15次方-1</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">4字节</td><td style="text-align:center">-2的31次方~ 2的31次方-1</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">8字节</td><td style="text-align:center">-2的63次方~ 2的63次方-1</td></tr></tbody></table><p>例子:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">long</span> l = <span class="number">3L</span>;</span><br></pre></td></tr></table></figure></p><p>##字符型(char)</p><p>char类型数据用来表示通常意义上的字符；注意以下几点：</p><ul><li>字符是由<strong>单引号</strong>包裹起来的单个字符；</li><li>Java字符使用unicode字符集；</li></ul><p>unicode字符集是什么？</p><blockquote><p>它为每种语言的每个字符设定了统一并唯一的二进制码。</p></blockquote><p>详细参见WiKi百科<a href="https://zh.wikipedia.org/wiki/Unicode" target="_blank" rel="noopener">Unicode词条</a></p><p>例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">char</span> cc = <span class="string">'z'</span>;</span><br><span class="line"><span class="keyword">char</span> ccc = <span class="string">'猴'</span>;</span><br></pre></td></tr></table></figure></p><blockquote><p>问题：为何ccc和c变量都是合法的呢？<br>回答：因为Java语言默认使用Unicode字符集，从而保证一个<strong>汉字</strong>和一个<strong>英文字母</strong>在计算机中占用的空间是一样的。</p></blockquote><p>##布尔型(boolean)</p><p>boolean数据类型适用于逻辑运算，一般用于程序流程控制，在Java中只有2个值：</p><ul><li><strong>true</strong>  :  表示“<strong>真</strong>”；</li><li><strong>false</strong> :  表示“<strong>假</strong>”。</li></ul><p>例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">boolean</span> bb = <span class="keyword">true</span>;</span><br></pre></td></tr></table></figure></p><p>##浮点型</p><p>包括两种，<strong>float</strong>和<strong>double</strong>：</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">占用存储空间</th><th style="text-align:center">范围</th></tr></thead><tbody><tr><td style="text-align:center">float</td><td style="text-align:center">4字节</td><td style="text-align:center">-3.403E38~3.403E38</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">8字节</td><td style="text-align:center">-1.798E308~1.798E308</td></tr></tbody></table><p>例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> f = <span class="number">0.38f</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##数值型&lt;br&gt;包括以下几种：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;类型&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;占用存储空间&lt;/th&gt;
&lt;th style=&quot;text
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>一个Demo学会用Android兼容包新控件</title>
    <link href="https://blog.sunjiajia.com/2015/07/02/android-new-widgets-demo/"/>
    <id>https://blog.sunjiajia.com/2015/07/02/android-new-widgets-demo/</id>
    <published>2015-07-02T14:29:27.000Z</published>
    <updated>2018-08-02T03:58:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>伟大的Google为Android推出了一系列的兼容包，最新的就是Design Support Library了，这里我们结合v7和v4中的几个控件，来主要学习Design Support Library中的几个新控件！一个Demo学会用它们！</p><h3 id="效果动图GIF："><a href="#效果动图GIF：" class="headerlink" title="效果动图GIF："></a>效果动图GIF：</h3><p><img src="/img/201507/android-new-widgets-demo.gif" alt="Design Support Library Demo"></p><h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p><strong>通过本实例可以学习到以下内容：</strong></p><ul><li>Drawerlayout和NavigationView实现优雅的Google范儿侧边栏；</li><li>新控件CoordinatorLayout、AppBarLayout、Toolbar、FloatingActionButton的用法，以及Toolbar的渐变隐藏动画效果；</li><li>官方Tabs组件TabLayout和ViewPager结合实现主界面内容区域；</li><li>SwipeRefreshLayout和RecyclerView结合实现下拉刷新，以及RecyclerView的数据适配器RecyclerView.Adapter<viewholder>的用法，还有RecyclerView中item的点击事件的实现方法；</viewholder></li><li>卡片式CardView的用法；</li><li>类似Toast的新控件Snackbar的用法。</li></ul><p>##布局文件</p><blockquote><p>在源码中学习Android，是有种身临其境的感觉的。</p></blockquote><p>学习Android解释再多代码都没有用，因为解释过了还是不会用。因此，我们这里将布局文件XML源码贴出来供学习，放心，所有知识点都已经注释在源码中。</p><p>###styles.xml源码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"MyThemeBlue"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 蓝色为主色调 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"MyThemeBlue"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--选中状态icon的颜色和字体颜色--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/main_blue_light<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/main_blue_dark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/main_blue_light<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--正常状态下字体颜色和icon颜色--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:textColorPrimary"</span>&gt;</span>@color/main_white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p><blockquote><p>colorPrimary、colorPrimaryDark、colorAccent、textColorPrimary的含义，请看博文<a href="http://sunjiajia.com/2015/06/19/android-material-theme-and-toolbar/" target="_blank" rel="noopener">《Android L+ Theme 与 Toolbar 实例》</a>。</p></blockquote><h3 id="主布局activity-my-xml源码（重点）"><a href="#主布局activity-my-xml源码（重点）" class="headerlink" title="主布局activity_my.xml源码（重点）"></a>主布局activity_my.xml源码（重点）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/id_drawerlayout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 第一个位置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 你的主界面内容，必须放置在Drawerlayout中的第一个位置</span></span><br><span class="line"><span class="comment">    根据自己的需要来放置控件，</span></span><br><span class="line"><span class="comment">        例如：LinearLayout布局或者RelativeLayout布局；</span></span><br><span class="line"><span class="comment">    也可以是单个控件，</span></span><br><span class="line"><span class="comment">        如 TextView等  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/content_main"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 第二个位置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用来放Drawerlayout中的内容，</span></span><br><span class="line"><span class="comment">    这里使用NavigationView来实现类似Google pLay中的侧滑栏效果，</span></span><br><span class="line"><span class="comment">    必须在build.gradle中添加compile 'com.android.support:design:22.2.0'；</span></span><br><span class="line"><span class="comment">    另外，如果不需要NavigationView效果，</span></span><br><span class="line"><span class="comment">    也可以放置一个普通布局文件就是一个普通的侧滑栏了。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     注意：</span></span><br><span class="line"><span class="comment">        如果使用NavigationView（其他控件也是一样）的特有属性，需要加上命名空间：</span></span><br><span class="line"><span class="comment">                xmlns:app="http://schemas.android.com/apk/res-auto"；</span></span><br><span class="line"><span class="comment">        另外，一定要添加android:layout_gravity="left"属性。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        属性解析：</span></span><br><span class="line"><span class="comment">            app:headerLayout：    NavigationView中头部的head部分的布局，是自己实现的；</span></span><br><span class="line"><span class="comment">            app:menu：            指定Nav中的Menu布局，就是自己写Menu中的按钮，要放在res/menu/文件夹下；</span></span><br><span class="line"><span class="comment">            app:itemTextColor：  用来设置Nav中，menu item的颜色选择器。</span></span><br><span class="line"><span class="comment">        还有一些属性：           和itemTextColor用法一样，指定一个颜色选择器，实现不同的颜色效果。</span></span><br><span class="line"><span class="comment">            app:itemIconTint:</span></span><br><span class="line"><span class="comment">            app:itemBackground:</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_navigationview"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:itemTextColor</span>=<span class="string">"@color/selector_nav_menu_textcolor"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"left"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="content-main-xml源码（重点）"><a href="#content-main-xml源码（重点）" class="headerlink" title="content_main.xml源码（重点）"></a>content_main.xml源码（重点）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    CoordinatorLayout是这次新添加的一个增强型的FrameLayout，通过它可以实现很多东西：</span></span><br><span class="line"><span class="comment">        例如：</span></span><br><span class="line"><span class="comment">            1.界面向上滚动逐渐隐藏Toolbar；</span></span><br><span class="line"><span class="comment">            2.在其中可以放置浮动的View，就像Floating Action Button。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/id_coordinatorlayout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        AppBarLayout跟它的名字一样，把容器类的组件全部作为AppBar。</span></span><br><span class="line"><span class="comment">            将AppBarLayout放在CoordinatorLayout中，就可以实现滚动效果。</span></span><br><span class="line"><span class="comment">            本例中，TabLayout在界面滚动时，随着Toolbar的逐渐隐藏，将占据Toolbar的位置，</span></span><br><span class="line"><span class="comment">                达到节省屏幕空间，界面动画效果的目的。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_appbarlayout"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        属性解析：</span></span><br><span class="line"><span class="comment">            app:theme：指定Toolbar的样式，包括ActionbarToggle和popupMenu的指示图标颜色</span></span><br><span class="line"><span class="comment">            app:popupTheme：指定popupMenu溢出后的样式</span></span><br><span class="line"><span class="comment">            app:title:    指定Toolbar中主Title的内容</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            app:layout_scrollFlags的意思是：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                设置的layout_scrollFlags有如下几种选项：</span></span><br><span class="line"><span class="comment">                    scroll: 所有想滚动出屏幕的view都需要设置这个flag- 没有设置这个flag的view将被固定在屏幕顶部。</span></span><br><span class="line"><span class="comment">                    enterAlways: 这个flag让任意向下的滚动都会导致该view变为可见，启用快速“返回模式”。</span></span><br><span class="line"><span class="comment">                    enterAlwaysCollapsed: 当你的视图已经设置minHeight属性又使用此标志时，你的视图只能以最小高度进入，只有当滚动视图到达顶部时才扩大到完整高度。</span></span><br><span class="line"><span class="comment">                    exitUntilCollapsed: 当视图会在滚动时，它一直滚动到设置的minHeight时完全隐藏。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            需要注意的是，后面两种模式基本只有在CollapsingToolbarLayout才有用，</span></span><br><span class="line"><span class="comment">            而前面两种模式基本是需要一起使用的，也就是说，这些flag的使用场景，基本已经固定了。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/id_toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll|enterAlways"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:title</span>=<span class="string">"@string/toolbar_title"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            Tabs选项卡，和ViewPager搭配使用可以增大界面的内容展示量，实现各种个性化分类内容展示而不互相干扰！</span></span><br><span class="line"><span class="comment">            Google在Design support library中提供官方的Tab组件，它就是TabLayout。</span></span><br><span class="line"><span class="comment">            相比Github上面开源的第三方库，这个更加简单易用。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            有以下常用属性：</span></span><br><span class="line"><span class="comment">                app:tabGravity="fill"  表示TabLayout中的Tabs要占满屏幕的width；</span></span><br><span class="line"><span class="comment">                app:tabSelectedTextColor：Tab被选中字体的颜色；</span></span><br><span class="line"><span class="comment">                app:tabTextColor：Tab未被选中字体的颜色；</span></span><br><span class="line"><span class="comment">                app:tabIndicatorColor：Tab指示器下标的颜色；</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.TabLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/id_tablayout"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:tabGravity</span>=<span class="string">"fill"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:tabIndicatorColor</span>=<span class="string">"@color/main_white"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        我们常用的ViewPager，不多说了。你会发现多了一个 app:layout_behavior 属性，没错，</span></span><br><span class="line"><span class="comment">            如果你使用CoordinatorLayout来实现Toolbar滚动渐变消失动画效果，那就必须在它下面的那个控件中加入这个属性，</span></span><br><span class="line"><span class="comment">            并且下面的这个控件必须是可滚动的。</span></span><br><span class="line"><span class="comment">        当设置了layout_behavior的控件滑动时，就会触发设置了layout_scrollFlags的控件发生状态的改变。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_viewpager"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        这是一个浮动按钮。由于FloatingActionButton是重写ImageView的，</span></span><br><span class="line"><span class="comment">        所有FloatingActionButton拥有ImageView的一切属性。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        属性介绍：</span></span><br><span class="line"><span class="comment">            app:backgroundTint : FAB的背景色。</span></span><br><span class="line"><span class="comment">            app:elevation      ：FAB的阴影效果。</span></span><br><span class="line"><span class="comment">            app:rippleColor    ：设置涟漪的颜色，默认是由背景色生成的暗色调，可以自己指定。</span></span><br><span class="line"><span class="comment">            app:pressedTranslationZ  ：FAB动画效果，在它被按下的时候阴影就会增大。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_floatingactionbutton"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_action_plusone"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:backgroundTint</span>=<span class="string">"@color/main_blue_light"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:elevation</span>=<span class="string">"6dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:pressedTranslationZ</span>=<span class="string">"12dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:rippleColor</span>=<span class="string">"@color/main_blue_dark"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="frag-main-xml源码（Fragment的布局）"><a href="#frag-main-xml源码（Fragment的布局）" class="headerlink" title="frag_main.xml源码（Fragment的布局）"></a>frag_main.xml源码（Fragment的布局）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SwipeRefreshLayout是伟大的Google在v4包中给出的下拉刷新组件。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/id_swiperefreshlayout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            使用RecyclerView需要在build.gradle中添加</span></span><br><span class="line"><span class="comment">           compile 'com.android.support:recyclerview-v7:22.2.0'</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_recyclerview"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="item-main-xml源码（RecyclerView中item）"><a href="#item-main-xml源码（RecyclerView中item）" class="headerlink" title="item_main.xml源码（RecyclerView中item）"></a>item_main.xml源码（RecyclerView中item）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    CardView就是一个卡片样式的FrameLayout。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    参数介绍：</span></span><br><span class="line"><span class="comment">        app:cardBackgroundColor  :   背景颜色</span></span><br><span class="line"><span class="comment">        app:cardCornerRadius    ：   设置圆角。</span></span><br><span class="line"><span class="comment">        app:cardElevation       ：    阴影。</span></span><br><span class="line"><span class="comment">        app:cardMaxElevation    ：       最大阴影。</span></span><br><span class="line"><span class="comment">        app:cardPreventCornerOverlap  ： 在v20和之前的版本中添加内边距，</span></span><br><span class="line"><span class="comment">                                    这个属性是为了防止卡片内容和边角的重叠。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">       app:cardUseCompatPadding  ：  设置内边距，v21+的版本和之前的版本仍旧具有一样的计算方式</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/id_cardview"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardBackgroundColor</span>=<span class="string">"@color/main_blue_light"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardCornerRadius</span>=<span class="string">"4dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardElevation</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardMaxElevation</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardPreventCornerOverlap</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardUseCompatPadding</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_textview"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/main_white"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"30sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="menu-nav-xml的源码（NavagationView中菜单）"><a href="#menu-nav-xml的源码（NavagationView中菜单）" class="headerlink" title="menu_nav.xml的源码（NavagationView中菜单）"></a>menu_nav.xml的源码（NavagationView中菜单）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">android:checkableBehavior</span>=<span class="string">"single"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_menu_home"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_home_white_48dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"主页"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_menu_categories"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_sort_by_alpha_white_48dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"分类"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_menu_feedback"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_message_white_48dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"反馈"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_menu_setting"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_settings_white_48dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"设置"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="header-nav-xml源码（NavagationView的head）"><a href="#header-nav-xml源码（NavagationView的head）" class="headerlink" title="header_nav.xml源码（NavagationView的head）"></a>header_nav.xml源码（NavagationView的head）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"220dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/ic_user_background"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            一个显示圆形头像的自定义ImageView</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.sunjiajia.androidnewwidgetsdemo.view.RoundedImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_header_face"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"110dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"110dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@drawable/author"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_header_authorname"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/header_author_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@android:color/black"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"16sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/id_header_url"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/header_author_url"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@android:color/black"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"18sp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h2><blockquote><p>Java代码写法比较简单，这里只给出RecyclerView.Adapter<viewholder>的写法（包括item点击事件）。</viewholder></p></blockquote><p>###RecyclerView.Adapter<viewholder>写法源码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunjiajia.androidnewwidgetsdemo.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sunjiajia.androidnewwidgetsdemo.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Monkey on 2015/6/29.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRecyclerViewAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">MyRecyclerViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击事件接口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onItemLongClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OnItemClickListener mOnItemClickListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mOnItemClickListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Context mContext;</span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; mDatas;</span><br><span class="line">    <span class="keyword">public</span> LayoutInflater mLayoutInflater;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRecyclerViewAdapter</span><span class="params">(Context mContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext = mContext;</span><br><span class="line">        mLayoutInflater = LayoutInflater.from(mContext);</span><br><span class="line">        <span class="comment">// 这里是模拟数据。</span></span><br><span class="line">        mDatas = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="string">'A'</span>; i &lt;= <span class="string">'z'</span>; i++) &#123;</span><br><span class="line">            mDatas.add((<span class="keyword">char</span>) i + <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建ViewHolder</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MyRecyclerViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View mView = mLayoutInflater.inflate(R.layout.item_main, parent, <span class="keyword">false</span>);</span><br><span class="line">        MyRecyclerViewHolder mViewHolder = <span class="keyword">new</span> MyRecyclerViewHolder(mView);</span><br><span class="line">        <span class="keyword">return</span> mViewHolder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绑定ViewHoler，给item中的控件设置数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> MyRecyclerViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//点击事件在这里实现，主要是利用RecyclerView中填充的布局控件可以被点击这个原理</span></span><br><span class="line">        <span class="keyword">if</span> (mOnItemClickListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">            holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                    mOnItemClickListener.onItemClick(holder.itemView, position);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 长点击事件</span></span><br><span class="line">            holder.itemView.setOnLongClickListener(<span class="keyword">new</span> View.OnLongClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                    mOnItemClickListener.onItemLongClick(holder.itemView, position);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        holder.mTextView.setText(mDatas.get(position));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mDatas.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></viewholder></p><h3 id="MyRecyclerViewHolder-java源码"><a href="#MyRecyclerViewHolder-java源码" class="headerlink" title="MyRecyclerViewHolder.java源码"></a>MyRecyclerViewHolder.java源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunjiajia.androidnewwidgetsdemo.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sunjiajia.androidnewwidgetsdemo.R;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Monkey on 2015/6/29.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRecyclerViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TextView mTextView;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRecyclerViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(itemView);</span><br><span class="line">        mTextView = (TextView) itemView.findViewById(R.id.id_textview);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>在源码中学习Android，是有种身临其境的感觉的。</p></blockquote><blockquote><p>整个Demo的源码我放在了GitHub上，谢谢star一下~<br>在看源码过程中如果发现什么问题，请在留言，看到一定回复。</p></blockquote><blockquote><p>源码地址：<br><a href="https://github.com/git0pen/AndroidNewWidgetsDemo" target="_blank" rel="noopener">AndroidNewWidgetsDemo</a></p></blockquote><p>##清纯妹子<br><img src="/img/girls/girls-20150702.jpg" alt="清纯妹子"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;伟大的Google为Android推出了一系列的兼容包，最新的就是Design Support Library了，这里我们结合v7和v4中的
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="进阶" scheme="https://blog.sunjiajia.com/tags/%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程2.0之变量</title>
    <link href="https://blog.sunjiajia.com/2015/07/01/monkey-java-basic-courses-2-0/"/>
    <id>https://blog.sunjiajia.com/2015/07/01/monkey-java-basic-courses-2-0/</id>
    <published>2015-07-01T04:04:27.000Z</published>
    <updated>2018-08-02T03:58:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h2><p>简单理解就是，在计算机中存储信息的东西。</p><h2 id="什么是语法"><a href="#什么是语法" class="headerlink" title="什么是语法"></a>什么是语法</h2><p>语法，就是一种规则，根据这种规则可以编写出正确的代码。</p><h2 id="变量的声明"><a href="#变量的声明" class="headerlink" title="变量的声明"></a>变量的声明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int age = 20;</span><br></pre></td></tr></table></figure><blockquote><p><strong>int</strong>       表示变量类型</p></blockquote><blockquote><p><strong>age</strong>     表示变量名</p></blockquote><blockquote><p><strong>=</strong>         表示赋值符号，不念“等于”，而念“赋值于”。整句念为“将20赋值于整型变量age”</p></blockquote><blockquote><p><strong>;</strong>          英文分号，表示语句结束</p></blockquote><blockquote><p>这条语句使计算机分配足够的空间，用于存储一个整数型数据，它的名字是age。int是Java中定义的一种数据类型，专门用于存储一定大小的整数；</p></blockquote><p>这条语句回答了2个问题：</p><ul><li>存储数据的空间有多大</li><li>数据存储在什么位置</li></ul><h2 id="变量的类型"><a href="#变量的类型" class="headerlink" title="变量的类型"></a>变量的类型</h2><p>Java中的变量有两种类型：<strong>基本数据类型</strong>、<strong>引用数据类型</strong>。<br><br></p><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>又称<strong>原始数据类型</strong>，包括<strong>数值型</strong>、<strong>字符型(char)</strong>、<strong>布尔型(boolean)</strong>；<br><br>而<strong>数值型</strong>又包括<strong>整数类型(byte,short,int,long)</strong>、<strong>浮点类型(float,double)</strong>。<br><br></p><h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3><p>包括<strong>类(class)</strong>、<strong>接口(interface)</strong>、<strong>数组</strong>。</p><h2 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h2><h3 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h3><ul><li>应该以字母、下划线或者美元符开头；</li><li>后面跟字母、下划线、美元符或者数字；</li><li>Java变量名没有长度限制；</li><li>Java变量名对字母大小写敏感</li></ul><h3 id="命名法则"><a href="#命名法则" class="headerlink" title="命名法则"></a>命名法则</h3><p>此方法称为<strong>驼峰命名法</strong>。</p><ul><li>变量名应该用有意义的英文单词；</li><li>变量名如果只有一个单词，则所有的字母用小写；</li><li>变量名如果由多个英文单词组成，则从第二个单词开始，首字母用大写。</li></ul><h2 id="本节练习"><a href="#本节练习" class="headerlink" title="本节练习"></a>本节练习</h2><p>新建一个txt文件，将其名字连同扩展名更改为<strong>Attributes.java</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Attributes</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">            <span class="comment">// 变量声明的正确写法，</span></span><br><span class="line">            <span class="comment">// 但是Age，$age，_age不推荐</span></span><br><span class="line">            <span class="comment">// 应按照 驼峰命名法</span></span><br><span class="line">            <span class="keyword">int</span> age = <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">int</span> myAge = <span class="number">25</span>;</span><br><span class="line">            <span class="keyword">int</span> Age = <span class="number">30</span>;</span><br><span class="line">            <span class="keyword">int</span> $age = <span class="number">40</span>;</span><br><span class="line">            <span class="keyword">int</span> _age = <span class="number">50</span>;</span><br><span class="line">            <span class="comment">// 错误写法，编译的时候会报错</span></span><br><span class="line">            <span class="comment">// int 8age = 60;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是变量&quot;&gt;&lt;a href=&quot;#什么是变量&quot; class=&quot;headerlink&quot; title=&quot;什么是变量&quot;&gt;&lt;/a&gt;什么是变量&lt;/h2&gt;&lt;p&gt;简单理解就是，在计算机中存储信息的东西。&lt;/p&gt;
&lt;h2 id=&quot;什么是语法&quot;&gt;&lt;a href=&quot;#什么是语法&quot; c
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程1.1之JDK环境配置</title>
    <link href="https://blog.sunjiajia.com/2015/07/01/monkey-java-basic-courses-1-1/"/>
    <id>https://blog.sunjiajia.com/2015/07/01/monkey-java-basic-courses-1-1/</id>
    <published>2015-07-01T04:04:27.000Z</published>
    <updated>2018-08-02T03:57:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDK下载"><a href="#JDK下载" class="headerlink" title="JDK下载"></a>JDK下载</h2><blockquote><p>注意：JDK有多个版本，请注意按照系统架构选择相应版本。<br><br><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">JDK官网下载地址</a></p></blockquote><p>参考图1.1_01:<br><img src="/img/java/1_1_01_download_install.jpg" alt="图1.1_01。JDK下载"></p><h2 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h2><blockquote><p>JDK的安装一直点击“下一步”即可。<br><br>安装后的<code>JDK、JRE</code>默认位置在</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk1</span>.7.0<span class="title">_80</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jre7</span></span></span><br></pre></td></tr></table></figure><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>安装后，检测环境变量是否配置好：<br><br>打开命令行窗口，输入命令<code>java -version</code>回显如下则已配置好：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;<span class="title">java</span> -<span class="title">version</span></span></span><br><span class="line"><span class="function"><span class="title">java</span> <span class="title">version</span> "1.7.0<span class="title">_80</span>-<span class="title">ea</span>"</span></span><br><span class="line"><span class="function"><span class="title">Java</span>(<span class="title">TM</span>) <span class="title">SE</span> <span class="title">Runtime</span> <span class="title">Environment</span> (<span class="title">build</span> 1.7.0<span class="title">_80</span>-<span class="title">ea</span>-<span class="title">b05</span>)</span></span><br><span class="line"><span class="function"><span class="title">Java</span> <span class="title">HotSpot</span>(<span class="title">TM</span>) 64-<span class="title">Bit</span> <span class="title">Server</span> <span class="title">VM</span> (<span class="title">build</span> 24.80-<span class="title">b07</span>, <span class="title">mixed</span> <span class="title">mode</span>)</span></span><br></pre></td></tr></table></figure></p><p>如若回显其它信息，则需要手动配置环境变量：<br></p><blockquote><p>参见<a href="https://www.baidu.com/s?wd=jdk1.8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener">JDK1.8环境变量配置</a></p></blockquote><h2 id="Path环境变量的作用"><a href="#Path环境变量的作用" class="headerlink" title="Path环境变量的作用"></a>Path环境变量的作用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">操作系统外部命令搜索路径。例如：ipconfig等。</span><br></pre></td></tr></table></figure><h2 id="classpath环境变量的作用"><a href="#classpath环境变量的作用" class="headerlink" title="classpath环境变量的作用"></a>classpath环境变量的作用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类文件搜索路径。例如：在编译Demo.java后，会在当前文件夹下生成Demo.class，运行时java Demo中Demo就是指的class文件，之所以能找到Demo.class，是因为classpath中设置了“.”</span><br></pre></td></tr></table></figure><h2 id="JDK目录下的东西有什么用"><a href="#JDK目录下的东西有什么用" class="headerlink" title="JDK目录下的东西有什么用"></a>JDK目录下的东西有什么用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bin:        java用到的所有命令（可执行文件）都在这里，例如javac</span><br><span class="line">demo:       java的一些官方例子</span><br><span class="line">sample:     java的一些官方例子</span><br><span class="line">include:    里面是C语言程序</span><br><span class="line">jre:        java运行时环境</span><br><span class="line">lib:        java需要的包（library）文件</span><br><span class="line">src.zip:    jdk的源码</span><br></pre></td></tr></table></figure><h2 id="什么是JRE"><a href="#什么是JRE" class="headerlink" title="什么是JRE"></a>什么是JRE</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">全称为Java Runtime Environment，即Java运行时环境。</span><br><span class="line">包括以下部分：</span><br><span class="line">    <span class="number">1</span>.JVM（Java Virtual Machine）：</span><br><span class="line">        它是由软件虚拟出来的一个计算机，因此实现了跨平台。参见图<span class="number">1</span>.<span class="number">1</span>。</span><br><span class="line">    <span class="number">2</span>.Java平台核心类文件。以后遇到再讲。</span><br><span class="line">    <span class="number">3</span>.其他支持文件。</span><br></pre></td></tr></table></figure><p><img src="/img/java/1_1_02_jvm.png" alt="图1.1。JVM的作用流程"></p><h2 id="清纯小妹"><a href="#清纯小妹" class="headerlink" title="清纯小妹"></a>清纯小妹</h2><p><img src="/img/girls/girls-20150701.jpg" alt="清纯小妹"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JDK下载&quot;&gt;&lt;a href=&quot;#JDK下载&quot; class=&quot;headerlink&quot; title=&quot;JDK下载&quot;&gt;&lt;/a&gt;JDK下载&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;注意：JDK有多个版本，请注意按照系统架构选择相应版本。&lt;br&gt;&lt;br&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>《Monkey Java》课程1.0之前言</title>
    <link href="https://blog.sunjiajia.com/2015/06/30/monkey-java-basic-courses-1-0/"/>
    <id>https://blog.sunjiajia.com/2015/06/30/monkey-java-basic-courses-1-0/</id>
    <published>2015-06-30T03:04:27.000Z</published>
    <updated>2018-08-02T03:57:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>《Monkey Java》系列介绍了学习Android所必需的Java基础知识，<br>是进一步学习《Monkey Android》课程的基础。</p><p>所涉及的Java知识属于入门级，仅仅为学习Android作铺垫。我们在《Monkey Java》这个课程中，从最简单的Java基本语法，基本数据类型开始学习，逐渐讲解Android开发中会经常用到的Java知识点。</p><h2 id="学习对象"><a href="#学习对象" class="headerlink" title="学习对象"></a>学习对象</h2><blockquote><p>   1.对Android开发有浓厚兴趣的；<br><br>   2.没有Java基础的；</p></blockquote><h2 id="学习理念"><a href="#学习理念" class="headerlink" title="学习理念"></a>学习理念</h2><blockquote><p>只学有用的！珍惜那杀猪刀般的岁月！</p></blockquote><h2 id="清纯小妹"><a href="#清纯小妹" class="headerlink" title="清纯小妹"></a>清纯小妹</h2><p><img src="/img/girls/girls-20150630.jpg" alt="清纯小妹"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;《Monkey Java》系列介绍了学习Android所必需的Java基础知识，&lt;br&gt;是进一步学习《Monkey Android》课程的基
      
    
    </summary>
    
      <category term="《Monkey Java》" scheme="https://blog.sunjiajia.com/categories/%E3%80%8AMonkey-Java%E3%80%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="Java" scheme="https://blog.sunjiajia.com/tags/Java/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Android完整Api文档离线下载</title>
    <link href="https://blog.sunjiajia.com/2015/06/24/android-api-document-download/"/>
    <id>https://blog.sunjiajia.com/2015/06/24/android-api-document-download/</id>
    <published>2015-06-24T01:08:33.000Z</published>
    <updated>2018-08-02T03:57:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时我们需要在离线的情况下，阅读完整的Android官方文档。</p><p>###下载地址</p><blockquote><p><a href="http://dl-ssl.google.com/android/repository/docs-17_r02.zip" target="_blank" rel="noopener">API Level 17</a></p></blockquote><blockquote><p><a href="http://dl-ssl.google.com/android/repository/docs-18_r02.zip" target="_blank" rel="noopener">API Level 18</a></p></blockquote><blockquote><p><a href="http://dl-ssl.google.com/android/repository/docs-19_r02.zip" target="_blank" rel="noopener">API Level 19</a></p></blockquote><blockquote><p><a href="http://dl-ssl.google.com/android/repository/docs-L_r01.zip" target="_blank" rel="noopener">Android-L API doc</a></p></blockquote><blockquote><p><a href="https://dl-ssl.google.com/android/repository/docs-22_r01.zip" target="_blank" rel="noopener">API Level 22</a></p></blockquote><p>###OVeR ~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时我们需要在离线的情况下，阅读完整的Android官方文档。&lt;/p&gt;
&lt;p&gt;###下载地址&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://dl-ssl.google.com/android/repository/docs-17_r02.zip&quot; 
      
    
    </summary>
    
      <category term="Android新手" scheme="https://blog.sunjiajia.com/categories/Android%E6%96%B0%E6%89%8B/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="新手" scheme="https://blog.sunjiajia.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Android L+ Theme 与 Toolbar 实例</title>
    <link href="https://blog.sunjiajia.com/2015/06/19/android-material-theme-and-toolbar/"/>
    <id>https://blog.sunjiajia.com/2015/06/19/android-material-theme-and-toolbar/</id>
    <published>2015-06-19T08:51:52.000Z</published>
    <updated>2018-08-02T03:57:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着Android L和M的发布，app的Material  Design也逐渐普及。材料设计是良心之作，不仅逐渐推动Android琳琅满目的app界面的统一，而且使开发者更加关注app的功能，而非UI设计。于是乎，我也开始学习它，这里随着学习的进度会写相应的博文。</p><blockquote><p>有关Material Design的学习资料还是Google的官方文档最好，<br>这里给出有分享精神的小伙伴们的翻译项目<a href="http://design.1sters.com/" target="_blank" rel="noopener">Material Design 中文版</a>,<br>供大家学习与参考。</p></blockquote><p>##Android L +的Theme<br>细心的朋友会发现，Material 的主题有：具体有什么效果，自己试下。</p><ul><li>@android:style/Theme.Material</li><li>@android:style/Theme.Material.Light</li><li>@android:style/Theme.Material.Light.DarkActionBar</li></ul><p>与之对应的向下（L -）兼容Theme:</p><ul><li>Theme.AppCompat</li><li>Theme.AppCompat.Light</li><li>Theme.AppCompat.Light.DarkActionBar</li></ul><h2 id="Toolbar的用法"><a href="#Toolbar的用法" class="headerlink" title="Toolbar的用法"></a>Toolbar的用法</h2><p>Toolbar的引入又是一个良心之作啊，之前的actionbar实在难用，很不方便。下面就看下Toolbar的用法，以及<strong>状态栏沉浸</strong>的用法。</p><h3 id="Toolbar就是一个ViewGroup"><a href="#Toolbar就是一个ViewGroup" class="headerlink" title="Toolbar就是一个ViewGroup"></a>Toolbar就是一个ViewGroup</h3><p>简单一点儿说就是，使用Toolbar，需要在布局文件xml中引入：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后需要在Activity中使用它：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">setSupportActionBar(mToolbar);</span><br></pre></td></tr></table></figure></p><h3 id="Toolbar的定制"><a href="#Toolbar的定制" class="headerlink" title="Toolbar的定制"></a>Toolbar的定制</h3><p>先看看本实例中Toolbar的样子吧，然后再来说Toolbar的一些属性，如图：<br><img src="/img/201506/toolbar_attribute.png" alt="Toolbar与statusbar颜色属性详图"></p><p>####xml style属性：</p><ul><li>colorPrimaryDark：状态栏的颜色（可用来实现沉浸效果）</li><li>colorPrimary: Toolbar的背景颜色 （xml中用android:background=”?attr/colorPrimary”指定）</li><li>android:textColorPrimary：Toolbar中文字的颜色，设置后Menu Item的字体颜色也会跟随</li><li>colorAccent：图中没有示例出来，这个是例如EditText正在输入时，RadioButton选中时的颜色（自己动手试下）</li></ul><h4 id="xml属性："><a href="#xml属性：" class="headerlink" title="xml属性："></a>xml属性：</h4><ul><li>app:title=”App Title”：Toolbar中的App  Title</li><li>app:subtitle=”Sub Title” ：Toobar中的小标题</li><li>app:navigationIcon=”@android:drawable/ic_menu_sort_by_size” ： 导航图标（注意和Logo的区别）</li></ul><p>####用java代码设置：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mToolbar.setTitle(<span class="string">"App Title"</span>); <span class="comment">//设置Toolbar标题</span></span><br><span class="line">mToolbar.setSubtitle(<span class="string">"Sub Title"</span>); <span class="comment">//设置Toolbar 副标题</span></span><br><span class="line">mToolbar.setLogo(R.mipmap.ic_launcher);<span class="comment">//设置Toolbar的Logo</span></span><br><span class="line"><span class="comment">//设置Toolbar的 导航图标</span></span><br><span class="line">mToolbar.setNavigationIcon(android.R.drawable.ic_menu_sort_by_size);</span><br></pre></td></tr></table></figure></p><p>如图：<br><img src="/img/201506/toolbar_demo.png" alt="Toolbar的属性设置"></p><p>###完整代码</p><blockquote><p>源码下载：<br><a href="http://download.csdn.net/detail/androidmonkey/8824337" target="_blank" rel="noopener">Toolbar实例源码下载</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;随着Android L和M的发布，app的Material  Design也逐渐普及。材料设计是良心之作，不仅逐渐推动Android琳琅满目
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>健身日记</title>
    <link href="https://blog.sunjiajia.com/2015/05/29/fitness-notes/"/>
    <id>https://blog.sunjiajia.com/2015/05/29/fitness-notes/</id>
    <published>2015-05-29T13:39:04.000Z</published>
    <updated>2018-08-02T03:57:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="健身日记"><a href="#健身日记" class="headerlink" title="健身日记"></a>健身日记</h1><hr><blockquote><p>身体是码（ge）字（ming）的本钱。没有一个好身体，这辈子不管拥有什么，都是个白搭啊。这篇博文会随着我的健身锻炼，每日更新运动内容，时刻鞭策懒惰的身体。</p></blockquote><hr><h2 id="公元2015年"><a href="#公元2015年" class="headerlink" title="公元2015年"></a>公元2015年</h2><p><strong>05.01 ~ 05.13</strong><br>早上：跑步6km左右<br>晚上：跑步6km左右<br>其它：<a href="http://sunjiajia.com/2015/05/07/daily-exercise/" target="_blank" rel="noopener">安排的组合操一组</a></p><p><strong>05.14</strong><br>上午：卷腹250下<br>下午：卷腹200下，仰卧起坐60下，哑铃手臂训练200下。<br>晚上：跑步7km，平均6分/千米；结束后再次做卷腹100个，V字起50下。</p><p><strong>05.15</strong><br>早上：跑步6km，卷腹100个，V字起50下。今天有点累，做的少。下午补上。<br>下午：组合操<code>胸&amp;三头</code>，卷腹100下，V字起80下。今天实在是做不动，应该是没有休息好～！<br>晚上：跑步7km，卷腹200下。</p><p><strong>05.16</strong><br>早上：卷腹150下，V字起50下。<br>下午：太累，没运动，怕伤身体。<br>晚上：跑步7km，时间40分钟，速度有了较大提高；卷腹100下，V字起50下。</p><p><strong>05.17</strong><br>休息一天。</p><p><strong>05.18</strong><br>早上：跑步6.0km，本打算跑7，结果跑到5km下雨了。<br>中午：突然想起腹肌撕裂者，做了一节，视频如下：</p><p><iframe height="360" width="480" src="http://player.youku.com/embed/XNjM5MjQwNjE2" frameborder="0" allowfullscreen></iframe><br>下午：腿臀组合操一组。<br>晚上：快走5km。下午做<code>俯卧后抬腿</code>的时候，不小心拉疼了筋儿，所以选择快走。</p><p><strong>05.19</strong><br>早上：跑步8km，卷腹100下。昨晚3点半才睡，5点半又起床了。<br>下午：卷腹200个，3分21秒做完，也就是平均1秒/卷；肩膀组合操一节。<br>晚上：跑步5km，快走2km。V Up做了50个。腹部有撕裂的感觉！</p><p><strong>05.20</strong><br>早上：快走30分钟。卷腹100下。上午半截儿时又100卷腹。<br>晚上：跑步6km，快走2km，V Up 50个。</p><p><strong>05.21</strong><br>早上：跑步6km。卷腹60个。腹部实在是撕裂的疼啊！10点做腹肌撕裂者～！<br>下午：偷懒。。。<br>晚上：快走3km。偷懒。。</p><p><strong>05.22</strong><br>早上：睡了个懒觉<br>下午：又补了个觉<br>晚上：跑步7km。</p><p><strong>05.23</strong><br>早上：睡了懒觉。也许是前一阵在量太大，这几天突然很累。<br>上午：卷腹100个。<br>下午：肩膀三头组合操一组。<br>晚上：快跑6KM。</p><p><strong>05.24</strong><br>早上：睡了懒觉。<br>下午：200个卷腹<br>晚上：快走3KM。</p><p><strong>05.25</strong><br>早上：跑步5KM。卷腹200个。<br>下午：卷腹200个，肩膀三头组合操一套。<br>晚上：快走2KM。明天早上开始加大强度了！</p><p><strong>05.26</strong><br>早上：跑步6KM。负重2.7kg小哑铃卷腹，没有计数多少个，直到做不动为止<br>下午：偷懒<br>晚上：跑步4KM，快走1KM。</p><p><strong>05.27</strong><br>早上：跑步5KM。卷腹120个。腹肌侧拉50个。<br>下午：组合操半套。<br>晚上：跑步5KM，拉伸20分钟。</p><p><strong>05.28</strong><br>全天休息，为了回归时的运动质量提升。<br>最近发现跑步距离与速度再难提升，发现是由于每天运动，身体一直处于疲惫状态，需要休息下，做个提升。</p><p><strong>05.29</strong><br>早上：起来准备去运动了，没想到下雨了。今天如果天晴的话，就会去运动！<br>下午：偷懒了。<br>晚上：偷懒了！不该啊！</p><p><strong>05.30</strong><br>上午：早上有大雾！没能跑步，腾空卷腹150下，半晌儿再来150个！V up起100个！</p><hr><blockquote><p>说明：每次运动完及时记录。有兴趣的可以一起讨论健身方方面面。</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;健身日记&quot;&gt;&lt;a href=&quot;#健身日记&quot; class=&quot;headerlink&quot; title=&quot;健身日记&quot;&gt;&lt;/a&gt;健身日记&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;身体是码（ge）字（ming）的本钱。没有一个好身体，这辈子不管拥有什么，都是个白搭啊。
      
    
    </summary>
    
      <category term="生活点滴" scheme="https://blog.sunjiajia.com/categories/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="健身" scheme="https://blog.sunjiajia.com/tags/%E5%81%A5%E8%BA%AB/"/>
    
      <category term="跑步" scheme="https://blog.sunjiajia.com/tags/%E8%B7%91%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装字体and切换默认字体</title>
    <link href="https://blog.sunjiajia.com/2015/05/10/ubuntu-fonts/"/>
    <id>https://blog.sunjiajia.com/2015/05/10/ubuntu-fonts/</id>
    <published>2015-05-10T02:57:10.000Z</published>
    <updated>2018-08-02T03:56:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu系统安装好后，默认字体对于中文的支持看上去不太美丽，于是很多朋友可能需要设置系统的默认字体为自己喜欢的字体。本文主要介绍如何解决这两个问题。</p><h3 id="安装字体："><a href="#安装字体：" class="headerlink" title="安装字体："></a>安装字体：</h3><p>以微软雅黑字体为例（其他的宋体、黑体等点阵字体都一样的），我们的雅黑字体文件是：msyh.ttf(常规字体)和msyhbd.ttf(微软雅黑加粗字体)，该字体可在widows目录的Fonts目录下找到，如果没有，也可以从网上下载。由于我是双系统，我直接从Win7中复制了 msyh.ttf和msyhbd.ttf （都在C:\Windows\Fonts下面，搜索即得）到Ubuntu里桌面上的文件夹font下（~/Desktop/font）。</p><blockquote><p>1.在/usr/share/fonts/下新建文件夹 如：winFonts目录，准备把从windows下拷贝过来的字体都放在这个目录里，这里就是把雅黑字体msyh.ttf和msyhbd.ttf放进来：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/share/fonts/winFonts</span><br></pre></td></tr></table></figure><blockquote><p>2.然后将字体文件拷贝到此文件夹下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp ~/Desktop/font/*.ttf /usr/share/fonts/winFonts/</span><br></pre></td></tr></table></figure><blockquote><p> 3.然后，改变权限:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 755 /usr/share/fonts/winFonts/*.ttf</span><br></pre></td></tr></table></figure><blockquote><p>4.开始安装：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/fonts/winFonts/</span><br><span class="line">sudo mkfontscale （创建雅黑字体的fonts.scale文件，它用来控制字体旋转缩放）</span><br><span class="line">sudo mkfontdir （创建雅黑字体的fonts.dir文件，它用来控制字体粗斜体产生）</span><br><span class="line">sudo <span class="built_in">fc</span>-cache -fv （建立字体缓存信息，也就是让系统认识雅黑）</span><br></pre></td></tr></table></figure><blockquote><p>5.然后再用unity-tweak-tool或者ubuntu-tweak设置字体即可。</p></blockquote><ul><li>搬运自：<a href="http://my.oschina.net/itblog/blog/278566" target="_blank" rel="noopener">原文链接</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu系统安装好后，默认字体对于中文的支持看上去不太美丽，于是很多朋友可能需要设置系统的默认字体为自己喜欢的字体。本文主要介绍如何解决这两个问题。&lt;/p&gt;
&lt;h3 id=&quot;安装字体：&quot;&gt;&lt;a href=&quot;#安装字体：&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="系统相关" scheme="https://blog.sunjiajia.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="linux" scheme="https://blog.sunjiajia.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>程序员也要有个好身体</title>
    <link href="https://blog.sunjiajia.com/2015/05/07/daily-exercise/"/>
    <id>https://blog.sunjiajia.com/2015/05/07/daily-exercise/</id>
    <published>2015-05-07T01:25:53.000Z</published>
    <updated>2018-08-02T03:56:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="好身体是码字的前提"><a href="#好身体是码字的前提" class="headerlink" title="好身体是码字的前提"></a>好身体是码字的前提</h3><p>一年前就开始一些简单的健身了，但是都没有完全坚持下来，总是断断续续的，因此没有效果。原因其实只有一个————<code>懒</code>。<br>随着每天坐在电脑前的时间越来越长，<code>颈椎、腰椎</code>甚至<code>臀部</code>都开始<code>有那么点儿</code>的<code>僵硬</code>，时不时还疼上个一两天，<code>懒</code>字就在这时得到了升华————<code>病</code>。<br>我们程序员或者和IT关系比较密切的工人，大多数都会慢慢的走进这个<code>境界</code>，听句劝：<code>还没有把健身当回事儿</code>的兄弟姐妹们要行动起来了。</p><hr><h3 id="有计划的健身"><a href="#有计划的健身" class="headerlink" title="有计划的健身"></a>有计划的健身</h3><p>5月当头，我就开始了健身计划，在微博上请教一个大号（<a href="http://weibo.com/meinvjianshen" target="_blank" rel="noopener">@美女健身宝典</a>），制定了前期的计划；计划月中旬进入状态之后，再次加大强度，开始<code>腹肌撕裂者</code>。</p><blockquote><p>目标1：6月当头时，能初见形状，肚子上的赘肉消灭差不多；<br>目标2：7月当头时，腹肌显现出来并有块状；<br>目标3：8月当头时，（完成目标1、2再来填写）。</p></blockquote><hr><h3 id="健身装备（入门级）"><a href="#健身装备（入门级）" class="headerlink" title="健身装备（入门级）"></a>健身装备（入门级）</h3><table><thead><tr><th>名称</th><th style="text-align:right">价格</th></tr></thead><tbody><tr><td>Adidas AdiPure M18103 训练鞋</td><td style="text-align:right">￥799</td></tr><tr><td>瑜伽垫一个</td><td style="text-align:right">￥49</td></tr><tr><td>哑铃套装一套</td><td style="text-align:right">￥249</td></tr><tr><td>仰卧板一个</td><td style="text-align:right">￥200</td></tr><tr><td>合计</td><td style="text-align:right">￥1297</td></tr></tbody></table><p>如图：<br><img src="/img/201505/exercise-equipments-1.jpg" alt="运动装备1"></p><hr><h3 id="运动计划"><a href="#运动计划" class="headerlink" title="运动计划"></a>运动计划</h3><h4 id="按照每天锻炼不同部位分组"><a href="#按照每天锻炼不同部位分组" class="headerlink" title=" 按照每天锻炼不同部位分组"></a><strong> 按照每天锻炼不同部位分组</strong></h4><blockquote><ul><li>我的安排是每天<code>18：00</code>左右开始，一天一个分组，轮流完继续循环。</li></ul></blockquote><table><thead><tr><th>部位</th><th>动作名称</th><th>运动量</th></tr></thead><tbody><tr><td>胸、三头</td><td>——</td><td>发力呼气，收回吸气，3～4组，每组20次</td></tr><tr><td>——</td><td>平板哑铃卧推</td><td>——</td></tr><tr><td>——</td><td>上斜哑铃卧推</td><td>——</td></tr><tr><td>——</td><td>撑椅子俯卧撑</td><td>——</td></tr><tr><td>——</td><td>坐姿哑铃飞鸟</td><td>——</td></tr><tr><td>——</td><td>哑铃颈后臂屈伸</td><td>——</td></tr><tr><td>——</td><td>俯身哑铃臂屈伸</td><td>——</td></tr></tbody></table><hr><table><thead><tr><th>部位</th><th>动作名称</th><th>运动量</th></tr></thead><tbody><tr><td>背、二头</td><td>——</td><td>发力呼气，收回吸气，3～4组，每组20次</td></tr><tr><td>——</td><td>俯身哑铃划船</td><td>——</td></tr><tr><td>——</td><td>双臂反卧划船</td><td>——</td></tr><tr><td>——</td><td>屈腿硬拉</td><td>——</td></tr><tr><td>——</td><td>锤土弯举</td><td>——</td></tr><tr><td>——</td><td>坐姿集中弯举</td><td>——</td></tr><tr><td>——</td><td>旋转弯举</td><td>——</td></tr></tbody></table><hr><table><thead><tr><th>部位</th><th>动作名称</th><th>运动量</th></tr></thead><tbody><tr><td>肩膀</td><td>——</td><td>发力呼气，收回吸气，3～4组，每组20次</td></tr><tr><td>——</td><td>肩上推举</td><td>——</td></tr><tr><td>——</td><td>侧平举</td><td>——</td></tr><tr><td>——</td><td>前平举</td><td>——</td></tr><tr><td>——</td><td>俯身飞鸟（俯身侧平举）</td><td>——</td></tr><tr><td>——</td><td>开肘划船（wide raw）</td><td>——</td></tr></tbody></table><hr><table><thead><tr><th>部位</th><th>动作名称</th><th>运动量</th></tr></thead><tbody><tr><td>腿，臀</td><td>——</td><td>发力呼气，收回吸气，3～4组，每组20次</td></tr><tr><td>——</td><td>哑铃深蹲</td><td>——</td></tr><tr><td>——</td><td>哑铃酒杯蹲</td><td>——</td></tr><tr><td>——</td><td>哑铃箭步蹲</td><td>——</td></tr><tr><td>——</td><td>屈腿硬拉</td><td>——</td></tr><tr><td>——</td><td>负重哑铃臀桥</td><td>——</td></tr><tr><td>——</td><td>俯卧后抬腿</td><td>——</td></tr><tr><td>——</td><td>提踵</td><td>——</td></tr></tbody></table><hr><h4 id="瘦肚子"><a href="#瘦肚子" class="headerlink" title=" 瘦肚子  "></a><strong> 瘦肚子  </strong></h4><blockquote><ul><li>坚持每天上午、下午各160个卷腹；</li><li>分组做，可以一次40个4组，或者其它组合。</li></ul></blockquote><hr><h4 id="定时跑步"><a href="#定时跑步" class="headerlink" title=" 定时跑步 "></a><strong> 定时跑步 </strong></h4><blockquote><ul><li>我安排在每天<code>早上、晚上</code>各跑一次，<code>每次7Km+，1h左右跑完</code>，具体时间为：</li><li>早上<code>5：00</code>起床，“穿、洗、漱、拉”。“拉”是为了排除异物，跑步轻松；</li><li>晚上<code>20：00</code>左右，开始在附近的塑胶跑道跑步。</li></ul></blockquote><p>注意：</p><blockquote><ul><li>新手跑步如果跑不下来，可以分阶段跑，跑前记得<code>充足热身拉伸</code>，我的经历：<code>4Km跑、1Km歇、3Km跑</code>；</li><li>建议跑步之前学习下跑步要领，这里附上一个视频。</li></ul></blockquote><embed src="http://player.youku.com/player.php/sid/XODE3NDQyNTE2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash"><hr><h3 id="记录运动轨迹"><a href="#记录运动轨迹" class="headerlink" title="记录运动轨迹"></a>记录运动轨迹</h3><p>每流下一滴汗水，就会有一份收获，人生如此，健身亦是如此。因此，一定要使用自己习惯的方式来记录自己的运动轨迹。</p><blockquote><p>1.跑步时，要记录跑步的速度，时间，距离等重要数据，推荐是使用<code>Nike Running</code>或者<code>咕咚</code>。<br>2.每次运动结束后，要及时记录运动的感受；我使用的方式是在电脑上<code>新建一个txt文档</code>。</p></blockquote><hr><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>本打算在这篇文章末尾的文字，都用来记录我每天的运动轨迹，但是突然发现，有可能导致自己不成熟的健身经验误导广大火眼金睛般的程序员，所以还是免了吧；</p><blockquote><p><strong> 程序员不易，身体健康不易，且码且运动。</strong></p></blockquote><p>不过我的跑步记录都会用Nike Running同步到我的微博上，各位跑友，我们可以在微博上交流，我的微博<a href="http://weibo.com/androidmonkey" target="_blank" rel="noopener">@安卓猴</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;好身体是码字的前提&quot;&gt;&lt;a href=&quot;#好身体是码字的前提&quot; class=&quot;headerlink&quot; title=&quot;好身体是码字的前提&quot;&gt;&lt;/a&gt;好身体是码字的前提&lt;/h3&gt;&lt;p&gt;一年前就开始一些简单的健身了，但是都没有完全坚持下来，总是断断续续的，因此没有效果。
      
    
    </summary>
    
      <category term="生活点滴" scheme="https://blog.sunjiajia.com/categories/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="健身" scheme="https://blog.sunjiajia.com/tags/%E5%81%A5%E8%BA%AB/"/>
    
      <category term="跑步" scheme="https://blog.sunjiajia.com/tags/%E8%B7%91%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>Android中shape的使用</title>
    <link href="https://blog.sunjiajia.com/2015/05/06/android-shape-attribute/"/>
    <id>https://blog.sunjiajia.com/2015/05/06/android-shape-attribute/</id>
    <published>2015-05-06T02:46:11.000Z</published>
    <updated>2018-08-02T03:56:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android中的drawable resource的属性太多，进阶路上必须要记住啊 </strong></p><ul><li><p>看了下面的一段code就明白了：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 实心 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#ff9d77"</span>/&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 渐变 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:startColor</span>=<span class="string">"#ff8c00"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:endColor</span>=<span class="string">"#FFFFFF"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:angle</span>=<span class="string">"270"</span> /&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 描边 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:width</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:color</span>=<span class="string">"#dcdcdc"</span> /&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 圆角 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:radius</span>=<span class="string">"2dp"</span> /&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 间隔 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:left</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:top</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:right</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:bottom</span>=<span class="string">"10dp"</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>稍微解释一下啊：</p><pre><code>solid：          实心，就是填充的意思    android:color    指定填充的颜色gradient         渐变    android:startColor      起始颜色    android:endColor        结束颜色    android:angle           渐变角度，必须为45的整数倍。    （另外渐变默认的模式为android:type=&quot;linear&quot;，即线性渐变，可以指定                渐变为径向渐变，android:type=&quot;radial&quot;，径向渐变需要指定半径                android:gradientRadius=&quot;50&quot;）stroke           描边    android:width=&quot;2dp&quot;      描边的宽度    android:color            描边的颜色。    我们还可以把描边弄成虚线的形式，设置方式为：        android:dashWidth=&quot;5dp&quot;    表示&apos;-&apos;这样一个横线的宽度        android:dashGap=&quot;3dp&quot;      表示之间隔开的距离corners           圆角       android:radius          为角的弧度，值越大角越圆。    我们还可以把四个角设定成不同的角度，方法为：    &lt;corners        android:topRightRadius=&quot;20dp&quot;      右上角        android:bottomLeftRadius=&quot;20dp&quot;    右下角        android:topLeftRadius=&quot;1dp&quot;        左上角        android:bottomRightRadius=&quot;0dp&quot;    左下角     /&gt;    这里有个地方需要注意:    bottomLeftRadius          右下角，而不是左下角,记得别搞错了padding         间隔    这个就不用多说了，XML布局文件中经常用到。</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; Android中的drawable resource的属性太多，进阶路上必须要记住啊 &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;看了下面的一段code就明白了：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://blog.sunjiajia.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://blog.sunjiajia.com/tags/Android/"/>
    
      <category term="进阶" scheme="https://blog.sunjiajia.com/tags/%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.sunjiajia.com/2015/05/02/hello-world/"/>
    <id>https://blog.sunjiajia.com/2015/05/02/hello-world/</id>
    <published>2015-05-01T16:00:00.000Z</published>
    <updated>2018-08-02T03:55:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io
      
    
    </summary>
    
    
  </entry>
  
</feed>
